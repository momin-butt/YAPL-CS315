Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    NEWLINE

Grammar

Rule 0     S' -> parent
Rule 1     parent -> lang
Rule 2     parent -> lang parent
Rule 3     lang -> expression SCOLON
Rule 4     lang -> variables SCOLON
Rule 5     lang -> print_stmt SCOLON
Rule 6     lang -> block
Rule 7     lang -> for_loop
Rule 8     lang -> struct SCOLON
Rule 9     lang -> struct_dec SCOLON
Rule 10    lang -> struct_assign SCOLON
Rule 11    lang -> struct_fetch SCOLON
Rule 12    lang -> empty
Rule 13    empty -> <empty>
Rule 14    print_stmt -> print_multiple_stmt
Rule 15    print_multiple_stmt -> PRINT LPAREN multiple RPAREN
Rule 16    multiple -> expression
Rule 17    multiple -> expression COMMA multiple
Rule 18    multiple -> struct_fetch
Rule 19    multiple -> struct_fetch COMMA multiple
Rule 20    struct -> STRUCT VARID LCURL struct_block RCURL
Rule 21    struct_block -> variables SCOLON
Rule 22    struct_block -> variables SCOLON struct_block
Rule 23    struct_dec -> VARID VARID
Rule 24    struct_assign -> VARID POINT variableassign
Rule 25    struct_fetch -> VARID POINT VARID
Rule 26    block -> LCURL parent RCURL
Rule 27    for_loop -> FOR LPAREN TYPE VARID EQUAL expression SCOLON expression SCOLON forupdate RPAREN block
Rule 28    variables -> variableassign
Rule 29    variables -> type_declare
Rule 30    variables -> type_assign
Rule 31    forupdate -> expression
Rule 32    forupdate -> variableassign
Rule 33    type_declare -> TYPE VARID
Rule 34    variableassign -> VARID EQUAL expression
Rule 35    type_assign -> TYPE VARID EQUAL expression
Rule 36    expression -> expression PLUS expression
Rule 37    expression -> expression MINUS expression
Rule 38    expression -> expression MULTIPLY expression
Rule 39    expression -> expression DIVIDE expression
Rule 40    expression -> MINUS expression
Rule 41    expression -> expression MOD expression
Rule 42    expression -> expression POWER expression
Rule 43    expression -> expression LESSER expression
Rule 44    expression -> expression GREATER expression
Rule 45    expression -> expression LESSEQUAL expression
Rule 46    expression -> expression GREATEQUAL expression
Rule 47    expression -> expression NOTEQUAL expression
Rule 48    expression -> expression DOUBLEQUAL expression
Rule 49    expression -> expression AND expression
Rule 50    expression -> expression OR expression
Rule 51    expression -> LPAREN expression RPAREN
Rule 52    expression -> expression DOUBLEPLUS
Rule 53    expression -> expression DOUBLEMINUS
Rule 54    expression -> NOT expression
Rule 55    expression -> VARID
Rule 56    expression -> INT
Rule 57    expression -> FLOAT
Rule 58    expression -> BOOL
Rule 59    expression -> CHAR
Rule 60    expression -> STRING
Rule 61    expression -> empty

Terminals, with rules where they appear

AND                  : 49
BOOL                 : 58
CHAR                 : 59
COMMA                : 17 19
DIVIDE               : 39
DOUBLEMINUS          : 53
DOUBLEPLUS           : 52
DOUBLEQUAL           : 48
EQUAL                : 27 34 35
FLOAT                : 57
FOR                  : 27
GREATEQUAL           : 46
GREATER              : 44
INT                  : 56
LCURL                : 20 26
LESSEQUAL            : 45
LESSER               : 43
LPAREN               : 15 27 51
MINUS                : 37 40
MOD                  : 41
MULTIPLY             : 38
NEWLINE              : 
NOT                  : 54
NOTEQUAL             : 47
OR                   : 50
PLUS                 : 36
POINT                : 24 25
POWER                : 42
PRINT                : 15
RCURL                : 20 26
RPAREN               : 15 27 51
SCOLON               : 3 4 5 8 9 10 11 21 22 27 27
STRING               : 60
STRUCT               : 20
TYPE                 : 27 33 35
VARID                : 20 23 23 24 25 25 27 33 34 35 55
error                : 

Nonterminals, with rules where they appear

block                : 6 27
empty                : 12 61
expression           : 3 16 17 27 27 31 34 35 36 36 37 37 38 38 39 39 40 41 41 42 42 43 43 44 44 45 45 46 46 47 47 48 48 49 49 50 50 51 52 53 54
for_loop             : 7
forupdate            : 27
lang                 : 1 2
multiple             : 15 17 19
parent               : 2 26 0
print_multiple_stmt  : 14
print_stmt           : 5
struct               : 8
struct_assign        : 10
struct_block         : 20 22
struct_dec           : 9
struct_fetch         : 11 18 19
type_assign          : 30
type_declare         : 29
variableassign       : 24 28 32
variables            : 4 21 22

Parsing method: LALR

state 0

    (0) S' -> . parent
    (1) parent -> . lang
    (2) parent -> . lang parent
    (3) lang -> . expression SCOLON
    (4) lang -> . variables SCOLON
    (5) lang -> . print_stmt SCOLON
    (6) lang -> . block
    (7) lang -> . for_loop
    (8) lang -> . struct SCOLON
    (9) lang -> . struct_dec SCOLON
    (10) lang -> . struct_assign SCOLON
    (11) lang -> . struct_fetch SCOLON
    (12) lang -> . empty
    (36) expression -> . expression PLUS expression
    (37) expression -> . expression MINUS expression
    (38) expression -> . expression MULTIPLY expression
    (39) expression -> . expression DIVIDE expression
    (40) expression -> . MINUS expression
    (41) expression -> . expression MOD expression
    (42) expression -> . expression POWER expression
    (43) expression -> . expression LESSER expression
    (44) expression -> . expression GREATER expression
    (45) expression -> . expression LESSEQUAL expression
    (46) expression -> . expression GREATEQUAL expression
    (47) expression -> . expression NOTEQUAL expression
    (48) expression -> . expression DOUBLEQUAL expression
    (49) expression -> . expression AND expression
    (50) expression -> . expression OR expression
    (51) expression -> . LPAREN expression RPAREN
    (52) expression -> . expression DOUBLEPLUS
    (53) expression -> . expression DOUBLEMINUS
    (54) expression -> . NOT expression
    (55) expression -> . VARID
    (56) expression -> . INT
    (57) expression -> . FLOAT
    (58) expression -> . BOOL
    (59) expression -> . CHAR
    (60) expression -> . STRING
    (61) expression -> . empty
    (28) variables -> . variableassign
    (29) variables -> . type_declare
    (30) variables -> . type_assign
    (14) print_stmt -> . print_multiple_stmt
    (26) block -> . LCURL parent RCURL
    (27) for_loop -> . FOR LPAREN TYPE VARID EQUAL expression SCOLON expression SCOLON forupdate RPAREN block
    (20) struct -> . STRUCT VARID LCURL struct_block RCURL
    (23) struct_dec -> . VARID VARID
    (24) struct_assign -> . VARID POINT variableassign
    (25) struct_fetch -> . VARID POINT VARID
    (13) empty -> .
    (34) variableassign -> . VARID EQUAL expression
    (33) type_declare -> . TYPE VARID
    (35) type_assign -> . TYPE VARID EQUAL expression
    (15) print_multiple_stmt -> . PRINT LPAREN multiple RPAREN

  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for VARID resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for LCURL resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for STRUCT resolved as shift
  ! shift/reduce conflict for TYPE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
    MINUS           shift and go to state 13
    LPAREN          shift and go to state 14
    NOT             shift and go to state 15
    VARID           shift and go to state 16
    INT             shift and go to state 17
    FLOAT           shift and go to state 18
    BOOL            shift and go to state 19
    CHAR            shift and go to state 20
    STRING          shift and go to state 21
    LCURL           shift and go to state 26
    FOR             shift and go to state 27
    STRUCT          shift and go to state 29
    SCOLON          reduce using rule 13 (empty -> .)
    PLUS            reduce using rule 13 (empty -> .)
    MULTIPLY        reduce using rule 13 (empty -> .)
    DIVIDE          reduce using rule 13 (empty -> .)
    MOD             reduce using rule 13 (empty -> .)
    POWER           reduce using rule 13 (empty -> .)
    LESSER          reduce using rule 13 (empty -> .)
    GREATER         reduce using rule 13 (empty -> .)
    LESSEQUAL       reduce using rule 13 (empty -> .)
    GREATEQUAL      reduce using rule 13 (empty -> .)
    NOTEQUAL        reduce using rule 13 (empty -> .)
    DOUBLEQUAL      reduce using rule 13 (empty -> .)
    AND             reduce using rule 13 (empty -> .)
    OR              reduce using rule 13 (empty -> .)
    DOUBLEPLUS      reduce using rule 13 (empty -> .)
    DOUBLEMINUS     reduce using rule 13 (empty -> .)
    $end            reduce using rule 13 (empty -> .)
    TYPE            shift and go to state 28
    PRINT           shift and go to state 30

  ! MINUS           [ reduce using rule 13 (empty -> .) ]
  ! LPAREN          [ reduce using rule 13 (empty -> .) ]
  ! NOT             [ reduce using rule 13 (empty -> .) ]
  ! VARID           [ reduce using rule 13 (empty -> .) ]
  ! INT             [ reduce using rule 13 (empty -> .) ]
  ! FLOAT           [ reduce using rule 13 (empty -> .) ]
  ! BOOL            [ reduce using rule 13 (empty -> .) ]
  ! CHAR            [ reduce using rule 13 (empty -> .) ]
  ! STRING          [ reduce using rule 13 (empty -> .) ]
  ! LCURL           [ reduce using rule 13 (empty -> .) ]
  ! FOR             [ reduce using rule 13 (empty -> .) ]
  ! STRUCT          [ reduce using rule 13 (empty -> .) ]
  ! TYPE            [ reduce using rule 13 (empty -> .) ]
  ! PRINT           [ reduce using rule 13 (empty -> .) ]

    parent                         shift and go to state 1
    lang                           shift and go to state 2
    expression                     shift and go to state 3
    variables                      shift and go to state 4
    print_stmt                     shift and go to state 5
    block                          shift and go to state 6
    for_loop                       shift and go to state 7
    struct                         shift and go to state 8
    struct_dec                     shift and go to state 9
    struct_assign                  shift and go to state 10
    struct_fetch                   shift and go to state 11
    empty                          shift and go to state 12
    variableassign                 shift and go to state 22
    type_declare                   shift and go to state 23
    type_assign                    shift and go to state 24
    print_multiple_stmt            shift and go to state 25

state 1

    (0) S' -> parent .



state 2

    (1) parent -> lang .
    (2) parent -> lang . parent
    (1) parent -> . lang
    (2) parent -> . lang parent
    (3) lang -> . expression SCOLON
    (4) lang -> . variables SCOLON
    (5) lang -> . print_stmt SCOLON
    (6) lang -> . block
    (7) lang -> . for_loop
    (8) lang -> . struct SCOLON
    (9) lang -> . struct_dec SCOLON
    (10) lang -> . struct_assign SCOLON
    (11) lang -> . struct_fetch SCOLON
    (12) lang -> . empty
    (36) expression -> . expression PLUS expression
    (37) expression -> . expression MINUS expression
    (38) expression -> . expression MULTIPLY expression
    (39) expression -> . expression DIVIDE expression
    (40) expression -> . MINUS expression
    (41) expression -> . expression MOD expression
    (42) expression -> . expression POWER expression
    (43) expression -> . expression LESSER expression
    (44) expression -> . expression GREATER expression
    (45) expression -> . expression LESSEQUAL expression
    (46) expression -> . expression GREATEQUAL expression
    (47) expression -> . expression NOTEQUAL expression
    (48) expression -> . expression DOUBLEQUAL expression
    (49) expression -> . expression AND expression
    (50) expression -> . expression OR expression
    (51) expression -> . LPAREN expression RPAREN
    (52) expression -> . expression DOUBLEPLUS
    (53) expression -> . expression DOUBLEMINUS
    (54) expression -> . NOT expression
    (55) expression -> . VARID
    (56) expression -> . INT
    (57) expression -> . FLOAT
    (58) expression -> . BOOL
    (59) expression -> . CHAR
    (60) expression -> . STRING
    (61) expression -> . empty
    (28) variables -> . variableassign
    (29) variables -> . type_declare
    (30) variables -> . type_assign
    (14) print_stmt -> . print_multiple_stmt
    (26) block -> . LCURL parent RCURL
    (27) for_loop -> . FOR LPAREN TYPE VARID EQUAL expression SCOLON expression SCOLON forupdate RPAREN block
    (20) struct -> . STRUCT VARID LCURL struct_block RCURL
    (23) struct_dec -> . VARID VARID
    (24) struct_assign -> . VARID POINT variableassign
    (25) struct_fetch -> . VARID POINT VARID
    (13) empty -> .
    (34) variableassign -> . VARID EQUAL expression
    (33) type_declare -> . TYPE VARID
    (35) type_assign -> . TYPE VARID EQUAL expression
    (15) print_multiple_stmt -> . PRINT LPAREN multiple RPAREN

  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for VARID resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for LCURL resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for STRUCT resolved as shift
  ! reduce/reduce conflict for $end resolved using rule 1 (parent -> lang .)
  ! reduce/reduce conflict for RCURL resolved using rule 1 (parent -> lang .)
  ! shift/reduce conflict for TYPE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
    $end            reduce using rule 1 (parent -> lang .)
    RCURL           reduce using rule 1 (parent -> lang .)
    MINUS           shift and go to state 13
    LPAREN          shift and go to state 14
    NOT             shift and go to state 15
    VARID           shift and go to state 16
    INT             shift and go to state 17
    FLOAT           shift and go to state 18
    BOOL            shift and go to state 19
    CHAR            shift and go to state 20
    STRING          shift and go to state 21
    LCURL           shift and go to state 26
    FOR             shift and go to state 27
    STRUCT          shift and go to state 29
    SCOLON          reduce using rule 13 (empty -> .)
    PLUS            reduce using rule 13 (empty -> .)
    MULTIPLY        reduce using rule 13 (empty -> .)
    DIVIDE          reduce using rule 13 (empty -> .)
    MOD             reduce using rule 13 (empty -> .)
    POWER           reduce using rule 13 (empty -> .)
    LESSER          reduce using rule 13 (empty -> .)
    GREATER         reduce using rule 13 (empty -> .)
    LESSEQUAL       reduce using rule 13 (empty -> .)
    GREATEQUAL      reduce using rule 13 (empty -> .)
    NOTEQUAL        reduce using rule 13 (empty -> .)
    DOUBLEQUAL      reduce using rule 13 (empty -> .)
    AND             reduce using rule 13 (empty -> .)
    OR              reduce using rule 13 (empty -> .)
    DOUBLEPLUS      reduce using rule 13 (empty -> .)
    DOUBLEMINUS     reduce using rule 13 (empty -> .)
    TYPE            shift and go to state 28
    PRINT           shift and go to state 30

  ! MINUS           [ reduce using rule 13 (empty -> .) ]
  ! LPAREN          [ reduce using rule 13 (empty -> .) ]
  ! NOT             [ reduce using rule 13 (empty -> .) ]
  ! VARID           [ reduce using rule 13 (empty -> .) ]
  ! INT             [ reduce using rule 13 (empty -> .) ]
  ! FLOAT           [ reduce using rule 13 (empty -> .) ]
  ! BOOL            [ reduce using rule 13 (empty -> .) ]
  ! CHAR            [ reduce using rule 13 (empty -> .) ]
  ! STRING          [ reduce using rule 13 (empty -> .) ]
  ! LCURL           [ reduce using rule 13 (empty -> .) ]
  ! FOR             [ reduce using rule 13 (empty -> .) ]
  ! STRUCT          [ reduce using rule 13 (empty -> .) ]
  ! TYPE            [ reduce using rule 13 (empty -> .) ]
  ! PRINT           [ reduce using rule 13 (empty -> .) ]
  ! $end            [ reduce using rule 13 (empty -> .) ]
  ! RCURL           [ reduce using rule 13 (empty -> .) ]

    lang                           shift and go to state 2
    parent                         shift and go to state 31
    expression                     shift and go to state 3
    variables                      shift and go to state 4
    print_stmt                     shift and go to state 5
    block                          shift and go to state 6
    for_loop                       shift and go to state 7
    struct                         shift and go to state 8
    struct_dec                     shift and go to state 9
    struct_assign                  shift and go to state 10
    struct_fetch                   shift and go to state 11
    empty                          shift and go to state 12
    variableassign                 shift and go to state 22
    type_declare                   shift and go to state 23
    type_assign                    shift and go to state 24
    print_multiple_stmt            shift and go to state 25

state 3

    (3) lang -> expression . SCOLON
    (36) expression -> expression . PLUS expression
    (37) expression -> expression . MINUS expression
    (38) expression -> expression . MULTIPLY expression
    (39) expression -> expression . DIVIDE expression
    (41) expression -> expression . MOD expression
    (42) expression -> expression . POWER expression
    (43) expression -> expression . LESSER expression
    (44) expression -> expression . GREATER expression
    (45) expression -> expression . LESSEQUAL expression
    (46) expression -> expression . GREATEQUAL expression
    (47) expression -> expression . NOTEQUAL expression
    (48) expression -> expression . DOUBLEQUAL expression
    (49) expression -> expression . AND expression
    (50) expression -> expression . OR expression
    (52) expression -> expression . DOUBLEPLUS
    (53) expression -> expression . DOUBLEMINUS

    SCOLON          shift and go to state 32
    PLUS            shift and go to state 33
    MINUS           shift and go to state 34
    MULTIPLY        shift and go to state 35
    DIVIDE          shift and go to state 36
    MOD             shift and go to state 37
    POWER           shift and go to state 38
    LESSER          shift and go to state 39
    GREATER         shift and go to state 40
    LESSEQUAL       shift and go to state 41
    GREATEQUAL      shift and go to state 42
    NOTEQUAL        shift and go to state 43
    DOUBLEQUAL      shift and go to state 44
    AND             shift and go to state 45
    OR              shift and go to state 46
    DOUBLEPLUS      shift and go to state 47
    DOUBLEMINUS     shift and go to state 48


state 4

    (4) lang -> variables . SCOLON

    SCOLON          shift and go to state 49


state 5

    (5) lang -> print_stmt . SCOLON

    SCOLON          shift and go to state 50


state 6

    (6) lang -> block .

    MINUS           reduce using rule 6 (lang -> block .)
    LPAREN          reduce using rule 6 (lang -> block .)
    NOT             reduce using rule 6 (lang -> block .)
    VARID           reduce using rule 6 (lang -> block .)
    INT             reduce using rule 6 (lang -> block .)
    FLOAT           reduce using rule 6 (lang -> block .)
    BOOL            reduce using rule 6 (lang -> block .)
    CHAR            reduce using rule 6 (lang -> block .)
    STRING          reduce using rule 6 (lang -> block .)
    LCURL           reduce using rule 6 (lang -> block .)
    FOR             reduce using rule 6 (lang -> block .)
    STRUCT          reduce using rule 6 (lang -> block .)
    TYPE            reduce using rule 6 (lang -> block .)
    PRINT           reduce using rule 6 (lang -> block .)
    SCOLON          reduce using rule 6 (lang -> block .)
    PLUS            reduce using rule 6 (lang -> block .)
    MULTIPLY        reduce using rule 6 (lang -> block .)
    DIVIDE          reduce using rule 6 (lang -> block .)
    MOD             reduce using rule 6 (lang -> block .)
    POWER           reduce using rule 6 (lang -> block .)
    LESSER          reduce using rule 6 (lang -> block .)
    GREATER         reduce using rule 6 (lang -> block .)
    LESSEQUAL       reduce using rule 6 (lang -> block .)
    GREATEQUAL      reduce using rule 6 (lang -> block .)
    NOTEQUAL        reduce using rule 6 (lang -> block .)
    DOUBLEQUAL      reduce using rule 6 (lang -> block .)
    AND             reduce using rule 6 (lang -> block .)
    OR              reduce using rule 6 (lang -> block .)
    DOUBLEPLUS      reduce using rule 6 (lang -> block .)
    DOUBLEMINUS     reduce using rule 6 (lang -> block .)
    $end            reduce using rule 6 (lang -> block .)
    RCURL           reduce using rule 6 (lang -> block .)


state 7

    (7) lang -> for_loop .

    MINUS           reduce using rule 7 (lang -> for_loop .)
    LPAREN          reduce using rule 7 (lang -> for_loop .)
    NOT             reduce using rule 7 (lang -> for_loop .)
    VARID           reduce using rule 7 (lang -> for_loop .)
    INT             reduce using rule 7 (lang -> for_loop .)
    FLOAT           reduce using rule 7 (lang -> for_loop .)
    BOOL            reduce using rule 7 (lang -> for_loop .)
    CHAR            reduce using rule 7 (lang -> for_loop .)
    STRING          reduce using rule 7 (lang -> for_loop .)
    LCURL           reduce using rule 7 (lang -> for_loop .)
    FOR             reduce using rule 7 (lang -> for_loop .)
    STRUCT          reduce using rule 7 (lang -> for_loop .)
    TYPE            reduce using rule 7 (lang -> for_loop .)
    PRINT           reduce using rule 7 (lang -> for_loop .)
    SCOLON          reduce using rule 7 (lang -> for_loop .)
    PLUS            reduce using rule 7 (lang -> for_loop .)
    MULTIPLY        reduce using rule 7 (lang -> for_loop .)
    DIVIDE          reduce using rule 7 (lang -> for_loop .)
    MOD             reduce using rule 7 (lang -> for_loop .)
    POWER           reduce using rule 7 (lang -> for_loop .)
    LESSER          reduce using rule 7 (lang -> for_loop .)
    GREATER         reduce using rule 7 (lang -> for_loop .)
    LESSEQUAL       reduce using rule 7 (lang -> for_loop .)
    GREATEQUAL      reduce using rule 7 (lang -> for_loop .)
    NOTEQUAL        reduce using rule 7 (lang -> for_loop .)
    DOUBLEQUAL      reduce using rule 7 (lang -> for_loop .)
    AND             reduce using rule 7 (lang -> for_loop .)
    OR              reduce using rule 7 (lang -> for_loop .)
    DOUBLEPLUS      reduce using rule 7 (lang -> for_loop .)
    DOUBLEMINUS     reduce using rule 7 (lang -> for_loop .)
    $end            reduce using rule 7 (lang -> for_loop .)
    RCURL           reduce using rule 7 (lang -> for_loop .)


state 8

    (8) lang -> struct . SCOLON

    SCOLON          shift and go to state 51


state 9

    (9) lang -> struct_dec . SCOLON

    SCOLON          shift and go to state 52


state 10

    (10) lang -> struct_assign . SCOLON

    SCOLON          shift and go to state 53


state 11

    (11) lang -> struct_fetch . SCOLON

    SCOLON          shift and go to state 54


state 12

    (12) lang -> empty .
    (61) expression -> empty .

  ! reduce/reduce conflict for SCOLON resolved using rule 12 (lang -> empty .)
  ! reduce/reduce conflict for PLUS resolved using rule 12 (lang -> empty .)
  ! reduce/reduce conflict for MINUS resolved using rule 12 (lang -> empty .)
  ! reduce/reduce conflict for MULTIPLY resolved using rule 12 (lang -> empty .)
  ! reduce/reduce conflict for DIVIDE resolved using rule 12 (lang -> empty .)
  ! reduce/reduce conflict for MOD resolved using rule 12 (lang -> empty .)
  ! reduce/reduce conflict for POWER resolved using rule 12 (lang -> empty .)
  ! reduce/reduce conflict for LESSER resolved using rule 12 (lang -> empty .)
  ! reduce/reduce conflict for GREATER resolved using rule 12 (lang -> empty .)
  ! reduce/reduce conflict for LESSEQUAL resolved using rule 12 (lang -> empty .)
  ! reduce/reduce conflict for GREATEQUAL resolved using rule 12 (lang -> empty .)
  ! reduce/reduce conflict for NOTEQUAL resolved using rule 12 (lang -> empty .)
  ! reduce/reduce conflict for DOUBLEQUAL resolved using rule 12 (lang -> empty .)
  ! reduce/reduce conflict for AND resolved using rule 12 (lang -> empty .)
  ! reduce/reduce conflict for OR resolved using rule 12 (lang -> empty .)
  ! reduce/reduce conflict for DOUBLEPLUS resolved using rule 12 (lang -> empty .)
  ! reduce/reduce conflict for DOUBLEMINUS resolved using rule 12 (lang -> empty .)
    MINUS           reduce using rule 12 (lang -> empty .)
    LPAREN          reduce using rule 12 (lang -> empty .)
    NOT             reduce using rule 12 (lang -> empty .)
    VARID           reduce using rule 12 (lang -> empty .)
    INT             reduce using rule 12 (lang -> empty .)
    FLOAT           reduce using rule 12 (lang -> empty .)
    BOOL            reduce using rule 12 (lang -> empty .)
    CHAR            reduce using rule 12 (lang -> empty .)
    STRING          reduce using rule 12 (lang -> empty .)
    LCURL           reduce using rule 12 (lang -> empty .)
    FOR             reduce using rule 12 (lang -> empty .)
    STRUCT          reduce using rule 12 (lang -> empty .)
    TYPE            reduce using rule 12 (lang -> empty .)
    PRINT           reduce using rule 12 (lang -> empty .)
    SCOLON          reduce using rule 12 (lang -> empty .)
    PLUS            reduce using rule 12 (lang -> empty .)
    MULTIPLY        reduce using rule 12 (lang -> empty .)
    DIVIDE          reduce using rule 12 (lang -> empty .)
    MOD             reduce using rule 12 (lang -> empty .)
    POWER           reduce using rule 12 (lang -> empty .)
    LESSER          reduce using rule 12 (lang -> empty .)
    GREATER         reduce using rule 12 (lang -> empty .)
    LESSEQUAL       reduce using rule 12 (lang -> empty .)
    GREATEQUAL      reduce using rule 12 (lang -> empty .)
    NOTEQUAL        reduce using rule 12 (lang -> empty .)
    DOUBLEQUAL      reduce using rule 12 (lang -> empty .)
    AND             reduce using rule 12 (lang -> empty .)
    OR              reduce using rule 12 (lang -> empty .)
    DOUBLEPLUS      reduce using rule 12 (lang -> empty .)
    DOUBLEMINUS     reduce using rule 12 (lang -> empty .)
    $end            reduce using rule 12 (lang -> empty .)
    RCURL           reduce using rule 12 (lang -> empty .)

  ! SCOLON          [ reduce using rule 61 (expression -> empty .) ]
  ! PLUS            [ reduce using rule 61 (expression -> empty .) ]
  ! MINUS           [ reduce using rule 61 (expression -> empty .) ]
  ! MULTIPLY        [ reduce using rule 61 (expression -> empty .) ]
  ! DIVIDE          [ reduce using rule 61 (expression -> empty .) ]
  ! MOD             [ reduce using rule 61 (expression -> empty .) ]
  ! POWER           [ reduce using rule 61 (expression -> empty .) ]
  ! LESSER          [ reduce using rule 61 (expression -> empty .) ]
  ! GREATER         [ reduce using rule 61 (expression -> empty .) ]
  ! LESSEQUAL       [ reduce using rule 61 (expression -> empty .) ]
  ! GREATEQUAL      [ reduce using rule 61 (expression -> empty .) ]
  ! NOTEQUAL        [ reduce using rule 61 (expression -> empty .) ]
  ! DOUBLEQUAL      [ reduce using rule 61 (expression -> empty .) ]
  ! AND             [ reduce using rule 61 (expression -> empty .) ]
  ! OR              [ reduce using rule 61 (expression -> empty .) ]
  ! DOUBLEPLUS      [ reduce using rule 61 (expression -> empty .) ]
  ! DOUBLEMINUS     [ reduce using rule 61 (expression -> empty .) ]


state 13

    (40) expression -> MINUS . expression
    (36) expression -> . expression PLUS expression
    (37) expression -> . expression MINUS expression
    (38) expression -> . expression MULTIPLY expression
    (39) expression -> . expression DIVIDE expression
    (40) expression -> . MINUS expression
    (41) expression -> . expression MOD expression
    (42) expression -> . expression POWER expression
    (43) expression -> . expression LESSER expression
    (44) expression -> . expression GREATER expression
    (45) expression -> . expression LESSEQUAL expression
    (46) expression -> . expression GREATEQUAL expression
    (47) expression -> . expression NOTEQUAL expression
    (48) expression -> . expression DOUBLEQUAL expression
    (49) expression -> . expression AND expression
    (50) expression -> . expression OR expression
    (51) expression -> . LPAREN expression RPAREN
    (52) expression -> . expression DOUBLEPLUS
    (53) expression -> . expression DOUBLEMINUS
    (54) expression -> . NOT expression
    (55) expression -> . VARID
    (56) expression -> . INT
    (57) expression -> . FLOAT
    (58) expression -> . BOOL
    (59) expression -> . CHAR
    (60) expression -> . STRING
    (61) expression -> . empty
    (13) empty -> .

  ! shift/reduce conflict for MINUS resolved as shift
    MINUS           shift and go to state 13
    LPAREN          shift and go to state 14
    NOT             shift and go to state 15
    VARID           shift and go to state 56
    INT             shift and go to state 17
    FLOAT           shift and go to state 18
    BOOL            shift and go to state 19
    CHAR            shift and go to state 20
    STRING          shift and go to state 21
    PLUS            reduce using rule 13 (empty -> .)
    MULTIPLY        reduce using rule 13 (empty -> .)
    DIVIDE          reduce using rule 13 (empty -> .)
    MOD             reduce using rule 13 (empty -> .)
    POWER           reduce using rule 13 (empty -> .)
    LESSER          reduce using rule 13 (empty -> .)
    GREATER         reduce using rule 13 (empty -> .)
    LESSEQUAL       reduce using rule 13 (empty -> .)
    GREATEQUAL      reduce using rule 13 (empty -> .)
    NOTEQUAL        reduce using rule 13 (empty -> .)
    DOUBLEQUAL      reduce using rule 13 (empty -> .)
    AND             reduce using rule 13 (empty -> .)
    OR              reduce using rule 13 (empty -> .)
    DOUBLEPLUS      reduce using rule 13 (empty -> .)
    DOUBLEMINUS     reduce using rule 13 (empty -> .)
    SCOLON          reduce using rule 13 (empty -> .)
    RPAREN          reduce using rule 13 (empty -> .)
    COMMA           reduce using rule 13 (empty -> .)

  ! MINUS           [ reduce using rule 13 (empty -> .) ]

    expression                     shift and go to state 55
    empty                          shift and go to state 57

state 14

    (51) expression -> LPAREN . expression RPAREN
    (36) expression -> . expression PLUS expression
    (37) expression -> . expression MINUS expression
    (38) expression -> . expression MULTIPLY expression
    (39) expression -> . expression DIVIDE expression
    (40) expression -> . MINUS expression
    (41) expression -> . expression MOD expression
    (42) expression -> . expression POWER expression
    (43) expression -> . expression LESSER expression
    (44) expression -> . expression GREATER expression
    (45) expression -> . expression LESSEQUAL expression
    (46) expression -> . expression GREATEQUAL expression
    (47) expression -> . expression NOTEQUAL expression
    (48) expression -> . expression DOUBLEQUAL expression
    (49) expression -> . expression AND expression
    (50) expression -> . expression OR expression
    (51) expression -> . LPAREN expression RPAREN
    (52) expression -> . expression DOUBLEPLUS
    (53) expression -> . expression DOUBLEMINUS
    (54) expression -> . NOT expression
    (55) expression -> . VARID
    (56) expression -> . INT
    (57) expression -> . FLOAT
    (58) expression -> . BOOL
    (59) expression -> . CHAR
    (60) expression -> . STRING
    (61) expression -> . empty
    (13) empty -> .

  ! shift/reduce conflict for MINUS resolved as shift
    MINUS           shift and go to state 13
    LPAREN          shift and go to state 14
    NOT             shift and go to state 15
    VARID           shift and go to state 56
    INT             shift and go to state 17
    FLOAT           shift and go to state 18
    BOOL            shift and go to state 19
    CHAR            shift and go to state 20
    STRING          shift and go to state 21
    RPAREN          reduce using rule 13 (empty -> .)
    PLUS            reduce using rule 13 (empty -> .)
    MULTIPLY        reduce using rule 13 (empty -> .)
    DIVIDE          reduce using rule 13 (empty -> .)
    MOD             reduce using rule 13 (empty -> .)
    POWER           reduce using rule 13 (empty -> .)
    LESSER          reduce using rule 13 (empty -> .)
    GREATER         reduce using rule 13 (empty -> .)
    LESSEQUAL       reduce using rule 13 (empty -> .)
    GREATEQUAL      reduce using rule 13 (empty -> .)
    NOTEQUAL        reduce using rule 13 (empty -> .)
    DOUBLEQUAL      reduce using rule 13 (empty -> .)
    AND             reduce using rule 13 (empty -> .)
    OR              reduce using rule 13 (empty -> .)
    DOUBLEPLUS      reduce using rule 13 (empty -> .)
    DOUBLEMINUS     reduce using rule 13 (empty -> .)

  ! MINUS           [ reduce using rule 13 (empty -> .) ]

    expression                     shift and go to state 58
    empty                          shift and go to state 57

state 15

    (54) expression -> NOT . expression
    (36) expression -> . expression PLUS expression
    (37) expression -> . expression MINUS expression
    (38) expression -> . expression MULTIPLY expression
    (39) expression -> . expression DIVIDE expression
    (40) expression -> . MINUS expression
    (41) expression -> . expression MOD expression
    (42) expression -> . expression POWER expression
    (43) expression -> . expression LESSER expression
    (44) expression -> . expression GREATER expression
    (45) expression -> . expression LESSEQUAL expression
    (46) expression -> . expression GREATEQUAL expression
    (47) expression -> . expression NOTEQUAL expression
    (48) expression -> . expression DOUBLEQUAL expression
    (49) expression -> . expression AND expression
    (50) expression -> . expression OR expression
    (51) expression -> . LPAREN expression RPAREN
    (52) expression -> . expression DOUBLEPLUS
    (53) expression -> . expression DOUBLEMINUS
    (54) expression -> . NOT expression
    (55) expression -> . VARID
    (56) expression -> . INT
    (57) expression -> . FLOAT
    (58) expression -> . BOOL
    (59) expression -> . CHAR
    (60) expression -> . STRING
    (61) expression -> . empty
    (13) empty -> .

  ! shift/reduce conflict for MINUS resolved as shift
    MINUS           shift and go to state 13
    LPAREN          shift and go to state 14
    NOT             shift and go to state 15
    VARID           shift and go to state 56
    INT             shift and go to state 17
    FLOAT           shift and go to state 18
    BOOL            shift and go to state 19
    CHAR            shift and go to state 20
    STRING          shift and go to state 21
    PLUS            reduce using rule 13 (empty -> .)
    MULTIPLY        reduce using rule 13 (empty -> .)
    DIVIDE          reduce using rule 13 (empty -> .)
    MOD             reduce using rule 13 (empty -> .)
    POWER           reduce using rule 13 (empty -> .)
    LESSER          reduce using rule 13 (empty -> .)
    GREATER         reduce using rule 13 (empty -> .)
    LESSEQUAL       reduce using rule 13 (empty -> .)
    GREATEQUAL      reduce using rule 13 (empty -> .)
    NOTEQUAL        reduce using rule 13 (empty -> .)
    DOUBLEQUAL      reduce using rule 13 (empty -> .)
    AND             reduce using rule 13 (empty -> .)
    OR              reduce using rule 13 (empty -> .)
    DOUBLEPLUS      reduce using rule 13 (empty -> .)
    DOUBLEMINUS     reduce using rule 13 (empty -> .)
    SCOLON          reduce using rule 13 (empty -> .)
    RPAREN          reduce using rule 13 (empty -> .)
    COMMA           reduce using rule 13 (empty -> .)

  ! MINUS           [ reduce using rule 13 (empty -> .) ]

    expression                     shift and go to state 59
    empty                          shift and go to state 57

state 16

    (55) expression -> VARID .
    (23) struct_dec -> VARID . VARID
    (24) struct_assign -> VARID . POINT variableassign
    (25) struct_fetch -> VARID . POINT VARID
    (34) variableassign -> VARID . EQUAL expression

    SCOLON          reduce using rule 55 (expression -> VARID .)
    PLUS            reduce using rule 55 (expression -> VARID .)
    MINUS           reduce using rule 55 (expression -> VARID .)
    MULTIPLY        reduce using rule 55 (expression -> VARID .)
    DIVIDE          reduce using rule 55 (expression -> VARID .)
    MOD             reduce using rule 55 (expression -> VARID .)
    POWER           reduce using rule 55 (expression -> VARID .)
    LESSER          reduce using rule 55 (expression -> VARID .)
    GREATER         reduce using rule 55 (expression -> VARID .)
    LESSEQUAL       reduce using rule 55 (expression -> VARID .)
    GREATEQUAL      reduce using rule 55 (expression -> VARID .)
    NOTEQUAL        reduce using rule 55 (expression -> VARID .)
    DOUBLEQUAL      reduce using rule 55 (expression -> VARID .)
    AND             reduce using rule 55 (expression -> VARID .)
    OR              reduce using rule 55 (expression -> VARID .)
    DOUBLEPLUS      reduce using rule 55 (expression -> VARID .)
    DOUBLEMINUS     reduce using rule 55 (expression -> VARID .)
    VARID           shift and go to state 60
    POINT           shift and go to state 61
    EQUAL           shift and go to state 62


state 17

    (56) expression -> INT .

    SCOLON          reduce using rule 56 (expression -> INT .)
    PLUS            reduce using rule 56 (expression -> INT .)
    MINUS           reduce using rule 56 (expression -> INT .)
    MULTIPLY        reduce using rule 56 (expression -> INT .)
    DIVIDE          reduce using rule 56 (expression -> INT .)
    MOD             reduce using rule 56 (expression -> INT .)
    POWER           reduce using rule 56 (expression -> INT .)
    LESSER          reduce using rule 56 (expression -> INT .)
    GREATER         reduce using rule 56 (expression -> INT .)
    LESSEQUAL       reduce using rule 56 (expression -> INT .)
    GREATEQUAL      reduce using rule 56 (expression -> INT .)
    NOTEQUAL        reduce using rule 56 (expression -> INT .)
    DOUBLEQUAL      reduce using rule 56 (expression -> INT .)
    AND             reduce using rule 56 (expression -> INT .)
    OR              reduce using rule 56 (expression -> INT .)
    DOUBLEPLUS      reduce using rule 56 (expression -> INT .)
    DOUBLEMINUS     reduce using rule 56 (expression -> INT .)
    RPAREN          reduce using rule 56 (expression -> INT .)
    COMMA           reduce using rule 56 (expression -> INT .)


state 18

    (57) expression -> FLOAT .

    SCOLON          reduce using rule 57 (expression -> FLOAT .)
    PLUS            reduce using rule 57 (expression -> FLOAT .)
    MINUS           reduce using rule 57 (expression -> FLOAT .)
    MULTIPLY        reduce using rule 57 (expression -> FLOAT .)
    DIVIDE          reduce using rule 57 (expression -> FLOAT .)
    MOD             reduce using rule 57 (expression -> FLOAT .)
    POWER           reduce using rule 57 (expression -> FLOAT .)
    LESSER          reduce using rule 57 (expression -> FLOAT .)
    GREATER         reduce using rule 57 (expression -> FLOAT .)
    LESSEQUAL       reduce using rule 57 (expression -> FLOAT .)
    GREATEQUAL      reduce using rule 57 (expression -> FLOAT .)
    NOTEQUAL        reduce using rule 57 (expression -> FLOAT .)
    DOUBLEQUAL      reduce using rule 57 (expression -> FLOAT .)
    AND             reduce using rule 57 (expression -> FLOAT .)
    OR              reduce using rule 57 (expression -> FLOAT .)
    DOUBLEPLUS      reduce using rule 57 (expression -> FLOAT .)
    DOUBLEMINUS     reduce using rule 57 (expression -> FLOAT .)
    RPAREN          reduce using rule 57 (expression -> FLOAT .)
    COMMA           reduce using rule 57 (expression -> FLOAT .)


state 19

    (58) expression -> BOOL .

    SCOLON          reduce using rule 58 (expression -> BOOL .)
    PLUS            reduce using rule 58 (expression -> BOOL .)
    MINUS           reduce using rule 58 (expression -> BOOL .)
    MULTIPLY        reduce using rule 58 (expression -> BOOL .)
    DIVIDE          reduce using rule 58 (expression -> BOOL .)
    MOD             reduce using rule 58 (expression -> BOOL .)
    POWER           reduce using rule 58 (expression -> BOOL .)
    LESSER          reduce using rule 58 (expression -> BOOL .)
    GREATER         reduce using rule 58 (expression -> BOOL .)
    LESSEQUAL       reduce using rule 58 (expression -> BOOL .)
    GREATEQUAL      reduce using rule 58 (expression -> BOOL .)
    NOTEQUAL        reduce using rule 58 (expression -> BOOL .)
    DOUBLEQUAL      reduce using rule 58 (expression -> BOOL .)
    AND             reduce using rule 58 (expression -> BOOL .)
    OR              reduce using rule 58 (expression -> BOOL .)
    DOUBLEPLUS      reduce using rule 58 (expression -> BOOL .)
    DOUBLEMINUS     reduce using rule 58 (expression -> BOOL .)
    RPAREN          reduce using rule 58 (expression -> BOOL .)
    COMMA           reduce using rule 58 (expression -> BOOL .)


state 20

    (59) expression -> CHAR .

    SCOLON          reduce using rule 59 (expression -> CHAR .)
    PLUS            reduce using rule 59 (expression -> CHAR .)
    MINUS           reduce using rule 59 (expression -> CHAR .)
    MULTIPLY        reduce using rule 59 (expression -> CHAR .)
    DIVIDE          reduce using rule 59 (expression -> CHAR .)
    MOD             reduce using rule 59 (expression -> CHAR .)
    POWER           reduce using rule 59 (expression -> CHAR .)
    LESSER          reduce using rule 59 (expression -> CHAR .)
    GREATER         reduce using rule 59 (expression -> CHAR .)
    LESSEQUAL       reduce using rule 59 (expression -> CHAR .)
    GREATEQUAL      reduce using rule 59 (expression -> CHAR .)
    NOTEQUAL        reduce using rule 59 (expression -> CHAR .)
    DOUBLEQUAL      reduce using rule 59 (expression -> CHAR .)
    AND             reduce using rule 59 (expression -> CHAR .)
    OR              reduce using rule 59 (expression -> CHAR .)
    DOUBLEPLUS      reduce using rule 59 (expression -> CHAR .)
    DOUBLEMINUS     reduce using rule 59 (expression -> CHAR .)
    RPAREN          reduce using rule 59 (expression -> CHAR .)
    COMMA           reduce using rule 59 (expression -> CHAR .)


state 21

    (60) expression -> STRING .

    SCOLON          reduce using rule 60 (expression -> STRING .)
    PLUS            reduce using rule 60 (expression -> STRING .)
    MINUS           reduce using rule 60 (expression -> STRING .)
    MULTIPLY        reduce using rule 60 (expression -> STRING .)
    DIVIDE          reduce using rule 60 (expression -> STRING .)
    MOD             reduce using rule 60 (expression -> STRING .)
    POWER           reduce using rule 60 (expression -> STRING .)
    LESSER          reduce using rule 60 (expression -> STRING .)
    GREATER         reduce using rule 60 (expression -> STRING .)
    LESSEQUAL       reduce using rule 60 (expression -> STRING .)
    GREATEQUAL      reduce using rule 60 (expression -> STRING .)
    NOTEQUAL        reduce using rule 60 (expression -> STRING .)
    DOUBLEQUAL      reduce using rule 60 (expression -> STRING .)
    AND             reduce using rule 60 (expression -> STRING .)
    OR              reduce using rule 60 (expression -> STRING .)
    DOUBLEPLUS      reduce using rule 60 (expression -> STRING .)
    DOUBLEMINUS     reduce using rule 60 (expression -> STRING .)
    RPAREN          reduce using rule 60 (expression -> STRING .)
    COMMA           reduce using rule 60 (expression -> STRING .)


state 22

    (28) variables -> variableassign .

    SCOLON          reduce using rule 28 (variables -> variableassign .)


state 23

    (29) variables -> type_declare .

    SCOLON          reduce using rule 29 (variables -> type_declare .)


state 24

    (30) variables -> type_assign .

    SCOLON          reduce using rule 30 (variables -> type_assign .)


state 25

    (14) print_stmt -> print_multiple_stmt .

    SCOLON          reduce using rule 14 (print_stmt -> print_multiple_stmt .)


state 26

    (26) block -> LCURL . parent RCURL
    (1) parent -> . lang
    (2) parent -> . lang parent
    (3) lang -> . expression SCOLON
    (4) lang -> . variables SCOLON
    (5) lang -> . print_stmt SCOLON
    (6) lang -> . block
    (7) lang -> . for_loop
    (8) lang -> . struct SCOLON
    (9) lang -> . struct_dec SCOLON
    (10) lang -> . struct_assign SCOLON
    (11) lang -> . struct_fetch SCOLON
    (12) lang -> . empty
    (36) expression -> . expression PLUS expression
    (37) expression -> . expression MINUS expression
    (38) expression -> . expression MULTIPLY expression
    (39) expression -> . expression DIVIDE expression
    (40) expression -> . MINUS expression
    (41) expression -> . expression MOD expression
    (42) expression -> . expression POWER expression
    (43) expression -> . expression LESSER expression
    (44) expression -> . expression GREATER expression
    (45) expression -> . expression LESSEQUAL expression
    (46) expression -> . expression GREATEQUAL expression
    (47) expression -> . expression NOTEQUAL expression
    (48) expression -> . expression DOUBLEQUAL expression
    (49) expression -> . expression AND expression
    (50) expression -> . expression OR expression
    (51) expression -> . LPAREN expression RPAREN
    (52) expression -> . expression DOUBLEPLUS
    (53) expression -> . expression DOUBLEMINUS
    (54) expression -> . NOT expression
    (55) expression -> . VARID
    (56) expression -> . INT
    (57) expression -> . FLOAT
    (58) expression -> . BOOL
    (59) expression -> . CHAR
    (60) expression -> . STRING
    (61) expression -> . empty
    (28) variables -> . variableassign
    (29) variables -> . type_declare
    (30) variables -> . type_assign
    (14) print_stmt -> . print_multiple_stmt
    (26) block -> . LCURL parent RCURL
    (27) for_loop -> . FOR LPAREN TYPE VARID EQUAL expression SCOLON expression SCOLON forupdate RPAREN block
    (20) struct -> . STRUCT VARID LCURL struct_block RCURL
    (23) struct_dec -> . VARID VARID
    (24) struct_assign -> . VARID POINT variableassign
    (25) struct_fetch -> . VARID POINT VARID
    (13) empty -> .
    (34) variableassign -> . VARID EQUAL expression
    (33) type_declare -> . TYPE VARID
    (35) type_assign -> . TYPE VARID EQUAL expression
    (15) print_multiple_stmt -> . PRINT LPAREN multiple RPAREN

  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for VARID resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for LCURL resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for STRUCT resolved as shift
  ! shift/reduce conflict for TYPE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
    MINUS           shift and go to state 13
    LPAREN          shift and go to state 14
    NOT             shift and go to state 15
    VARID           shift and go to state 16
    INT             shift and go to state 17
    FLOAT           shift and go to state 18
    BOOL            shift and go to state 19
    CHAR            shift and go to state 20
    STRING          shift and go to state 21
    LCURL           shift and go to state 26
    FOR             shift and go to state 27
    STRUCT          shift and go to state 29
    SCOLON          reduce using rule 13 (empty -> .)
    PLUS            reduce using rule 13 (empty -> .)
    MULTIPLY        reduce using rule 13 (empty -> .)
    DIVIDE          reduce using rule 13 (empty -> .)
    MOD             reduce using rule 13 (empty -> .)
    POWER           reduce using rule 13 (empty -> .)
    LESSER          reduce using rule 13 (empty -> .)
    GREATER         reduce using rule 13 (empty -> .)
    LESSEQUAL       reduce using rule 13 (empty -> .)
    GREATEQUAL      reduce using rule 13 (empty -> .)
    NOTEQUAL        reduce using rule 13 (empty -> .)
    DOUBLEQUAL      reduce using rule 13 (empty -> .)
    AND             reduce using rule 13 (empty -> .)
    OR              reduce using rule 13 (empty -> .)
    DOUBLEPLUS      reduce using rule 13 (empty -> .)
    DOUBLEMINUS     reduce using rule 13 (empty -> .)
    RCURL           reduce using rule 13 (empty -> .)
    TYPE            shift and go to state 28
    PRINT           shift and go to state 30

  ! MINUS           [ reduce using rule 13 (empty -> .) ]
  ! LPAREN          [ reduce using rule 13 (empty -> .) ]
  ! NOT             [ reduce using rule 13 (empty -> .) ]
  ! VARID           [ reduce using rule 13 (empty -> .) ]
  ! INT             [ reduce using rule 13 (empty -> .) ]
  ! FLOAT           [ reduce using rule 13 (empty -> .) ]
  ! BOOL            [ reduce using rule 13 (empty -> .) ]
  ! CHAR            [ reduce using rule 13 (empty -> .) ]
  ! STRING          [ reduce using rule 13 (empty -> .) ]
  ! LCURL           [ reduce using rule 13 (empty -> .) ]
  ! FOR             [ reduce using rule 13 (empty -> .) ]
  ! STRUCT          [ reduce using rule 13 (empty -> .) ]
  ! TYPE            [ reduce using rule 13 (empty -> .) ]
  ! PRINT           [ reduce using rule 13 (empty -> .) ]

    parent                         shift and go to state 63
    lang                           shift and go to state 2
    expression                     shift and go to state 3
    variables                      shift and go to state 4
    print_stmt                     shift and go to state 5
    block                          shift and go to state 6
    for_loop                       shift and go to state 7
    struct                         shift and go to state 8
    struct_dec                     shift and go to state 9
    struct_assign                  shift and go to state 10
    struct_fetch                   shift and go to state 11
    empty                          shift and go to state 12
    variableassign                 shift and go to state 22
    type_declare                   shift and go to state 23
    type_assign                    shift and go to state 24
    print_multiple_stmt            shift and go to state 25

state 27

    (27) for_loop -> FOR . LPAREN TYPE VARID EQUAL expression SCOLON expression SCOLON forupdate RPAREN block

    LPAREN          shift and go to state 64


state 28

    (33) type_declare -> TYPE . VARID
    (35) type_assign -> TYPE . VARID EQUAL expression

    VARID           shift and go to state 65


state 29

    (20) struct -> STRUCT . VARID LCURL struct_block RCURL

    VARID           shift and go to state 66


state 30

    (15) print_multiple_stmt -> PRINT . LPAREN multiple RPAREN

    LPAREN          shift and go to state 67


state 31

    (2) parent -> lang parent .

    $end            reduce using rule 2 (parent -> lang parent .)
    RCURL           reduce using rule 2 (parent -> lang parent .)


state 32

    (3) lang -> expression SCOLON .

    MINUS           reduce using rule 3 (lang -> expression SCOLON .)
    LPAREN          reduce using rule 3 (lang -> expression SCOLON .)
    NOT             reduce using rule 3 (lang -> expression SCOLON .)
    VARID           reduce using rule 3 (lang -> expression SCOLON .)
    INT             reduce using rule 3 (lang -> expression SCOLON .)
    FLOAT           reduce using rule 3 (lang -> expression SCOLON .)
    BOOL            reduce using rule 3 (lang -> expression SCOLON .)
    CHAR            reduce using rule 3 (lang -> expression SCOLON .)
    STRING          reduce using rule 3 (lang -> expression SCOLON .)
    LCURL           reduce using rule 3 (lang -> expression SCOLON .)
    FOR             reduce using rule 3 (lang -> expression SCOLON .)
    STRUCT          reduce using rule 3 (lang -> expression SCOLON .)
    TYPE            reduce using rule 3 (lang -> expression SCOLON .)
    PRINT           reduce using rule 3 (lang -> expression SCOLON .)
    SCOLON          reduce using rule 3 (lang -> expression SCOLON .)
    PLUS            reduce using rule 3 (lang -> expression SCOLON .)
    MULTIPLY        reduce using rule 3 (lang -> expression SCOLON .)
    DIVIDE          reduce using rule 3 (lang -> expression SCOLON .)
    MOD             reduce using rule 3 (lang -> expression SCOLON .)
    POWER           reduce using rule 3 (lang -> expression SCOLON .)
    LESSER          reduce using rule 3 (lang -> expression SCOLON .)
    GREATER         reduce using rule 3 (lang -> expression SCOLON .)
    LESSEQUAL       reduce using rule 3 (lang -> expression SCOLON .)
    GREATEQUAL      reduce using rule 3 (lang -> expression SCOLON .)
    NOTEQUAL        reduce using rule 3 (lang -> expression SCOLON .)
    DOUBLEQUAL      reduce using rule 3 (lang -> expression SCOLON .)
    AND             reduce using rule 3 (lang -> expression SCOLON .)
    OR              reduce using rule 3 (lang -> expression SCOLON .)
    DOUBLEPLUS      reduce using rule 3 (lang -> expression SCOLON .)
    DOUBLEMINUS     reduce using rule 3 (lang -> expression SCOLON .)
    $end            reduce using rule 3 (lang -> expression SCOLON .)
    RCURL           reduce using rule 3 (lang -> expression SCOLON .)


state 33

    (36) expression -> expression PLUS . expression
    (36) expression -> . expression PLUS expression
    (37) expression -> . expression MINUS expression
    (38) expression -> . expression MULTIPLY expression
    (39) expression -> . expression DIVIDE expression
    (40) expression -> . MINUS expression
    (41) expression -> . expression MOD expression
    (42) expression -> . expression POWER expression
    (43) expression -> . expression LESSER expression
    (44) expression -> . expression GREATER expression
    (45) expression -> . expression LESSEQUAL expression
    (46) expression -> . expression GREATEQUAL expression
    (47) expression -> . expression NOTEQUAL expression
    (48) expression -> . expression DOUBLEQUAL expression
    (49) expression -> . expression AND expression
    (50) expression -> . expression OR expression
    (51) expression -> . LPAREN expression RPAREN
    (52) expression -> . expression DOUBLEPLUS
    (53) expression -> . expression DOUBLEMINUS
    (54) expression -> . NOT expression
    (55) expression -> . VARID
    (56) expression -> . INT
    (57) expression -> . FLOAT
    (58) expression -> . BOOL
    (59) expression -> . CHAR
    (60) expression -> . STRING
    (61) expression -> . empty
    (13) empty -> .

  ! shift/reduce conflict for MINUS resolved as shift
    MINUS           shift and go to state 13
    LPAREN          shift and go to state 14
    NOT             shift and go to state 15
    VARID           shift and go to state 56
    INT             shift and go to state 17
    FLOAT           shift and go to state 18
    BOOL            shift and go to state 19
    CHAR            shift and go to state 20
    STRING          shift and go to state 21
    PLUS            reduce using rule 13 (empty -> .)
    MULTIPLY        reduce using rule 13 (empty -> .)
    DIVIDE          reduce using rule 13 (empty -> .)
    MOD             reduce using rule 13 (empty -> .)
    POWER           reduce using rule 13 (empty -> .)
    LESSER          reduce using rule 13 (empty -> .)
    GREATER         reduce using rule 13 (empty -> .)
    LESSEQUAL       reduce using rule 13 (empty -> .)
    GREATEQUAL      reduce using rule 13 (empty -> .)
    NOTEQUAL        reduce using rule 13 (empty -> .)
    DOUBLEQUAL      reduce using rule 13 (empty -> .)
    AND             reduce using rule 13 (empty -> .)
    OR              reduce using rule 13 (empty -> .)
    DOUBLEPLUS      reduce using rule 13 (empty -> .)
    DOUBLEMINUS     reduce using rule 13 (empty -> .)
    SCOLON          reduce using rule 13 (empty -> .)
    RPAREN          reduce using rule 13 (empty -> .)
    COMMA           reduce using rule 13 (empty -> .)

  ! MINUS           [ reduce using rule 13 (empty -> .) ]

    expression                     shift and go to state 68
    empty                          shift and go to state 57

state 34

    (37) expression -> expression MINUS . expression
    (36) expression -> . expression PLUS expression
    (37) expression -> . expression MINUS expression
    (38) expression -> . expression MULTIPLY expression
    (39) expression -> . expression DIVIDE expression
    (40) expression -> . MINUS expression
    (41) expression -> . expression MOD expression
    (42) expression -> . expression POWER expression
    (43) expression -> . expression LESSER expression
    (44) expression -> . expression GREATER expression
    (45) expression -> . expression LESSEQUAL expression
    (46) expression -> . expression GREATEQUAL expression
    (47) expression -> . expression NOTEQUAL expression
    (48) expression -> . expression DOUBLEQUAL expression
    (49) expression -> . expression AND expression
    (50) expression -> . expression OR expression
    (51) expression -> . LPAREN expression RPAREN
    (52) expression -> . expression DOUBLEPLUS
    (53) expression -> . expression DOUBLEMINUS
    (54) expression -> . NOT expression
    (55) expression -> . VARID
    (56) expression -> . INT
    (57) expression -> . FLOAT
    (58) expression -> . BOOL
    (59) expression -> . CHAR
    (60) expression -> . STRING
    (61) expression -> . empty
    (13) empty -> .

  ! shift/reduce conflict for MINUS resolved as shift
    MINUS           shift and go to state 13
    LPAREN          shift and go to state 14
    NOT             shift and go to state 15
    VARID           shift and go to state 56
    INT             shift and go to state 17
    FLOAT           shift and go to state 18
    BOOL            shift and go to state 19
    CHAR            shift and go to state 20
    STRING          shift and go to state 21
    PLUS            reduce using rule 13 (empty -> .)
    MULTIPLY        reduce using rule 13 (empty -> .)
    DIVIDE          reduce using rule 13 (empty -> .)
    MOD             reduce using rule 13 (empty -> .)
    POWER           reduce using rule 13 (empty -> .)
    LESSER          reduce using rule 13 (empty -> .)
    GREATER         reduce using rule 13 (empty -> .)
    LESSEQUAL       reduce using rule 13 (empty -> .)
    GREATEQUAL      reduce using rule 13 (empty -> .)
    NOTEQUAL        reduce using rule 13 (empty -> .)
    DOUBLEQUAL      reduce using rule 13 (empty -> .)
    AND             reduce using rule 13 (empty -> .)
    OR              reduce using rule 13 (empty -> .)
    DOUBLEPLUS      reduce using rule 13 (empty -> .)
    DOUBLEMINUS     reduce using rule 13 (empty -> .)
    SCOLON          reduce using rule 13 (empty -> .)
    RPAREN          reduce using rule 13 (empty -> .)
    COMMA           reduce using rule 13 (empty -> .)

  ! MINUS           [ reduce using rule 13 (empty -> .) ]

    expression                     shift and go to state 69
    empty                          shift and go to state 57

state 35

    (38) expression -> expression MULTIPLY . expression
    (36) expression -> . expression PLUS expression
    (37) expression -> . expression MINUS expression
    (38) expression -> . expression MULTIPLY expression
    (39) expression -> . expression DIVIDE expression
    (40) expression -> . MINUS expression
    (41) expression -> . expression MOD expression
    (42) expression -> . expression POWER expression
    (43) expression -> . expression LESSER expression
    (44) expression -> . expression GREATER expression
    (45) expression -> . expression LESSEQUAL expression
    (46) expression -> . expression GREATEQUAL expression
    (47) expression -> . expression NOTEQUAL expression
    (48) expression -> . expression DOUBLEQUAL expression
    (49) expression -> . expression AND expression
    (50) expression -> . expression OR expression
    (51) expression -> . LPAREN expression RPAREN
    (52) expression -> . expression DOUBLEPLUS
    (53) expression -> . expression DOUBLEMINUS
    (54) expression -> . NOT expression
    (55) expression -> . VARID
    (56) expression -> . INT
    (57) expression -> . FLOAT
    (58) expression -> . BOOL
    (59) expression -> . CHAR
    (60) expression -> . STRING
    (61) expression -> . empty
    (13) empty -> .

  ! shift/reduce conflict for MINUS resolved as shift
    MINUS           shift and go to state 13
    LPAREN          shift and go to state 14
    NOT             shift and go to state 15
    VARID           shift and go to state 56
    INT             shift and go to state 17
    FLOAT           shift and go to state 18
    BOOL            shift and go to state 19
    CHAR            shift and go to state 20
    STRING          shift and go to state 21
    PLUS            reduce using rule 13 (empty -> .)
    MULTIPLY        reduce using rule 13 (empty -> .)
    DIVIDE          reduce using rule 13 (empty -> .)
    MOD             reduce using rule 13 (empty -> .)
    POWER           reduce using rule 13 (empty -> .)
    LESSER          reduce using rule 13 (empty -> .)
    GREATER         reduce using rule 13 (empty -> .)
    LESSEQUAL       reduce using rule 13 (empty -> .)
    GREATEQUAL      reduce using rule 13 (empty -> .)
    NOTEQUAL        reduce using rule 13 (empty -> .)
    DOUBLEQUAL      reduce using rule 13 (empty -> .)
    AND             reduce using rule 13 (empty -> .)
    OR              reduce using rule 13 (empty -> .)
    DOUBLEPLUS      reduce using rule 13 (empty -> .)
    DOUBLEMINUS     reduce using rule 13 (empty -> .)
    SCOLON          reduce using rule 13 (empty -> .)
    RPAREN          reduce using rule 13 (empty -> .)
    COMMA           reduce using rule 13 (empty -> .)

  ! MINUS           [ reduce using rule 13 (empty -> .) ]

    expression                     shift and go to state 70
    empty                          shift and go to state 57

state 36

    (39) expression -> expression DIVIDE . expression
    (36) expression -> . expression PLUS expression
    (37) expression -> . expression MINUS expression
    (38) expression -> . expression MULTIPLY expression
    (39) expression -> . expression DIVIDE expression
    (40) expression -> . MINUS expression
    (41) expression -> . expression MOD expression
    (42) expression -> . expression POWER expression
    (43) expression -> . expression LESSER expression
    (44) expression -> . expression GREATER expression
    (45) expression -> . expression LESSEQUAL expression
    (46) expression -> . expression GREATEQUAL expression
    (47) expression -> . expression NOTEQUAL expression
    (48) expression -> . expression DOUBLEQUAL expression
    (49) expression -> . expression AND expression
    (50) expression -> . expression OR expression
    (51) expression -> . LPAREN expression RPAREN
    (52) expression -> . expression DOUBLEPLUS
    (53) expression -> . expression DOUBLEMINUS
    (54) expression -> . NOT expression
    (55) expression -> . VARID
    (56) expression -> . INT
    (57) expression -> . FLOAT
    (58) expression -> . BOOL
    (59) expression -> . CHAR
    (60) expression -> . STRING
    (61) expression -> . empty
    (13) empty -> .

  ! shift/reduce conflict for MINUS resolved as shift
    MINUS           shift and go to state 13
    LPAREN          shift and go to state 14
    NOT             shift and go to state 15
    VARID           shift and go to state 56
    INT             shift and go to state 17
    FLOAT           shift and go to state 18
    BOOL            shift and go to state 19
    CHAR            shift and go to state 20
    STRING          shift and go to state 21
    PLUS            reduce using rule 13 (empty -> .)
    MULTIPLY        reduce using rule 13 (empty -> .)
    DIVIDE          reduce using rule 13 (empty -> .)
    MOD             reduce using rule 13 (empty -> .)
    POWER           reduce using rule 13 (empty -> .)
    LESSER          reduce using rule 13 (empty -> .)
    GREATER         reduce using rule 13 (empty -> .)
    LESSEQUAL       reduce using rule 13 (empty -> .)
    GREATEQUAL      reduce using rule 13 (empty -> .)
    NOTEQUAL        reduce using rule 13 (empty -> .)
    DOUBLEQUAL      reduce using rule 13 (empty -> .)
    AND             reduce using rule 13 (empty -> .)
    OR              reduce using rule 13 (empty -> .)
    DOUBLEPLUS      reduce using rule 13 (empty -> .)
    DOUBLEMINUS     reduce using rule 13 (empty -> .)
    SCOLON          reduce using rule 13 (empty -> .)
    RPAREN          reduce using rule 13 (empty -> .)
    COMMA           reduce using rule 13 (empty -> .)

  ! MINUS           [ reduce using rule 13 (empty -> .) ]

    expression                     shift and go to state 71
    empty                          shift and go to state 57

state 37

    (41) expression -> expression MOD . expression
    (36) expression -> . expression PLUS expression
    (37) expression -> . expression MINUS expression
    (38) expression -> . expression MULTIPLY expression
    (39) expression -> . expression DIVIDE expression
    (40) expression -> . MINUS expression
    (41) expression -> . expression MOD expression
    (42) expression -> . expression POWER expression
    (43) expression -> . expression LESSER expression
    (44) expression -> . expression GREATER expression
    (45) expression -> . expression LESSEQUAL expression
    (46) expression -> . expression GREATEQUAL expression
    (47) expression -> . expression NOTEQUAL expression
    (48) expression -> . expression DOUBLEQUAL expression
    (49) expression -> . expression AND expression
    (50) expression -> . expression OR expression
    (51) expression -> . LPAREN expression RPAREN
    (52) expression -> . expression DOUBLEPLUS
    (53) expression -> . expression DOUBLEMINUS
    (54) expression -> . NOT expression
    (55) expression -> . VARID
    (56) expression -> . INT
    (57) expression -> . FLOAT
    (58) expression -> . BOOL
    (59) expression -> . CHAR
    (60) expression -> . STRING
    (61) expression -> . empty
    (13) empty -> .

  ! shift/reduce conflict for MINUS resolved as shift
    MINUS           shift and go to state 13
    LPAREN          shift and go to state 14
    NOT             shift and go to state 15
    VARID           shift and go to state 56
    INT             shift and go to state 17
    FLOAT           shift and go to state 18
    BOOL            shift and go to state 19
    CHAR            shift and go to state 20
    STRING          shift and go to state 21
    PLUS            reduce using rule 13 (empty -> .)
    MULTIPLY        reduce using rule 13 (empty -> .)
    DIVIDE          reduce using rule 13 (empty -> .)
    MOD             reduce using rule 13 (empty -> .)
    POWER           reduce using rule 13 (empty -> .)
    LESSER          reduce using rule 13 (empty -> .)
    GREATER         reduce using rule 13 (empty -> .)
    LESSEQUAL       reduce using rule 13 (empty -> .)
    GREATEQUAL      reduce using rule 13 (empty -> .)
    NOTEQUAL        reduce using rule 13 (empty -> .)
    DOUBLEQUAL      reduce using rule 13 (empty -> .)
    AND             reduce using rule 13 (empty -> .)
    OR              reduce using rule 13 (empty -> .)
    DOUBLEPLUS      reduce using rule 13 (empty -> .)
    DOUBLEMINUS     reduce using rule 13 (empty -> .)
    SCOLON          reduce using rule 13 (empty -> .)
    RPAREN          reduce using rule 13 (empty -> .)
    COMMA           reduce using rule 13 (empty -> .)

  ! MINUS           [ reduce using rule 13 (empty -> .) ]

    expression                     shift and go to state 72
    empty                          shift and go to state 57

state 38

    (42) expression -> expression POWER . expression
    (36) expression -> . expression PLUS expression
    (37) expression -> . expression MINUS expression
    (38) expression -> . expression MULTIPLY expression
    (39) expression -> . expression DIVIDE expression
    (40) expression -> . MINUS expression
    (41) expression -> . expression MOD expression
    (42) expression -> . expression POWER expression
    (43) expression -> . expression LESSER expression
    (44) expression -> . expression GREATER expression
    (45) expression -> . expression LESSEQUAL expression
    (46) expression -> . expression GREATEQUAL expression
    (47) expression -> . expression NOTEQUAL expression
    (48) expression -> . expression DOUBLEQUAL expression
    (49) expression -> . expression AND expression
    (50) expression -> . expression OR expression
    (51) expression -> . LPAREN expression RPAREN
    (52) expression -> . expression DOUBLEPLUS
    (53) expression -> . expression DOUBLEMINUS
    (54) expression -> . NOT expression
    (55) expression -> . VARID
    (56) expression -> . INT
    (57) expression -> . FLOAT
    (58) expression -> . BOOL
    (59) expression -> . CHAR
    (60) expression -> . STRING
    (61) expression -> . empty
    (13) empty -> .

  ! shift/reduce conflict for MINUS resolved as shift
    MINUS           shift and go to state 13
    LPAREN          shift and go to state 14
    NOT             shift and go to state 15
    VARID           shift and go to state 56
    INT             shift and go to state 17
    FLOAT           shift and go to state 18
    BOOL            shift and go to state 19
    CHAR            shift and go to state 20
    STRING          shift and go to state 21
    PLUS            reduce using rule 13 (empty -> .)
    MULTIPLY        reduce using rule 13 (empty -> .)
    DIVIDE          reduce using rule 13 (empty -> .)
    MOD             reduce using rule 13 (empty -> .)
    POWER           reduce using rule 13 (empty -> .)
    LESSER          reduce using rule 13 (empty -> .)
    GREATER         reduce using rule 13 (empty -> .)
    LESSEQUAL       reduce using rule 13 (empty -> .)
    GREATEQUAL      reduce using rule 13 (empty -> .)
    NOTEQUAL        reduce using rule 13 (empty -> .)
    DOUBLEQUAL      reduce using rule 13 (empty -> .)
    AND             reduce using rule 13 (empty -> .)
    OR              reduce using rule 13 (empty -> .)
    DOUBLEPLUS      reduce using rule 13 (empty -> .)
    DOUBLEMINUS     reduce using rule 13 (empty -> .)
    SCOLON          reduce using rule 13 (empty -> .)
    RPAREN          reduce using rule 13 (empty -> .)
    COMMA           reduce using rule 13 (empty -> .)

  ! MINUS           [ reduce using rule 13 (empty -> .) ]

    expression                     shift and go to state 73
    empty                          shift and go to state 57

state 39

    (43) expression -> expression LESSER . expression
    (36) expression -> . expression PLUS expression
    (37) expression -> . expression MINUS expression
    (38) expression -> . expression MULTIPLY expression
    (39) expression -> . expression DIVIDE expression
    (40) expression -> . MINUS expression
    (41) expression -> . expression MOD expression
    (42) expression -> . expression POWER expression
    (43) expression -> . expression LESSER expression
    (44) expression -> . expression GREATER expression
    (45) expression -> . expression LESSEQUAL expression
    (46) expression -> . expression GREATEQUAL expression
    (47) expression -> . expression NOTEQUAL expression
    (48) expression -> . expression DOUBLEQUAL expression
    (49) expression -> . expression AND expression
    (50) expression -> . expression OR expression
    (51) expression -> . LPAREN expression RPAREN
    (52) expression -> . expression DOUBLEPLUS
    (53) expression -> . expression DOUBLEMINUS
    (54) expression -> . NOT expression
    (55) expression -> . VARID
    (56) expression -> . INT
    (57) expression -> . FLOAT
    (58) expression -> . BOOL
    (59) expression -> . CHAR
    (60) expression -> . STRING
    (61) expression -> . empty
    (13) empty -> .

  ! shift/reduce conflict for MINUS resolved as shift
    MINUS           shift and go to state 13
    LPAREN          shift and go to state 14
    NOT             shift and go to state 15
    VARID           shift and go to state 56
    INT             shift and go to state 17
    FLOAT           shift and go to state 18
    BOOL            shift and go to state 19
    CHAR            shift and go to state 20
    STRING          shift and go to state 21
    PLUS            reduce using rule 13 (empty -> .)
    MULTIPLY        reduce using rule 13 (empty -> .)
    DIVIDE          reduce using rule 13 (empty -> .)
    MOD             reduce using rule 13 (empty -> .)
    POWER           reduce using rule 13 (empty -> .)
    LESSER          reduce using rule 13 (empty -> .)
    GREATER         reduce using rule 13 (empty -> .)
    LESSEQUAL       reduce using rule 13 (empty -> .)
    GREATEQUAL      reduce using rule 13 (empty -> .)
    NOTEQUAL        reduce using rule 13 (empty -> .)
    DOUBLEQUAL      reduce using rule 13 (empty -> .)
    AND             reduce using rule 13 (empty -> .)
    OR              reduce using rule 13 (empty -> .)
    DOUBLEPLUS      reduce using rule 13 (empty -> .)
    DOUBLEMINUS     reduce using rule 13 (empty -> .)
    SCOLON          reduce using rule 13 (empty -> .)
    RPAREN          reduce using rule 13 (empty -> .)
    COMMA           reduce using rule 13 (empty -> .)

  ! MINUS           [ reduce using rule 13 (empty -> .) ]

    expression                     shift and go to state 74
    empty                          shift and go to state 57

state 40

    (44) expression -> expression GREATER . expression
    (36) expression -> . expression PLUS expression
    (37) expression -> . expression MINUS expression
    (38) expression -> . expression MULTIPLY expression
    (39) expression -> . expression DIVIDE expression
    (40) expression -> . MINUS expression
    (41) expression -> . expression MOD expression
    (42) expression -> . expression POWER expression
    (43) expression -> . expression LESSER expression
    (44) expression -> . expression GREATER expression
    (45) expression -> . expression LESSEQUAL expression
    (46) expression -> . expression GREATEQUAL expression
    (47) expression -> . expression NOTEQUAL expression
    (48) expression -> . expression DOUBLEQUAL expression
    (49) expression -> . expression AND expression
    (50) expression -> . expression OR expression
    (51) expression -> . LPAREN expression RPAREN
    (52) expression -> . expression DOUBLEPLUS
    (53) expression -> . expression DOUBLEMINUS
    (54) expression -> . NOT expression
    (55) expression -> . VARID
    (56) expression -> . INT
    (57) expression -> . FLOAT
    (58) expression -> . BOOL
    (59) expression -> . CHAR
    (60) expression -> . STRING
    (61) expression -> . empty
    (13) empty -> .

  ! shift/reduce conflict for MINUS resolved as shift
    MINUS           shift and go to state 13
    LPAREN          shift and go to state 14
    NOT             shift and go to state 15
    VARID           shift and go to state 56
    INT             shift and go to state 17
    FLOAT           shift and go to state 18
    BOOL            shift and go to state 19
    CHAR            shift and go to state 20
    STRING          shift and go to state 21
    PLUS            reduce using rule 13 (empty -> .)
    MULTIPLY        reduce using rule 13 (empty -> .)
    DIVIDE          reduce using rule 13 (empty -> .)
    MOD             reduce using rule 13 (empty -> .)
    POWER           reduce using rule 13 (empty -> .)
    LESSER          reduce using rule 13 (empty -> .)
    GREATER         reduce using rule 13 (empty -> .)
    LESSEQUAL       reduce using rule 13 (empty -> .)
    GREATEQUAL      reduce using rule 13 (empty -> .)
    NOTEQUAL        reduce using rule 13 (empty -> .)
    DOUBLEQUAL      reduce using rule 13 (empty -> .)
    AND             reduce using rule 13 (empty -> .)
    OR              reduce using rule 13 (empty -> .)
    DOUBLEPLUS      reduce using rule 13 (empty -> .)
    DOUBLEMINUS     reduce using rule 13 (empty -> .)
    SCOLON          reduce using rule 13 (empty -> .)
    RPAREN          reduce using rule 13 (empty -> .)
    COMMA           reduce using rule 13 (empty -> .)

  ! MINUS           [ reduce using rule 13 (empty -> .) ]

    expression                     shift and go to state 75
    empty                          shift and go to state 57

state 41

    (45) expression -> expression LESSEQUAL . expression
    (36) expression -> . expression PLUS expression
    (37) expression -> . expression MINUS expression
    (38) expression -> . expression MULTIPLY expression
    (39) expression -> . expression DIVIDE expression
    (40) expression -> . MINUS expression
    (41) expression -> . expression MOD expression
    (42) expression -> . expression POWER expression
    (43) expression -> . expression LESSER expression
    (44) expression -> . expression GREATER expression
    (45) expression -> . expression LESSEQUAL expression
    (46) expression -> . expression GREATEQUAL expression
    (47) expression -> . expression NOTEQUAL expression
    (48) expression -> . expression DOUBLEQUAL expression
    (49) expression -> . expression AND expression
    (50) expression -> . expression OR expression
    (51) expression -> . LPAREN expression RPAREN
    (52) expression -> . expression DOUBLEPLUS
    (53) expression -> . expression DOUBLEMINUS
    (54) expression -> . NOT expression
    (55) expression -> . VARID
    (56) expression -> . INT
    (57) expression -> . FLOAT
    (58) expression -> . BOOL
    (59) expression -> . CHAR
    (60) expression -> . STRING
    (61) expression -> . empty
    (13) empty -> .

  ! shift/reduce conflict for MINUS resolved as shift
    MINUS           shift and go to state 13
    LPAREN          shift and go to state 14
    NOT             shift and go to state 15
    VARID           shift and go to state 56
    INT             shift and go to state 17
    FLOAT           shift and go to state 18
    BOOL            shift and go to state 19
    CHAR            shift and go to state 20
    STRING          shift and go to state 21
    PLUS            reduce using rule 13 (empty -> .)
    MULTIPLY        reduce using rule 13 (empty -> .)
    DIVIDE          reduce using rule 13 (empty -> .)
    MOD             reduce using rule 13 (empty -> .)
    POWER           reduce using rule 13 (empty -> .)
    LESSER          reduce using rule 13 (empty -> .)
    GREATER         reduce using rule 13 (empty -> .)
    LESSEQUAL       reduce using rule 13 (empty -> .)
    GREATEQUAL      reduce using rule 13 (empty -> .)
    NOTEQUAL        reduce using rule 13 (empty -> .)
    DOUBLEQUAL      reduce using rule 13 (empty -> .)
    AND             reduce using rule 13 (empty -> .)
    OR              reduce using rule 13 (empty -> .)
    DOUBLEPLUS      reduce using rule 13 (empty -> .)
    DOUBLEMINUS     reduce using rule 13 (empty -> .)
    SCOLON          reduce using rule 13 (empty -> .)
    RPAREN          reduce using rule 13 (empty -> .)
    COMMA           reduce using rule 13 (empty -> .)

  ! MINUS           [ reduce using rule 13 (empty -> .) ]

    expression                     shift and go to state 76
    empty                          shift and go to state 57

state 42

    (46) expression -> expression GREATEQUAL . expression
    (36) expression -> . expression PLUS expression
    (37) expression -> . expression MINUS expression
    (38) expression -> . expression MULTIPLY expression
    (39) expression -> . expression DIVIDE expression
    (40) expression -> . MINUS expression
    (41) expression -> . expression MOD expression
    (42) expression -> . expression POWER expression
    (43) expression -> . expression LESSER expression
    (44) expression -> . expression GREATER expression
    (45) expression -> . expression LESSEQUAL expression
    (46) expression -> . expression GREATEQUAL expression
    (47) expression -> . expression NOTEQUAL expression
    (48) expression -> . expression DOUBLEQUAL expression
    (49) expression -> . expression AND expression
    (50) expression -> . expression OR expression
    (51) expression -> . LPAREN expression RPAREN
    (52) expression -> . expression DOUBLEPLUS
    (53) expression -> . expression DOUBLEMINUS
    (54) expression -> . NOT expression
    (55) expression -> . VARID
    (56) expression -> . INT
    (57) expression -> . FLOAT
    (58) expression -> . BOOL
    (59) expression -> . CHAR
    (60) expression -> . STRING
    (61) expression -> . empty
    (13) empty -> .

  ! shift/reduce conflict for MINUS resolved as shift
    MINUS           shift and go to state 13
    LPAREN          shift and go to state 14
    NOT             shift and go to state 15
    VARID           shift and go to state 56
    INT             shift and go to state 17
    FLOAT           shift and go to state 18
    BOOL            shift and go to state 19
    CHAR            shift and go to state 20
    STRING          shift and go to state 21
    PLUS            reduce using rule 13 (empty -> .)
    MULTIPLY        reduce using rule 13 (empty -> .)
    DIVIDE          reduce using rule 13 (empty -> .)
    MOD             reduce using rule 13 (empty -> .)
    POWER           reduce using rule 13 (empty -> .)
    LESSER          reduce using rule 13 (empty -> .)
    GREATER         reduce using rule 13 (empty -> .)
    LESSEQUAL       reduce using rule 13 (empty -> .)
    GREATEQUAL      reduce using rule 13 (empty -> .)
    NOTEQUAL        reduce using rule 13 (empty -> .)
    DOUBLEQUAL      reduce using rule 13 (empty -> .)
    AND             reduce using rule 13 (empty -> .)
    OR              reduce using rule 13 (empty -> .)
    DOUBLEPLUS      reduce using rule 13 (empty -> .)
    DOUBLEMINUS     reduce using rule 13 (empty -> .)
    SCOLON          reduce using rule 13 (empty -> .)
    RPAREN          reduce using rule 13 (empty -> .)
    COMMA           reduce using rule 13 (empty -> .)

  ! MINUS           [ reduce using rule 13 (empty -> .) ]

    expression                     shift and go to state 77
    empty                          shift and go to state 57

state 43

    (47) expression -> expression NOTEQUAL . expression
    (36) expression -> . expression PLUS expression
    (37) expression -> . expression MINUS expression
    (38) expression -> . expression MULTIPLY expression
    (39) expression -> . expression DIVIDE expression
    (40) expression -> . MINUS expression
    (41) expression -> . expression MOD expression
    (42) expression -> . expression POWER expression
    (43) expression -> . expression LESSER expression
    (44) expression -> . expression GREATER expression
    (45) expression -> . expression LESSEQUAL expression
    (46) expression -> . expression GREATEQUAL expression
    (47) expression -> . expression NOTEQUAL expression
    (48) expression -> . expression DOUBLEQUAL expression
    (49) expression -> . expression AND expression
    (50) expression -> . expression OR expression
    (51) expression -> . LPAREN expression RPAREN
    (52) expression -> . expression DOUBLEPLUS
    (53) expression -> . expression DOUBLEMINUS
    (54) expression -> . NOT expression
    (55) expression -> . VARID
    (56) expression -> . INT
    (57) expression -> . FLOAT
    (58) expression -> . BOOL
    (59) expression -> . CHAR
    (60) expression -> . STRING
    (61) expression -> . empty
    (13) empty -> .

  ! shift/reduce conflict for MINUS resolved as shift
    MINUS           shift and go to state 13
    LPAREN          shift and go to state 14
    NOT             shift and go to state 15
    VARID           shift and go to state 56
    INT             shift and go to state 17
    FLOAT           shift and go to state 18
    BOOL            shift and go to state 19
    CHAR            shift and go to state 20
    STRING          shift and go to state 21
    PLUS            reduce using rule 13 (empty -> .)
    MULTIPLY        reduce using rule 13 (empty -> .)
    DIVIDE          reduce using rule 13 (empty -> .)
    MOD             reduce using rule 13 (empty -> .)
    POWER           reduce using rule 13 (empty -> .)
    LESSER          reduce using rule 13 (empty -> .)
    GREATER         reduce using rule 13 (empty -> .)
    LESSEQUAL       reduce using rule 13 (empty -> .)
    GREATEQUAL      reduce using rule 13 (empty -> .)
    NOTEQUAL        reduce using rule 13 (empty -> .)
    DOUBLEQUAL      reduce using rule 13 (empty -> .)
    AND             reduce using rule 13 (empty -> .)
    OR              reduce using rule 13 (empty -> .)
    DOUBLEPLUS      reduce using rule 13 (empty -> .)
    DOUBLEMINUS     reduce using rule 13 (empty -> .)
    SCOLON          reduce using rule 13 (empty -> .)
    RPAREN          reduce using rule 13 (empty -> .)
    COMMA           reduce using rule 13 (empty -> .)

  ! MINUS           [ reduce using rule 13 (empty -> .) ]

    expression                     shift and go to state 78
    empty                          shift and go to state 57

state 44

    (48) expression -> expression DOUBLEQUAL . expression
    (36) expression -> . expression PLUS expression
    (37) expression -> . expression MINUS expression
    (38) expression -> . expression MULTIPLY expression
    (39) expression -> . expression DIVIDE expression
    (40) expression -> . MINUS expression
    (41) expression -> . expression MOD expression
    (42) expression -> . expression POWER expression
    (43) expression -> . expression LESSER expression
    (44) expression -> . expression GREATER expression
    (45) expression -> . expression LESSEQUAL expression
    (46) expression -> . expression GREATEQUAL expression
    (47) expression -> . expression NOTEQUAL expression
    (48) expression -> . expression DOUBLEQUAL expression
    (49) expression -> . expression AND expression
    (50) expression -> . expression OR expression
    (51) expression -> . LPAREN expression RPAREN
    (52) expression -> . expression DOUBLEPLUS
    (53) expression -> . expression DOUBLEMINUS
    (54) expression -> . NOT expression
    (55) expression -> . VARID
    (56) expression -> . INT
    (57) expression -> . FLOAT
    (58) expression -> . BOOL
    (59) expression -> . CHAR
    (60) expression -> . STRING
    (61) expression -> . empty
    (13) empty -> .

  ! shift/reduce conflict for MINUS resolved as shift
    MINUS           shift and go to state 13
    LPAREN          shift and go to state 14
    NOT             shift and go to state 15
    VARID           shift and go to state 56
    INT             shift and go to state 17
    FLOAT           shift and go to state 18
    BOOL            shift and go to state 19
    CHAR            shift and go to state 20
    STRING          shift and go to state 21
    PLUS            reduce using rule 13 (empty -> .)
    MULTIPLY        reduce using rule 13 (empty -> .)
    DIVIDE          reduce using rule 13 (empty -> .)
    MOD             reduce using rule 13 (empty -> .)
    POWER           reduce using rule 13 (empty -> .)
    LESSER          reduce using rule 13 (empty -> .)
    GREATER         reduce using rule 13 (empty -> .)
    LESSEQUAL       reduce using rule 13 (empty -> .)
    GREATEQUAL      reduce using rule 13 (empty -> .)
    NOTEQUAL        reduce using rule 13 (empty -> .)
    DOUBLEQUAL      reduce using rule 13 (empty -> .)
    AND             reduce using rule 13 (empty -> .)
    OR              reduce using rule 13 (empty -> .)
    DOUBLEPLUS      reduce using rule 13 (empty -> .)
    DOUBLEMINUS     reduce using rule 13 (empty -> .)
    SCOLON          reduce using rule 13 (empty -> .)
    RPAREN          reduce using rule 13 (empty -> .)
    COMMA           reduce using rule 13 (empty -> .)

  ! MINUS           [ reduce using rule 13 (empty -> .) ]

    expression                     shift and go to state 79
    empty                          shift and go to state 57

state 45

    (49) expression -> expression AND . expression
    (36) expression -> . expression PLUS expression
    (37) expression -> . expression MINUS expression
    (38) expression -> . expression MULTIPLY expression
    (39) expression -> . expression DIVIDE expression
    (40) expression -> . MINUS expression
    (41) expression -> . expression MOD expression
    (42) expression -> . expression POWER expression
    (43) expression -> . expression LESSER expression
    (44) expression -> . expression GREATER expression
    (45) expression -> . expression LESSEQUAL expression
    (46) expression -> . expression GREATEQUAL expression
    (47) expression -> . expression NOTEQUAL expression
    (48) expression -> . expression DOUBLEQUAL expression
    (49) expression -> . expression AND expression
    (50) expression -> . expression OR expression
    (51) expression -> . LPAREN expression RPAREN
    (52) expression -> . expression DOUBLEPLUS
    (53) expression -> . expression DOUBLEMINUS
    (54) expression -> . NOT expression
    (55) expression -> . VARID
    (56) expression -> . INT
    (57) expression -> . FLOAT
    (58) expression -> . BOOL
    (59) expression -> . CHAR
    (60) expression -> . STRING
    (61) expression -> . empty
    (13) empty -> .

  ! shift/reduce conflict for MINUS resolved as shift
    MINUS           shift and go to state 13
    LPAREN          shift and go to state 14
    NOT             shift and go to state 15
    VARID           shift and go to state 56
    INT             shift and go to state 17
    FLOAT           shift and go to state 18
    BOOL            shift and go to state 19
    CHAR            shift and go to state 20
    STRING          shift and go to state 21
    PLUS            reduce using rule 13 (empty -> .)
    MULTIPLY        reduce using rule 13 (empty -> .)
    DIVIDE          reduce using rule 13 (empty -> .)
    MOD             reduce using rule 13 (empty -> .)
    POWER           reduce using rule 13 (empty -> .)
    LESSER          reduce using rule 13 (empty -> .)
    GREATER         reduce using rule 13 (empty -> .)
    LESSEQUAL       reduce using rule 13 (empty -> .)
    GREATEQUAL      reduce using rule 13 (empty -> .)
    NOTEQUAL        reduce using rule 13 (empty -> .)
    DOUBLEQUAL      reduce using rule 13 (empty -> .)
    AND             reduce using rule 13 (empty -> .)
    OR              reduce using rule 13 (empty -> .)
    DOUBLEPLUS      reduce using rule 13 (empty -> .)
    DOUBLEMINUS     reduce using rule 13 (empty -> .)
    SCOLON          reduce using rule 13 (empty -> .)
    RPAREN          reduce using rule 13 (empty -> .)
    COMMA           reduce using rule 13 (empty -> .)

  ! MINUS           [ reduce using rule 13 (empty -> .) ]

    expression                     shift and go to state 80
    empty                          shift and go to state 57

state 46

    (50) expression -> expression OR . expression
    (36) expression -> . expression PLUS expression
    (37) expression -> . expression MINUS expression
    (38) expression -> . expression MULTIPLY expression
    (39) expression -> . expression DIVIDE expression
    (40) expression -> . MINUS expression
    (41) expression -> . expression MOD expression
    (42) expression -> . expression POWER expression
    (43) expression -> . expression LESSER expression
    (44) expression -> . expression GREATER expression
    (45) expression -> . expression LESSEQUAL expression
    (46) expression -> . expression GREATEQUAL expression
    (47) expression -> . expression NOTEQUAL expression
    (48) expression -> . expression DOUBLEQUAL expression
    (49) expression -> . expression AND expression
    (50) expression -> . expression OR expression
    (51) expression -> . LPAREN expression RPAREN
    (52) expression -> . expression DOUBLEPLUS
    (53) expression -> . expression DOUBLEMINUS
    (54) expression -> . NOT expression
    (55) expression -> . VARID
    (56) expression -> . INT
    (57) expression -> . FLOAT
    (58) expression -> . BOOL
    (59) expression -> . CHAR
    (60) expression -> . STRING
    (61) expression -> . empty
    (13) empty -> .

  ! shift/reduce conflict for MINUS resolved as shift
    MINUS           shift and go to state 13
    LPAREN          shift and go to state 14
    NOT             shift and go to state 15
    VARID           shift and go to state 56
    INT             shift and go to state 17
    FLOAT           shift and go to state 18
    BOOL            shift and go to state 19
    CHAR            shift and go to state 20
    STRING          shift and go to state 21
    PLUS            reduce using rule 13 (empty -> .)
    MULTIPLY        reduce using rule 13 (empty -> .)
    DIVIDE          reduce using rule 13 (empty -> .)
    MOD             reduce using rule 13 (empty -> .)
    POWER           reduce using rule 13 (empty -> .)
    LESSER          reduce using rule 13 (empty -> .)
    GREATER         reduce using rule 13 (empty -> .)
    LESSEQUAL       reduce using rule 13 (empty -> .)
    GREATEQUAL      reduce using rule 13 (empty -> .)
    NOTEQUAL        reduce using rule 13 (empty -> .)
    DOUBLEQUAL      reduce using rule 13 (empty -> .)
    AND             reduce using rule 13 (empty -> .)
    OR              reduce using rule 13 (empty -> .)
    DOUBLEPLUS      reduce using rule 13 (empty -> .)
    DOUBLEMINUS     reduce using rule 13 (empty -> .)
    SCOLON          reduce using rule 13 (empty -> .)
    RPAREN          reduce using rule 13 (empty -> .)
    COMMA           reduce using rule 13 (empty -> .)

  ! MINUS           [ reduce using rule 13 (empty -> .) ]

    expression                     shift and go to state 81
    empty                          shift and go to state 57

state 47

    (52) expression -> expression DOUBLEPLUS .

    SCOLON          reduce using rule 52 (expression -> expression DOUBLEPLUS .)
    PLUS            reduce using rule 52 (expression -> expression DOUBLEPLUS .)
    MINUS           reduce using rule 52 (expression -> expression DOUBLEPLUS .)
    MULTIPLY        reduce using rule 52 (expression -> expression DOUBLEPLUS .)
    DIVIDE          reduce using rule 52 (expression -> expression DOUBLEPLUS .)
    MOD             reduce using rule 52 (expression -> expression DOUBLEPLUS .)
    POWER           reduce using rule 52 (expression -> expression DOUBLEPLUS .)
    LESSER          reduce using rule 52 (expression -> expression DOUBLEPLUS .)
    GREATER         reduce using rule 52 (expression -> expression DOUBLEPLUS .)
    LESSEQUAL       reduce using rule 52 (expression -> expression DOUBLEPLUS .)
    GREATEQUAL      reduce using rule 52 (expression -> expression DOUBLEPLUS .)
    NOTEQUAL        reduce using rule 52 (expression -> expression DOUBLEPLUS .)
    DOUBLEQUAL      reduce using rule 52 (expression -> expression DOUBLEPLUS .)
    AND             reduce using rule 52 (expression -> expression DOUBLEPLUS .)
    OR              reduce using rule 52 (expression -> expression DOUBLEPLUS .)
    DOUBLEPLUS      reduce using rule 52 (expression -> expression DOUBLEPLUS .)
    DOUBLEMINUS     reduce using rule 52 (expression -> expression DOUBLEPLUS .)
    RPAREN          reduce using rule 52 (expression -> expression DOUBLEPLUS .)
    COMMA           reduce using rule 52 (expression -> expression DOUBLEPLUS .)


state 48

    (53) expression -> expression DOUBLEMINUS .

    SCOLON          reduce using rule 53 (expression -> expression DOUBLEMINUS .)
    PLUS            reduce using rule 53 (expression -> expression DOUBLEMINUS .)
    MINUS           reduce using rule 53 (expression -> expression DOUBLEMINUS .)
    MULTIPLY        reduce using rule 53 (expression -> expression DOUBLEMINUS .)
    DIVIDE          reduce using rule 53 (expression -> expression DOUBLEMINUS .)
    MOD             reduce using rule 53 (expression -> expression DOUBLEMINUS .)
    POWER           reduce using rule 53 (expression -> expression DOUBLEMINUS .)
    LESSER          reduce using rule 53 (expression -> expression DOUBLEMINUS .)
    GREATER         reduce using rule 53 (expression -> expression DOUBLEMINUS .)
    LESSEQUAL       reduce using rule 53 (expression -> expression DOUBLEMINUS .)
    GREATEQUAL      reduce using rule 53 (expression -> expression DOUBLEMINUS .)
    NOTEQUAL        reduce using rule 53 (expression -> expression DOUBLEMINUS .)
    DOUBLEQUAL      reduce using rule 53 (expression -> expression DOUBLEMINUS .)
    AND             reduce using rule 53 (expression -> expression DOUBLEMINUS .)
    OR              reduce using rule 53 (expression -> expression DOUBLEMINUS .)
    DOUBLEPLUS      reduce using rule 53 (expression -> expression DOUBLEMINUS .)
    DOUBLEMINUS     reduce using rule 53 (expression -> expression DOUBLEMINUS .)
    RPAREN          reduce using rule 53 (expression -> expression DOUBLEMINUS .)
    COMMA           reduce using rule 53 (expression -> expression DOUBLEMINUS .)


state 49

    (4) lang -> variables SCOLON .

    MINUS           reduce using rule 4 (lang -> variables SCOLON .)
    LPAREN          reduce using rule 4 (lang -> variables SCOLON .)
    NOT             reduce using rule 4 (lang -> variables SCOLON .)
    VARID           reduce using rule 4 (lang -> variables SCOLON .)
    INT             reduce using rule 4 (lang -> variables SCOLON .)
    FLOAT           reduce using rule 4 (lang -> variables SCOLON .)
    BOOL            reduce using rule 4 (lang -> variables SCOLON .)
    CHAR            reduce using rule 4 (lang -> variables SCOLON .)
    STRING          reduce using rule 4 (lang -> variables SCOLON .)
    LCURL           reduce using rule 4 (lang -> variables SCOLON .)
    FOR             reduce using rule 4 (lang -> variables SCOLON .)
    STRUCT          reduce using rule 4 (lang -> variables SCOLON .)
    TYPE            reduce using rule 4 (lang -> variables SCOLON .)
    PRINT           reduce using rule 4 (lang -> variables SCOLON .)
    SCOLON          reduce using rule 4 (lang -> variables SCOLON .)
    PLUS            reduce using rule 4 (lang -> variables SCOLON .)
    MULTIPLY        reduce using rule 4 (lang -> variables SCOLON .)
    DIVIDE          reduce using rule 4 (lang -> variables SCOLON .)
    MOD             reduce using rule 4 (lang -> variables SCOLON .)
    POWER           reduce using rule 4 (lang -> variables SCOLON .)
    LESSER          reduce using rule 4 (lang -> variables SCOLON .)
    GREATER         reduce using rule 4 (lang -> variables SCOLON .)
    LESSEQUAL       reduce using rule 4 (lang -> variables SCOLON .)
    GREATEQUAL      reduce using rule 4 (lang -> variables SCOLON .)
    NOTEQUAL        reduce using rule 4 (lang -> variables SCOLON .)
    DOUBLEQUAL      reduce using rule 4 (lang -> variables SCOLON .)
    AND             reduce using rule 4 (lang -> variables SCOLON .)
    OR              reduce using rule 4 (lang -> variables SCOLON .)
    DOUBLEPLUS      reduce using rule 4 (lang -> variables SCOLON .)
    DOUBLEMINUS     reduce using rule 4 (lang -> variables SCOLON .)
    $end            reduce using rule 4 (lang -> variables SCOLON .)
    RCURL           reduce using rule 4 (lang -> variables SCOLON .)


state 50

    (5) lang -> print_stmt SCOLON .

    MINUS           reduce using rule 5 (lang -> print_stmt SCOLON .)
    LPAREN          reduce using rule 5 (lang -> print_stmt SCOLON .)
    NOT             reduce using rule 5 (lang -> print_stmt SCOLON .)
    VARID           reduce using rule 5 (lang -> print_stmt SCOLON .)
    INT             reduce using rule 5 (lang -> print_stmt SCOLON .)
    FLOAT           reduce using rule 5 (lang -> print_stmt SCOLON .)
    BOOL            reduce using rule 5 (lang -> print_stmt SCOLON .)
    CHAR            reduce using rule 5 (lang -> print_stmt SCOLON .)
    STRING          reduce using rule 5 (lang -> print_stmt SCOLON .)
    LCURL           reduce using rule 5 (lang -> print_stmt SCOLON .)
    FOR             reduce using rule 5 (lang -> print_stmt SCOLON .)
    STRUCT          reduce using rule 5 (lang -> print_stmt SCOLON .)
    TYPE            reduce using rule 5 (lang -> print_stmt SCOLON .)
    PRINT           reduce using rule 5 (lang -> print_stmt SCOLON .)
    SCOLON          reduce using rule 5 (lang -> print_stmt SCOLON .)
    PLUS            reduce using rule 5 (lang -> print_stmt SCOLON .)
    MULTIPLY        reduce using rule 5 (lang -> print_stmt SCOLON .)
    DIVIDE          reduce using rule 5 (lang -> print_stmt SCOLON .)
    MOD             reduce using rule 5 (lang -> print_stmt SCOLON .)
    POWER           reduce using rule 5 (lang -> print_stmt SCOLON .)
    LESSER          reduce using rule 5 (lang -> print_stmt SCOLON .)
    GREATER         reduce using rule 5 (lang -> print_stmt SCOLON .)
    LESSEQUAL       reduce using rule 5 (lang -> print_stmt SCOLON .)
    GREATEQUAL      reduce using rule 5 (lang -> print_stmt SCOLON .)
    NOTEQUAL        reduce using rule 5 (lang -> print_stmt SCOLON .)
    DOUBLEQUAL      reduce using rule 5 (lang -> print_stmt SCOLON .)
    AND             reduce using rule 5 (lang -> print_stmt SCOLON .)
    OR              reduce using rule 5 (lang -> print_stmt SCOLON .)
    DOUBLEPLUS      reduce using rule 5 (lang -> print_stmt SCOLON .)
    DOUBLEMINUS     reduce using rule 5 (lang -> print_stmt SCOLON .)
    $end            reduce using rule 5 (lang -> print_stmt SCOLON .)
    RCURL           reduce using rule 5 (lang -> print_stmt SCOLON .)


state 51

    (8) lang -> struct SCOLON .

    MINUS           reduce using rule 8 (lang -> struct SCOLON .)
    LPAREN          reduce using rule 8 (lang -> struct SCOLON .)
    NOT             reduce using rule 8 (lang -> struct SCOLON .)
    VARID           reduce using rule 8 (lang -> struct SCOLON .)
    INT             reduce using rule 8 (lang -> struct SCOLON .)
    FLOAT           reduce using rule 8 (lang -> struct SCOLON .)
    BOOL            reduce using rule 8 (lang -> struct SCOLON .)
    CHAR            reduce using rule 8 (lang -> struct SCOLON .)
    STRING          reduce using rule 8 (lang -> struct SCOLON .)
    LCURL           reduce using rule 8 (lang -> struct SCOLON .)
    FOR             reduce using rule 8 (lang -> struct SCOLON .)
    STRUCT          reduce using rule 8 (lang -> struct SCOLON .)
    TYPE            reduce using rule 8 (lang -> struct SCOLON .)
    PRINT           reduce using rule 8 (lang -> struct SCOLON .)
    SCOLON          reduce using rule 8 (lang -> struct SCOLON .)
    PLUS            reduce using rule 8 (lang -> struct SCOLON .)
    MULTIPLY        reduce using rule 8 (lang -> struct SCOLON .)
    DIVIDE          reduce using rule 8 (lang -> struct SCOLON .)
    MOD             reduce using rule 8 (lang -> struct SCOLON .)
    POWER           reduce using rule 8 (lang -> struct SCOLON .)
    LESSER          reduce using rule 8 (lang -> struct SCOLON .)
    GREATER         reduce using rule 8 (lang -> struct SCOLON .)
    LESSEQUAL       reduce using rule 8 (lang -> struct SCOLON .)
    GREATEQUAL      reduce using rule 8 (lang -> struct SCOLON .)
    NOTEQUAL        reduce using rule 8 (lang -> struct SCOLON .)
    DOUBLEQUAL      reduce using rule 8 (lang -> struct SCOLON .)
    AND             reduce using rule 8 (lang -> struct SCOLON .)
    OR              reduce using rule 8 (lang -> struct SCOLON .)
    DOUBLEPLUS      reduce using rule 8 (lang -> struct SCOLON .)
    DOUBLEMINUS     reduce using rule 8 (lang -> struct SCOLON .)
    $end            reduce using rule 8 (lang -> struct SCOLON .)
    RCURL           reduce using rule 8 (lang -> struct SCOLON .)


state 52

    (9) lang -> struct_dec SCOLON .

    MINUS           reduce using rule 9 (lang -> struct_dec SCOLON .)
    LPAREN          reduce using rule 9 (lang -> struct_dec SCOLON .)
    NOT             reduce using rule 9 (lang -> struct_dec SCOLON .)
    VARID           reduce using rule 9 (lang -> struct_dec SCOLON .)
    INT             reduce using rule 9 (lang -> struct_dec SCOLON .)
    FLOAT           reduce using rule 9 (lang -> struct_dec SCOLON .)
    BOOL            reduce using rule 9 (lang -> struct_dec SCOLON .)
    CHAR            reduce using rule 9 (lang -> struct_dec SCOLON .)
    STRING          reduce using rule 9 (lang -> struct_dec SCOLON .)
    LCURL           reduce using rule 9 (lang -> struct_dec SCOLON .)
    FOR             reduce using rule 9 (lang -> struct_dec SCOLON .)
    STRUCT          reduce using rule 9 (lang -> struct_dec SCOLON .)
    TYPE            reduce using rule 9 (lang -> struct_dec SCOLON .)
    PRINT           reduce using rule 9 (lang -> struct_dec SCOLON .)
    SCOLON          reduce using rule 9 (lang -> struct_dec SCOLON .)
    PLUS            reduce using rule 9 (lang -> struct_dec SCOLON .)
    MULTIPLY        reduce using rule 9 (lang -> struct_dec SCOLON .)
    DIVIDE          reduce using rule 9 (lang -> struct_dec SCOLON .)
    MOD             reduce using rule 9 (lang -> struct_dec SCOLON .)
    POWER           reduce using rule 9 (lang -> struct_dec SCOLON .)
    LESSER          reduce using rule 9 (lang -> struct_dec SCOLON .)
    GREATER         reduce using rule 9 (lang -> struct_dec SCOLON .)
    LESSEQUAL       reduce using rule 9 (lang -> struct_dec SCOLON .)
    GREATEQUAL      reduce using rule 9 (lang -> struct_dec SCOLON .)
    NOTEQUAL        reduce using rule 9 (lang -> struct_dec SCOLON .)
    DOUBLEQUAL      reduce using rule 9 (lang -> struct_dec SCOLON .)
    AND             reduce using rule 9 (lang -> struct_dec SCOLON .)
    OR              reduce using rule 9 (lang -> struct_dec SCOLON .)
    DOUBLEPLUS      reduce using rule 9 (lang -> struct_dec SCOLON .)
    DOUBLEMINUS     reduce using rule 9 (lang -> struct_dec SCOLON .)
    $end            reduce using rule 9 (lang -> struct_dec SCOLON .)
    RCURL           reduce using rule 9 (lang -> struct_dec SCOLON .)


state 53

    (10) lang -> struct_assign SCOLON .

    MINUS           reduce using rule 10 (lang -> struct_assign SCOLON .)
    LPAREN          reduce using rule 10 (lang -> struct_assign SCOLON .)
    NOT             reduce using rule 10 (lang -> struct_assign SCOLON .)
    VARID           reduce using rule 10 (lang -> struct_assign SCOLON .)
    INT             reduce using rule 10 (lang -> struct_assign SCOLON .)
    FLOAT           reduce using rule 10 (lang -> struct_assign SCOLON .)
    BOOL            reduce using rule 10 (lang -> struct_assign SCOLON .)
    CHAR            reduce using rule 10 (lang -> struct_assign SCOLON .)
    STRING          reduce using rule 10 (lang -> struct_assign SCOLON .)
    LCURL           reduce using rule 10 (lang -> struct_assign SCOLON .)
    FOR             reduce using rule 10 (lang -> struct_assign SCOLON .)
    STRUCT          reduce using rule 10 (lang -> struct_assign SCOLON .)
    TYPE            reduce using rule 10 (lang -> struct_assign SCOLON .)
    PRINT           reduce using rule 10 (lang -> struct_assign SCOLON .)
    SCOLON          reduce using rule 10 (lang -> struct_assign SCOLON .)
    PLUS            reduce using rule 10 (lang -> struct_assign SCOLON .)
    MULTIPLY        reduce using rule 10 (lang -> struct_assign SCOLON .)
    DIVIDE          reduce using rule 10 (lang -> struct_assign SCOLON .)
    MOD             reduce using rule 10 (lang -> struct_assign SCOLON .)
    POWER           reduce using rule 10 (lang -> struct_assign SCOLON .)
    LESSER          reduce using rule 10 (lang -> struct_assign SCOLON .)
    GREATER         reduce using rule 10 (lang -> struct_assign SCOLON .)
    LESSEQUAL       reduce using rule 10 (lang -> struct_assign SCOLON .)
    GREATEQUAL      reduce using rule 10 (lang -> struct_assign SCOLON .)
    NOTEQUAL        reduce using rule 10 (lang -> struct_assign SCOLON .)
    DOUBLEQUAL      reduce using rule 10 (lang -> struct_assign SCOLON .)
    AND             reduce using rule 10 (lang -> struct_assign SCOLON .)
    OR              reduce using rule 10 (lang -> struct_assign SCOLON .)
    DOUBLEPLUS      reduce using rule 10 (lang -> struct_assign SCOLON .)
    DOUBLEMINUS     reduce using rule 10 (lang -> struct_assign SCOLON .)
    $end            reduce using rule 10 (lang -> struct_assign SCOLON .)
    RCURL           reduce using rule 10 (lang -> struct_assign SCOLON .)


state 54

    (11) lang -> struct_fetch SCOLON .

    MINUS           reduce using rule 11 (lang -> struct_fetch SCOLON .)
    LPAREN          reduce using rule 11 (lang -> struct_fetch SCOLON .)
    NOT             reduce using rule 11 (lang -> struct_fetch SCOLON .)
    VARID           reduce using rule 11 (lang -> struct_fetch SCOLON .)
    INT             reduce using rule 11 (lang -> struct_fetch SCOLON .)
    FLOAT           reduce using rule 11 (lang -> struct_fetch SCOLON .)
    BOOL            reduce using rule 11 (lang -> struct_fetch SCOLON .)
    CHAR            reduce using rule 11 (lang -> struct_fetch SCOLON .)
    STRING          reduce using rule 11 (lang -> struct_fetch SCOLON .)
    LCURL           reduce using rule 11 (lang -> struct_fetch SCOLON .)
    FOR             reduce using rule 11 (lang -> struct_fetch SCOLON .)
    STRUCT          reduce using rule 11 (lang -> struct_fetch SCOLON .)
    TYPE            reduce using rule 11 (lang -> struct_fetch SCOLON .)
    PRINT           reduce using rule 11 (lang -> struct_fetch SCOLON .)
    SCOLON          reduce using rule 11 (lang -> struct_fetch SCOLON .)
    PLUS            reduce using rule 11 (lang -> struct_fetch SCOLON .)
    MULTIPLY        reduce using rule 11 (lang -> struct_fetch SCOLON .)
    DIVIDE          reduce using rule 11 (lang -> struct_fetch SCOLON .)
    MOD             reduce using rule 11 (lang -> struct_fetch SCOLON .)
    POWER           reduce using rule 11 (lang -> struct_fetch SCOLON .)
    LESSER          reduce using rule 11 (lang -> struct_fetch SCOLON .)
    GREATER         reduce using rule 11 (lang -> struct_fetch SCOLON .)
    LESSEQUAL       reduce using rule 11 (lang -> struct_fetch SCOLON .)
    GREATEQUAL      reduce using rule 11 (lang -> struct_fetch SCOLON .)
    NOTEQUAL        reduce using rule 11 (lang -> struct_fetch SCOLON .)
    DOUBLEQUAL      reduce using rule 11 (lang -> struct_fetch SCOLON .)
    AND             reduce using rule 11 (lang -> struct_fetch SCOLON .)
    OR              reduce using rule 11 (lang -> struct_fetch SCOLON .)
    DOUBLEPLUS      reduce using rule 11 (lang -> struct_fetch SCOLON .)
    DOUBLEMINUS     reduce using rule 11 (lang -> struct_fetch SCOLON .)
    $end            reduce using rule 11 (lang -> struct_fetch SCOLON .)
    RCURL           reduce using rule 11 (lang -> struct_fetch SCOLON .)


state 55

    (40) expression -> MINUS expression .
    (36) expression -> expression . PLUS expression
    (37) expression -> expression . MINUS expression
    (38) expression -> expression . MULTIPLY expression
    (39) expression -> expression . DIVIDE expression
    (41) expression -> expression . MOD expression
    (42) expression -> expression . POWER expression
    (43) expression -> expression . LESSER expression
    (44) expression -> expression . GREATER expression
    (45) expression -> expression . LESSEQUAL expression
    (46) expression -> expression . GREATEQUAL expression
    (47) expression -> expression . NOTEQUAL expression
    (48) expression -> expression . DOUBLEQUAL expression
    (49) expression -> expression . AND expression
    (50) expression -> expression . OR expression
    (52) expression -> expression . DOUBLEPLUS
    (53) expression -> expression . DOUBLEMINUS

    SCOLON          reduce using rule 40 (expression -> MINUS expression .)
    PLUS            reduce using rule 40 (expression -> MINUS expression .)
    MINUS           reduce using rule 40 (expression -> MINUS expression .)
    LESSER          reduce using rule 40 (expression -> MINUS expression .)
    GREATER         reduce using rule 40 (expression -> MINUS expression .)
    LESSEQUAL       reduce using rule 40 (expression -> MINUS expression .)
    GREATEQUAL      reduce using rule 40 (expression -> MINUS expression .)
    NOTEQUAL        reduce using rule 40 (expression -> MINUS expression .)
    DOUBLEQUAL      reduce using rule 40 (expression -> MINUS expression .)
    AND             reduce using rule 40 (expression -> MINUS expression .)
    OR              reduce using rule 40 (expression -> MINUS expression .)
    RPAREN          reduce using rule 40 (expression -> MINUS expression .)
    COMMA           reduce using rule 40 (expression -> MINUS expression .)
    MULTIPLY        shift and go to state 35
    DIVIDE          shift and go to state 36
    MOD             shift and go to state 37
    POWER           shift and go to state 38
    DOUBLEPLUS      shift and go to state 47
    DOUBLEMINUS     shift and go to state 48

  ! MULTIPLY        [ reduce using rule 40 (expression -> MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 40 (expression -> MINUS expression .) ]
  ! MOD             [ reduce using rule 40 (expression -> MINUS expression .) ]
  ! POWER           [ reduce using rule 40 (expression -> MINUS expression .) ]
  ! DOUBLEPLUS      [ reduce using rule 40 (expression -> MINUS expression .) ]
  ! DOUBLEMINUS     [ reduce using rule 40 (expression -> MINUS expression .) ]
  ! PLUS            [ shift and go to state 33 ]
  ! MINUS           [ shift and go to state 34 ]
  ! LESSER          [ shift and go to state 39 ]
  ! GREATER         [ shift and go to state 40 ]
  ! LESSEQUAL       [ shift and go to state 41 ]
  ! GREATEQUAL      [ shift and go to state 42 ]
  ! NOTEQUAL        [ shift and go to state 43 ]
  ! DOUBLEQUAL      [ shift and go to state 44 ]
  ! AND             [ shift and go to state 45 ]
  ! OR              [ shift and go to state 46 ]


state 56

    (55) expression -> VARID .

    PLUS            reduce using rule 55 (expression -> VARID .)
    MINUS           reduce using rule 55 (expression -> VARID .)
    MULTIPLY        reduce using rule 55 (expression -> VARID .)
    DIVIDE          reduce using rule 55 (expression -> VARID .)
    MOD             reduce using rule 55 (expression -> VARID .)
    POWER           reduce using rule 55 (expression -> VARID .)
    LESSER          reduce using rule 55 (expression -> VARID .)
    GREATER         reduce using rule 55 (expression -> VARID .)
    LESSEQUAL       reduce using rule 55 (expression -> VARID .)
    GREATEQUAL      reduce using rule 55 (expression -> VARID .)
    NOTEQUAL        reduce using rule 55 (expression -> VARID .)
    DOUBLEQUAL      reduce using rule 55 (expression -> VARID .)
    AND             reduce using rule 55 (expression -> VARID .)
    OR              reduce using rule 55 (expression -> VARID .)
    DOUBLEPLUS      reduce using rule 55 (expression -> VARID .)
    DOUBLEMINUS     reduce using rule 55 (expression -> VARID .)
    SCOLON          reduce using rule 55 (expression -> VARID .)
    RPAREN          reduce using rule 55 (expression -> VARID .)
    COMMA           reduce using rule 55 (expression -> VARID .)


state 57

    (61) expression -> empty .

    PLUS            reduce using rule 61 (expression -> empty .)
    MINUS           reduce using rule 61 (expression -> empty .)
    MULTIPLY        reduce using rule 61 (expression -> empty .)
    DIVIDE          reduce using rule 61 (expression -> empty .)
    MOD             reduce using rule 61 (expression -> empty .)
    POWER           reduce using rule 61 (expression -> empty .)
    LESSER          reduce using rule 61 (expression -> empty .)
    GREATER         reduce using rule 61 (expression -> empty .)
    LESSEQUAL       reduce using rule 61 (expression -> empty .)
    GREATEQUAL      reduce using rule 61 (expression -> empty .)
    NOTEQUAL        reduce using rule 61 (expression -> empty .)
    DOUBLEQUAL      reduce using rule 61 (expression -> empty .)
    AND             reduce using rule 61 (expression -> empty .)
    OR              reduce using rule 61 (expression -> empty .)
    DOUBLEPLUS      reduce using rule 61 (expression -> empty .)
    DOUBLEMINUS     reduce using rule 61 (expression -> empty .)
    SCOLON          reduce using rule 61 (expression -> empty .)
    RPAREN          reduce using rule 61 (expression -> empty .)
    COMMA           reduce using rule 61 (expression -> empty .)


state 58

    (51) expression -> LPAREN expression . RPAREN
    (36) expression -> expression . PLUS expression
    (37) expression -> expression . MINUS expression
    (38) expression -> expression . MULTIPLY expression
    (39) expression -> expression . DIVIDE expression
    (41) expression -> expression . MOD expression
    (42) expression -> expression . POWER expression
    (43) expression -> expression . LESSER expression
    (44) expression -> expression . GREATER expression
    (45) expression -> expression . LESSEQUAL expression
    (46) expression -> expression . GREATEQUAL expression
    (47) expression -> expression . NOTEQUAL expression
    (48) expression -> expression . DOUBLEQUAL expression
    (49) expression -> expression . AND expression
    (50) expression -> expression . OR expression
    (52) expression -> expression . DOUBLEPLUS
    (53) expression -> expression . DOUBLEMINUS

    RPAREN          shift and go to state 82
    PLUS            shift and go to state 33
    MINUS           shift and go to state 34
    MULTIPLY        shift and go to state 35
    DIVIDE          shift and go to state 36
    MOD             shift and go to state 37
    POWER           shift and go to state 38
    LESSER          shift and go to state 39
    GREATER         shift and go to state 40
    LESSEQUAL       shift and go to state 41
    GREATEQUAL      shift and go to state 42
    NOTEQUAL        shift and go to state 43
    DOUBLEQUAL      shift and go to state 44
    AND             shift and go to state 45
    OR              shift and go to state 46
    DOUBLEPLUS      shift and go to state 47
    DOUBLEMINUS     shift and go to state 48


state 59

    (54) expression -> NOT expression .
    (36) expression -> expression . PLUS expression
    (37) expression -> expression . MINUS expression
    (38) expression -> expression . MULTIPLY expression
    (39) expression -> expression . DIVIDE expression
    (41) expression -> expression . MOD expression
    (42) expression -> expression . POWER expression
    (43) expression -> expression . LESSER expression
    (44) expression -> expression . GREATER expression
    (45) expression -> expression . LESSEQUAL expression
    (46) expression -> expression . GREATEQUAL expression
    (47) expression -> expression . NOTEQUAL expression
    (48) expression -> expression . DOUBLEQUAL expression
    (49) expression -> expression . AND expression
    (50) expression -> expression . OR expression
    (52) expression -> expression . DOUBLEPLUS
    (53) expression -> expression . DOUBLEMINUS

    SCOLON          reduce using rule 54 (expression -> NOT expression .)
    PLUS            reduce using rule 54 (expression -> NOT expression .)
    MINUS           reduce using rule 54 (expression -> NOT expression .)
    MULTIPLY        reduce using rule 54 (expression -> NOT expression .)
    DIVIDE          reduce using rule 54 (expression -> NOT expression .)
    MOD             reduce using rule 54 (expression -> NOT expression .)
    POWER           reduce using rule 54 (expression -> NOT expression .)
    LESSER          reduce using rule 54 (expression -> NOT expression .)
    GREATER         reduce using rule 54 (expression -> NOT expression .)
    LESSEQUAL       reduce using rule 54 (expression -> NOT expression .)
    GREATEQUAL      reduce using rule 54 (expression -> NOT expression .)
    NOTEQUAL        reduce using rule 54 (expression -> NOT expression .)
    DOUBLEQUAL      reduce using rule 54 (expression -> NOT expression .)
    AND             reduce using rule 54 (expression -> NOT expression .)
    OR              reduce using rule 54 (expression -> NOT expression .)
    RPAREN          reduce using rule 54 (expression -> NOT expression .)
    COMMA           reduce using rule 54 (expression -> NOT expression .)
    DOUBLEPLUS      shift and go to state 47
    DOUBLEMINUS     shift and go to state 48

  ! DOUBLEPLUS      [ reduce using rule 54 (expression -> NOT expression .) ]
  ! DOUBLEMINUS     [ reduce using rule 54 (expression -> NOT expression .) ]
  ! PLUS            [ shift and go to state 33 ]
  ! MINUS           [ shift and go to state 34 ]
  ! MULTIPLY        [ shift and go to state 35 ]
  ! DIVIDE          [ shift and go to state 36 ]
  ! MOD             [ shift and go to state 37 ]
  ! POWER           [ shift and go to state 38 ]
  ! LESSER          [ shift and go to state 39 ]
  ! GREATER         [ shift and go to state 40 ]
  ! LESSEQUAL       [ shift and go to state 41 ]
  ! GREATEQUAL      [ shift and go to state 42 ]
  ! NOTEQUAL        [ shift and go to state 43 ]
  ! DOUBLEQUAL      [ shift and go to state 44 ]
  ! AND             [ shift and go to state 45 ]
  ! OR              [ shift and go to state 46 ]


state 60

    (23) struct_dec -> VARID VARID .

    SCOLON          reduce using rule 23 (struct_dec -> VARID VARID .)


state 61

    (24) struct_assign -> VARID POINT . variableassign
    (25) struct_fetch -> VARID POINT . VARID
    (34) variableassign -> . VARID EQUAL expression

    VARID           shift and go to state 83

    variableassign                 shift and go to state 84

state 62

    (34) variableassign -> VARID EQUAL . expression
    (36) expression -> . expression PLUS expression
    (37) expression -> . expression MINUS expression
    (38) expression -> . expression MULTIPLY expression
    (39) expression -> . expression DIVIDE expression
    (40) expression -> . MINUS expression
    (41) expression -> . expression MOD expression
    (42) expression -> . expression POWER expression
    (43) expression -> . expression LESSER expression
    (44) expression -> . expression GREATER expression
    (45) expression -> . expression LESSEQUAL expression
    (46) expression -> . expression GREATEQUAL expression
    (47) expression -> . expression NOTEQUAL expression
    (48) expression -> . expression DOUBLEQUAL expression
    (49) expression -> . expression AND expression
    (50) expression -> . expression OR expression
    (51) expression -> . LPAREN expression RPAREN
    (52) expression -> . expression DOUBLEPLUS
    (53) expression -> . expression DOUBLEMINUS
    (54) expression -> . NOT expression
    (55) expression -> . VARID
    (56) expression -> . INT
    (57) expression -> . FLOAT
    (58) expression -> . BOOL
    (59) expression -> . CHAR
    (60) expression -> . STRING
    (61) expression -> . empty
    (13) empty -> .

  ! shift/reduce conflict for MINUS resolved as shift
    MINUS           shift and go to state 13
    LPAREN          shift and go to state 14
    NOT             shift and go to state 15
    VARID           shift and go to state 56
    INT             shift and go to state 17
    FLOAT           shift and go to state 18
    BOOL            shift and go to state 19
    CHAR            shift and go to state 20
    STRING          shift and go to state 21
    PLUS            reduce using rule 13 (empty -> .)
    MULTIPLY        reduce using rule 13 (empty -> .)
    DIVIDE          reduce using rule 13 (empty -> .)
    MOD             reduce using rule 13 (empty -> .)
    POWER           reduce using rule 13 (empty -> .)
    LESSER          reduce using rule 13 (empty -> .)
    GREATER         reduce using rule 13 (empty -> .)
    LESSEQUAL       reduce using rule 13 (empty -> .)
    GREATEQUAL      reduce using rule 13 (empty -> .)
    NOTEQUAL        reduce using rule 13 (empty -> .)
    DOUBLEQUAL      reduce using rule 13 (empty -> .)
    AND             reduce using rule 13 (empty -> .)
    OR              reduce using rule 13 (empty -> .)
    DOUBLEPLUS      reduce using rule 13 (empty -> .)
    DOUBLEMINUS     reduce using rule 13 (empty -> .)
    SCOLON          reduce using rule 13 (empty -> .)
    RPAREN          reduce using rule 13 (empty -> .)

  ! MINUS           [ reduce using rule 13 (empty -> .) ]

    expression                     shift and go to state 85
    empty                          shift and go to state 57

state 63

    (26) block -> LCURL parent . RCURL

    RCURL           shift and go to state 86


state 64

    (27) for_loop -> FOR LPAREN . TYPE VARID EQUAL expression SCOLON expression SCOLON forupdate RPAREN block

    TYPE            shift and go to state 87


state 65

    (33) type_declare -> TYPE VARID .
    (35) type_assign -> TYPE VARID . EQUAL expression

    SCOLON          reduce using rule 33 (type_declare -> TYPE VARID .)
    EQUAL           shift and go to state 88


state 66

    (20) struct -> STRUCT VARID . LCURL struct_block RCURL

    LCURL           shift and go to state 89


state 67

    (15) print_multiple_stmt -> PRINT LPAREN . multiple RPAREN
    (16) multiple -> . expression
    (17) multiple -> . expression COMMA multiple
    (18) multiple -> . struct_fetch
    (19) multiple -> . struct_fetch COMMA multiple
    (36) expression -> . expression PLUS expression
    (37) expression -> . expression MINUS expression
    (38) expression -> . expression MULTIPLY expression
    (39) expression -> . expression DIVIDE expression
    (40) expression -> . MINUS expression
    (41) expression -> . expression MOD expression
    (42) expression -> . expression POWER expression
    (43) expression -> . expression LESSER expression
    (44) expression -> . expression GREATER expression
    (45) expression -> . expression LESSEQUAL expression
    (46) expression -> . expression GREATEQUAL expression
    (47) expression -> . expression NOTEQUAL expression
    (48) expression -> . expression DOUBLEQUAL expression
    (49) expression -> . expression AND expression
    (50) expression -> . expression OR expression
    (51) expression -> . LPAREN expression RPAREN
    (52) expression -> . expression DOUBLEPLUS
    (53) expression -> . expression DOUBLEMINUS
    (54) expression -> . NOT expression
    (55) expression -> . VARID
    (56) expression -> . INT
    (57) expression -> . FLOAT
    (58) expression -> . BOOL
    (59) expression -> . CHAR
    (60) expression -> . STRING
    (61) expression -> . empty
    (25) struct_fetch -> . VARID POINT VARID
    (13) empty -> .

  ! shift/reduce conflict for MINUS resolved as shift
    MINUS           shift and go to state 13
    LPAREN          shift and go to state 14
    NOT             shift and go to state 15
    VARID           shift and go to state 93
    INT             shift and go to state 17
    FLOAT           shift and go to state 18
    BOOL            shift and go to state 19
    CHAR            shift and go to state 20
    STRING          shift and go to state 21
    COMMA           reduce using rule 13 (empty -> .)
    PLUS            reduce using rule 13 (empty -> .)
    MULTIPLY        reduce using rule 13 (empty -> .)
    DIVIDE          reduce using rule 13 (empty -> .)
    MOD             reduce using rule 13 (empty -> .)
    POWER           reduce using rule 13 (empty -> .)
    LESSER          reduce using rule 13 (empty -> .)
    GREATER         reduce using rule 13 (empty -> .)
    LESSEQUAL       reduce using rule 13 (empty -> .)
    GREATEQUAL      reduce using rule 13 (empty -> .)
    NOTEQUAL        reduce using rule 13 (empty -> .)
    DOUBLEQUAL      reduce using rule 13 (empty -> .)
    AND             reduce using rule 13 (empty -> .)
    OR              reduce using rule 13 (empty -> .)
    DOUBLEPLUS      reduce using rule 13 (empty -> .)
    DOUBLEMINUS     reduce using rule 13 (empty -> .)
    RPAREN          reduce using rule 13 (empty -> .)

  ! MINUS           [ reduce using rule 13 (empty -> .) ]

    multiple                       shift and go to state 90
    expression                     shift and go to state 91
    struct_fetch                   shift and go to state 92
    empty                          shift and go to state 57

state 68

    (36) expression -> expression PLUS expression .
    (36) expression -> expression . PLUS expression
    (37) expression -> expression . MINUS expression
    (38) expression -> expression . MULTIPLY expression
    (39) expression -> expression . DIVIDE expression
    (41) expression -> expression . MOD expression
    (42) expression -> expression . POWER expression
    (43) expression -> expression . LESSER expression
    (44) expression -> expression . GREATER expression
    (45) expression -> expression . LESSEQUAL expression
    (46) expression -> expression . GREATEQUAL expression
    (47) expression -> expression . NOTEQUAL expression
    (48) expression -> expression . DOUBLEQUAL expression
    (49) expression -> expression . AND expression
    (50) expression -> expression . OR expression
    (52) expression -> expression . DOUBLEPLUS
    (53) expression -> expression . DOUBLEMINUS

    SCOLON          reduce using rule 36 (expression -> expression PLUS expression .)
    PLUS            reduce using rule 36 (expression -> expression PLUS expression .)
    MINUS           reduce using rule 36 (expression -> expression PLUS expression .)
    LESSER          reduce using rule 36 (expression -> expression PLUS expression .)
    GREATER         reduce using rule 36 (expression -> expression PLUS expression .)
    LESSEQUAL       reduce using rule 36 (expression -> expression PLUS expression .)
    GREATEQUAL      reduce using rule 36 (expression -> expression PLUS expression .)
    NOTEQUAL        reduce using rule 36 (expression -> expression PLUS expression .)
    DOUBLEQUAL      reduce using rule 36 (expression -> expression PLUS expression .)
    AND             reduce using rule 36 (expression -> expression PLUS expression .)
    OR              reduce using rule 36 (expression -> expression PLUS expression .)
    RPAREN          reduce using rule 36 (expression -> expression PLUS expression .)
    COMMA           reduce using rule 36 (expression -> expression PLUS expression .)
    MULTIPLY        shift and go to state 35
    DIVIDE          shift and go to state 36
    MOD             shift and go to state 37
    POWER           shift and go to state 38
    DOUBLEPLUS      shift and go to state 47
    DOUBLEMINUS     shift and go to state 48

  ! MULTIPLY        [ reduce using rule 36 (expression -> expression PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 36 (expression -> expression PLUS expression .) ]
  ! MOD             [ reduce using rule 36 (expression -> expression PLUS expression .) ]
  ! POWER           [ reduce using rule 36 (expression -> expression PLUS expression .) ]
  ! DOUBLEPLUS      [ reduce using rule 36 (expression -> expression PLUS expression .) ]
  ! DOUBLEMINUS     [ reduce using rule 36 (expression -> expression PLUS expression .) ]
  ! PLUS            [ shift and go to state 33 ]
  ! MINUS           [ shift and go to state 34 ]
  ! LESSER          [ shift and go to state 39 ]
  ! GREATER         [ shift and go to state 40 ]
  ! LESSEQUAL       [ shift and go to state 41 ]
  ! GREATEQUAL      [ shift and go to state 42 ]
  ! NOTEQUAL        [ shift and go to state 43 ]
  ! DOUBLEQUAL      [ shift and go to state 44 ]
  ! AND             [ shift and go to state 45 ]
  ! OR              [ shift and go to state 46 ]


state 69

    (37) expression -> expression MINUS expression .
    (36) expression -> expression . PLUS expression
    (37) expression -> expression . MINUS expression
    (38) expression -> expression . MULTIPLY expression
    (39) expression -> expression . DIVIDE expression
    (41) expression -> expression . MOD expression
    (42) expression -> expression . POWER expression
    (43) expression -> expression . LESSER expression
    (44) expression -> expression . GREATER expression
    (45) expression -> expression . LESSEQUAL expression
    (46) expression -> expression . GREATEQUAL expression
    (47) expression -> expression . NOTEQUAL expression
    (48) expression -> expression . DOUBLEQUAL expression
    (49) expression -> expression . AND expression
    (50) expression -> expression . OR expression
    (52) expression -> expression . DOUBLEPLUS
    (53) expression -> expression . DOUBLEMINUS

    SCOLON          reduce using rule 37 (expression -> expression MINUS expression .)
    PLUS            reduce using rule 37 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 37 (expression -> expression MINUS expression .)
    LESSER          reduce using rule 37 (expression -> expression MINUS expression .)
    GREATER         reduce using rule 37 (expression -> expression MINUS expression .)
    LESSEQUAL       reduce using rule 37 (expression -> expression MINUS expression .)
    GREATEQUAL      reduce using rule 37 (expression -> expression MINUS expression .)
    NOTEQUAL        reduce using rule 37 (expression -> expression MINUS expression .)
    DOUBLEQUAL      reduce using rule 37 (expression -> expression MINUS expression .)
    AND             reduce using rule 37 (expression -> expression MINUS expression .)
    OR              reduce using rule 37 (expression -> expression MINUS expression .)
    RPAREN          reduce using rule 37 (expression -> expression MINUS expression .)
    COMMA           reduce using rule 37 (expression -> expression MINUS expression .)
    MULTIPLY        shift and go to state 35
    DIVIDE          shift and go to state 36
    MOD             shift and go to state 37
    POWER           shift and go to state 38
    DOUBLEPLUS      shift and go to state 47
    DOUBLEMINUS     shift and go to state 48

  ! MULTIPLY        [ reduce using rule 37 (expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 37 (expression -> expression MINUS expression .) ]
  ! MOD             [ reduce using rule 37 (expression -> expression MINUS expression .) ]
  ! POWER           [ reduce using rule 37 (expression -> expression MINUS expression .) ]
  ! DOUBLEPLUS      [ reduce using rule 37 (expression -> expression MINUS expression .) ]
  ! DOUBLEMINUS     [ reduce using rule 37 (expression -> expression MINUS expression .) ]
  ! PLUS            [ shift and go to state 33 ]
  ! MINUS           [ shift and go to state 34 ]
  ! LESSER          [ shift and go to state 39 ]
  ! GREATER         [ shift and go to state 40 ]
  ! LESSEQUAL       [ shift and go to state 41 ]
  ! GREATEQUAL      [ shift and go to state 42 ]
  ! NOTEQUAL        [ shift and go to state 43 ]
  ! DOUBLEQUAL      [ shift and go to state 44 ]
  ! AND             [ shift and go to state 45 ]
  ! OR              [ shift and go to state 46 ]


state 70

    (38) expression -> expression MULTIPLY expression .
    (36) expression -> expression . PLUS expression
    (37) expression -> expression . MINUS expression
    (38) expression -> expression . MULTIPLY expression
    (39) expression -> expression . DIVIDE expression
    (41) expression -> expression . MOD expression
    (42) expression -> expression . POWER expression
    (43) expression -> expression . LESSER expression
    (44) expression -> expression . GREATER expression
    (45) expression -> expression . LESSEQUAL expression
    (46) expression -> expression . GREATEQUAL expression
    (47) expression -> expression . NOTEQUAL expression
    (48) expression -> expression . DOUBLEQUAL expression
    (49) expression -> expression . AND expression
    (50) expression -> expression . OR expression
    (52) expression -> expression . DOUBLEPLUS
    (53) expression -> expression . DOUBLEMINUS

    SCOLON          reduce using rule 38 (expression -> expression MULTIPLY expression .)
    PLUS            reduce using rule 38 (expression -> expression MULTIPLY expression .)
    MINUS           reduce using rule 38 (expression -> expression MULTIPLY expression .)
    MULTIPLY        reduce using rule 38 (expression -> expression MULTIPLY expression .)
    DIVIDE          reduce using rule 38 (expression -> expression MULTIPLY expression .)
    MOD             reduce using rule 38 (expression -> expression MULTIPLY expression .)
    LESSER          reduce using rule 38 (expression -> expression MULTIPLY expression .)
    GREATER         reduce using rule 38 (expression -> expression MULTIPLY expression .)
    LESSEQUAL       reduce using rule 38 (expression -> expression MULTIPLY expression .)
    GREATEQUAL      reduce using rule 38 (expression -> expression MULTIPLY expression .)
    NOTEQUAL        reduce using rule 38 (expression -> expression MULTIPLY expression .)
    DOUBLEQUAL      reduce using rule 38 (expression -> expression MULTIPLY expression .)
    AND             reduce using rule 38 (expression -> expression MULTIPLY expression .)
    OR              reduce using rule 38 (expression -> expression MULTIPLY expression .)
    RPAREN          reduce using rule 38 (expression -> expression MULTIPLY expression .)
    COMMA           reduce using rule 38 (expression -> expression MULTIPLY expression .)
    POWER           shift and go to state 38
    DOUBLEPLUS      shift and go to state 47
    DOUBLEMINUS     shift and go to state 48

  ! POWER           [ reduce using rule 38 (expression -> expression MULTIPLY expression .) ]
  ! DOUBLEPLUS      [ reduce using rule 38 (expression -> expression MULTIPLY expression .) ]
  ! DOUBLEMINUS     [ reduce using rule 38 (expression -> expression MULTIPLY expression .) ]
  ! PLUS            [ shift and go to state 33 ]
  ! MINUS           [ shift and go to state 34 ]
  ! MULTIPLY        [ shift and go to state 35 ]
  ! DIVIDE          [ shift and go to state 36 ]
  ! MOD             [ shift and go to state 37 ]
  ! LESSER          [ shift and go to state 39 ]
  ! GREATER         [ shift and go to state 40 ]
  ! LESSEQUAL       [ shift and go to state 41 ]
  ! GREATEQUAL      [ shift and go to state 42 ]
  ! NOTEQUAL        [ shift and go to state 43 ]
  ! DOUBLEQUAL      [ shift and go to state 44 ]
  ! AND             [ shift and go to state 45 ]
  ! OR              [ shift and go to state 46 ]


state 71

    (39) expression -> expression DIVIDE expression .
    (36) expression -> expression . PLUS expression
    (37) expression -> expression . MINUS expression
    (38) expression -> expression . MULTIPLY expression
    (39) expression -> expression . DIVIDE expression
    (41) expression -> expression . MOD expression
    (42) expression -> expression . POWER expression
    (43) expression -> expression . LESSER expression
    (44) expression -> expression . GREATER expression
    (45) expression -> expression . LESSEQUAL expression
    (46) expression -> expression . GREATEQUAL expression
    (47) expression -> expression . NOTEQUAL expression
    (48) expression -> expression . DOUBLEQUAL expression
    (49) expression -> expression . AND expression
    (50) expression -> expression . OR expression
    (52) expression -> expression . DOUBLEPLUS
    (53) expression -> expression . DOUBLEMINUS

    SCOLON          reduce using rule 39 (expression -> expression DIVIDE expression .)
    PLUS            reduce using rule 39 (expression -> expression DIVIDE expression .)
    MINUS           reduce using rule 39 (expression -> expression DIVIDE expression .)
    MULTIPLY        reduce using rule 39 (expression -> expression DIVIDE expression .)
    DIVIDE          reduce using rule 39 (expression -> expression DIVIDE expression .)
    MOD             reduce using rule 39 (expression -> expression DIVIDE expression .)
    LESSER          reduce using rule 39 (expression -> expression DIVIDE expression .)
    GREATER         reduce using rule 39 (expression -> expression DIVIDE expression .)
    LESSEQUAL       reduce using rule 39 (expression -> expression DIVIDE expression .)
    GREATEQUAL      reduce using rule 39 (expression -> expression DIVIDE expression .)
    NOTEQUAL        reduce using rule 39 (expression -> expression DIVIDE expression .)
    DOUBLEQUAL      reduce using rule 39 (expression -> expression DIVIDE expression .)
    AND             reduce using rule 39 (expression -> expression DIVIDE expression .)
    OR              reduce using rule 39 (expression -> expression DIVIDE expression .)
    RPAREN          reduce using rule 39 (expression -> expression DIVIDE expression .)
    COMMA           reduce using rule 39 (expression -> expression DIVIDE expression .)
    POWER           shift and go to state 38
    DOUBLEPLUS      shift and go to state 47
    DOUBLEMINUS     shift and go to state 48

  ! POWER           [ reduce using rule 39 (expression -> expression DIVIDE expression .) ]
  ! DOUBLEPLUS      [ reduce using rule 39 (expression -> expression DIVIDE expression .) ]
  ! DOUBLEMINUS     [ reduce using rule 39 (expression -> expression DIVIDE expression .) ]
  ! PLUS            [ shift and go to state 33 ]
  ! MINUS           [ shift and go to state 34 ]
  ! MULTIPLY        [ shift and go to state 35 ]
  ! DIVIDE          [ shift and go to state 36 ]
  ! MOD             [ shift and go to state 37 ]
  ! LESSER          [ shift and go to state 39 ]
  ! GREATER         [ shift and go to state 40 ]
  ! LESSEQUAL       [ shift and go to state 41 ]
  ! GREATEQUAL      [ shift and go to state 42 ]
  ! NOTEQUAL        [ shift and go to state 43 ]
  ! DOUBLEQUAL      [ shift and go to state 44 ]
  ! AND             [ shift and go to state 45 ]
  ! OR              [ shift and go to state 46 ]


state 72

    (41) expression -> expression MOD expression .
    (36) expression -> expression . PLUS expression
    (37) expression -> expression . MINUS expression
    (38) expression -> expression . MULTIPLY expression
    (39) expression -> expression . DIVIDE expression
    (41) expression -> expression . MOD expression
    (42) expression -> expression . POWER expression
    (43) expression -> expression . LESSER expression
    (44) expression -> expression . GREATER expression
    (45) expression -> expression . LESSEQUAL expression
    (46) expression -> expression . GREATEQUAL expression
    (47) expression -> expression . NOTEQUAL expression
    (48) expression -> expression . DOUBLEQUAL expression
    (49) expression -> expression . AND expression
    (50) expression -> expression . OR expression
    (52) expression -> expression . DOUBLEPLUS
    (53) expression -> expression . DOUBLEMINUS

    SCOLON          reduce using rule 41 (expression -> expression MOD expression .)
    PLUS            reduce using rule 41 (expression -> expression MOD expression .)
    MINUS           reduce using rule 41 (expression -> expression MOD expression .)
    MULTIPLY        reduce using rule 41 (expression -> expression MOD expression .)
    DIVIDE          reduce using rule 41 (expression -> expression MOD expression .)
    MOD             reduce using rule 41 (expression -> expression MOD expression .)
    LESSER          reduce using rule 41 (expression -> expression MOD expression .)
    GREATER         reduce using rule 41 (expression -> expression MOD expression .)
    LESSEQUAL       reduce using rule 41 (expression -> expression MOD expression .)
    GREATEQUAL      reduce using rule 41 (expression -> expression MOD expression .)
    NOTEQUAL        reduce using rule 41 (expression -> expression MOD expression .)
    DOUBLEQUAL      reduce using rule 41 (expression -> expression MOD expression .)
    AND             reduce using rule 41 (expression -> expression MOD expression .)
    OR              reduce using rule 41 (expression -> expression MOD expression .)
    RPAREN          reduce using rule 41 (expression -> expression MOD expression .)
    COMMA           reduce using rule 41 (expression -> expression MOD expression .)
    POWER           shift and go to state 38
    DOUBLEPLUS      shift and go to state 47
    DOUBLEMINUS     shift and go to state 48

  ! POWER           [ reduce using rule 41 (expression -> expression MOD expression .) ]
  ! DOUBLEPLUS      [ reduce using rule 41 (expression -> expression MOD expression .) ]
  ! DOUBLEMINUS     [ reduce using rule 41 (expression -> expression MOD expression .) ]
  ! PLUS            [ shift and go to state 33 ]
  ! MINUS           [ shift and go to state 34 ]
  ! MULTIPLY        [ shift and go to state 35 ]
  ! DIVIDE          [ shift and go to state 36 ]
  ! MOD             [ shift and go to state 37 ]
  ! LESSER          [ shift and go to state 39 ]
  ! GREATER         [ shift and go to state 40 ]
  ! LESSEQUAL       [ shift and go to state 41 ]
  ! GREATEQUAL      [ shift and go to state 42 ]
  ! NOTEQUAL        [ shift and go to state 43 ]
  ! DOUBLEQUAL      [ shift and go to state 44 ]
  ! AND             [ shift and go to state 45 ]
  ! OR              [ shift and go to state 46 ]


state 73

    (42) expression -> expression POWER expression .
    (36) expression -> expression . PLUS expression
    (37) expression -> expression . MINUS expression
    (38) expression -> expression . MULTIPLY expression
    (39) expression -> expression . DIVIDE expression
    (41) expression -> expression . MOD expression
    (42) expression -> expression . POWER expression
    (43) expression -> expression . LESSER expression
    (44) expression -> expression . GREATER expression
    (45) expression -> expression . LESSEQUAL expression
    (46) expression -> expression . GREATEQUAL expression
    (47) expression -> expression . NOTEQUAL expression
    (48) expression -> expression . DOUBLEQUAL expression
    (49) expression -> expression . AND expression
    (50) expression -> expression . OR expression
    (52) expression -> expression . DOUBLEPLUS
    (53) expression -> expression . DOUBLEMINUS

    SCOLON          reduce using rule 42 (expression -> expression POWER expression .)
    PLUS            reduce using rule 42 (expression -> expression POWER expression .)
    MINUS           reduce using rule 42 (expression -> expression POWER expression .)
    MULTIPLY        reduce using rule 42 (expression -> expression POWER expression .)
    DIVIDE          reduce using rule 42 (expression -> expression POWER expression .)
    MOD             reduce using rule 42 (expression -> expression POWER expression .)
    POWER           reduce using rule 42 (expression -> expression POWER expression .)
    LESSER          reduce using rule 42 (expression -> expression POWER expression .)
    GREATER         reduce using rule 42 (expression -> expression POWER expression .)
    LESSEQUAL       reduce using rule 42 (expression -> expression POWER expression .)
    GREATEQUAL      reduce using rule 42 (expression -> expression POWER expression .)
    NOTEQUAL        reduce using rule 42 (expression -> expression POWER expression .)
    DOUBLEQUAL      reduce using rule 42 (expression -> expression POWER expression .)
    AND             reduce using rule 42 (expression -> expression POWER expression .)
    OR              reduce using rule 42 (expression -> expression POWER expression .)
    RPAREN          reduce using rule 42 (expression -> expression POWER expression .)
    COMMA           reduce using rule 42 (expression -> expression POWER expression .)
    DOUBLEPLUS      shift and go to state 47
    DOUBLEMINUS     shift and go to state 48

  ! DOUBLEPLUS      [ reduce using rule 42 (expression -> expression POWER expression .) ]
  ! DOUBLEMINUS     [ reduce using rule 42 (expression -> expression POWER expression .) ]
  ! PLUS            [ shift and go to state 33 ]
  ! MINUS           [ shift and go to state 34 ]
  ! MULTIPLY        [ shift and go to state 35 ]
  ! DIVIDE          [ shift and go to state 36 ]
  ! MOD             [ shift and go to state 37 ]
  ! POWER           [ shift and go to state 38 ]
  ! LESSER          [ shift and go to state 39 ]
  ! GREATER         [ shift and go to state 40 ]
  ! LESSEQUAL       [ shift and go to state 41 ]
  ! GREATEQUAL      [ shift and go to state 42 ]
  ! NOTEQUAL        [ shift and go to state 43 ]
  ! DOUBLEQUAL      [ shift and go to state 44 ]
  ! AND             [ shift and go to state 45 ]
  ! OR              [ shift and go to state 46 ]


state 74

    (43) expression -> expression LESSER expression .
    (36) expression -> expression . PLUS expression
    (37) expression -> expression . MINUS expression
    (38) expression -> expression . MULTIPLY expression
    (39) expression -> expression . DIVIDE expression
    (41) expression -> expression . MOD expression
    (42) expression -> expression . POWER expression
    (43) expression -> expression . LESSER expression
    (44) expression -> expression . GREATER expression
    (45) expression -> expression . LESSEQUAL expression
    (46) expression -> expression . GREATEQUAL expression
    (47) expression -> expression . NOTEQUAL expression
    (48) expression -> expression . DOUBLEQUAL expression
    (49) expression -> expression . AND expression
    (50) expression -> expression . OR expression
    (52) expression -> expression . DOUBLEPLUS
    (53) expression -> expression . DOUBLEMINUS

    SCOLON          reduce using rule 43 (expression -> expression LESSER expression .)
    LESSER          reduce using rule 43 (expression -> expression LESSER expression .)
    GREATER         reduce using rule 43 (expression -> expression LESSER expression .)
    LESSEQUAL       reduce using rule 43 (expression -> expression LESSER expression .)
    GREATEQUAL      reduce using rule 43 (expression -> expression LESSER expression .)
    NOTEQUAL        reduce using rule 43 (expression -> expression LESSER expression .)
    DOUBLEQUAL      reduce using rule 43 (expression -> expression LESSER expression .)
    AND             reduce using rule 43 (expression -> expression LESSER expression .)
    OR              reduce using rule 43 (expression -> expression LESSER expression .)
    RPAREN          reduce using rule 43 (expression -> expression LESSER expression .)
    COMMA           reduce using rule 43 (expression -> expression LESSER expression .)
    PLUS            shift and go to state 33
    MINUS           shift and go to state 34
    MULTIPLY        shift and go to state 35
    DIVIDE          shift and go to state 36
    MOD             shift and go to state 37
    POWER           shift and go to state 38
    DOUBLEPLUS      shift and go to state 47
    DOUBLEMINUS     shift and go to state 48

  ! PLUS            [ reduce using rule 43 (expression -> expression LESSER expression .) ]
  ! MINUS           [ reduce using rule 43 (expression -> expression LESSER expression .) ]
  ! MULTIPLY        [ reduce using rule 43 (expression -> expression LESSER expression .) ]
  ! DIVIDE          [ reduce using rule 43 (expression -> expression LESSER expression .) ]
  ! MOD             [ reduce using rule 43 (expression -> expression LESSER expression .) ]
  ! POWER           [ reduce using rule 43 (expression -> expression LESSER expression .) ]
  ! DOUBLEPLUS      [ reduce using rule 43 (expression -> expression LESSER expression .) ]
  ! DOUBLEMINUS     [ reduce using rule 43 (expression -> expression LESSER expression .) ]
  ! LESSER          [ shift and go to state 39 ]
  ! GREATER         [ shift and go to state 40 ]
  ! LESSEQUAL       [ shift and go to state 41 ]
  ! GREATEQUAL      [ shift and go to state 42 ]
  ! NOTEQUAL        [ shift and go to state 43 ]
  ! DOUBLEQUAL      [ shift and go to state 44 ]
  ! AND             [ shift and go to state 45 ]
  ! OR              [ shift and go to state 46 ]


state 75

    (44) expression -> expression GREATER expression .
    (36) expression -> expression . PLUS expression
    (37) expression -> expression . MINUS expression
    (38) expression -> expression . MULTIPLY expression
    (39) expression -> expression . DIVIDE expression
    (41) expression -> expression . MOD expression
    (42) expression -> expression . POWER expression
    (43) expression -> expression . LESSER expression
    (44) expression -> expression . GREATER expression
    (45) expression -> expression . LESSEQUAL expression
    (46) expression -> expression . GREATEQUAL expression
    (47) expression -> expression . NOTEQUAL expression
    (48) expression -> expression . DOUBLEQUAL expression
    (49) expression -> expression . AND expression
    (50) expression -> expression . OR expression
    (52) expression -> expression . DOUBLEPLUS
    (53) expression -> expression . DOUBLEMINUS

    SCOLON          reduce using rule 44 (expression -> expression GREATER expression .)
    LESSER          reduce using rule 44 (expression -> expression GREATER expression .)
    GREATER         reduce using rule 44 (expression -> expression GREATER expression .)
    LESSEQUAL       reduce using rule 44 (expression -> expression GREATER expression .)
    GREATEQUAL      reduce using rule 44 (expression -> expression GREATER expression .)
    NOTEQUAL        reduce using rule 44 (expression -> expression GREATER expression .)
    DOUBLEQUAL      reduce using rule 44 (expression -> expression GREATER expression .)
    AND             reduce using rule 44 (expression -> expression GREATER expression .)
    OR              reduce using rule 44 (expression -> expression GREATER expression .)
    RPAREN          reduce using rule 44 (expression -> expression GREATER expression .)
    COMMA           reduce using rule 44 (expression -> expression GREATER expression .)
    PLUS            shift and go to state 33
    MINUS           shift and go to state 34
    MULTIPLY        shift and go to state 35
    DIVIDE          shift and go to state 36
    MOD             shift and go to state 37
    POWER           shift and go to state 38
    DOUBLEPLUS      shift and go to state 47
    DOUBLEMINUS     shift and go to state 48

  ! PLUS            [ reduce using rule 44 (expression -> expression GREATER expression .) ]
  ! MINUS           [ reduce using rule 44 (expression -> expression GREATER expression .) ]
  ! MULTIPLY        [ reduce using rule 44 (expression -> expression GREATER expression .) ]
  ! DIVIDE          [ reduce using rule 44 (expression -> expression GREATER expression .) ]
  ! MOD             [ reduce using rule 44 (expression -> expression GREATER expression .) ]
  ! POWER           [ reduce using rule 44 (expression -> expression GREATER expression .) ]
  ! DOUBLEPLUS      [ reduce using rule 44 (expression -> expression GREATER expression .) ]
  ! DOUBLEMINUS     [ reduce using rule 44 (expression -> expression GREATER expression .) ]
  ! LESSER          [ shift and go to state 39 ]
  ! GREATER         [ shift and go to state 40 ]
  ! LESSEQUAL       [ shift and go to state 41 ]
  ! GREATEQUAL      [ shift and go to state 42 ]
  ! NOTEQUAL        [ shift and go to state 43 ]
  ! DOUBLEQUAL      [ shift and go to state 44 ]
  ! AND             [ shift and go to state 45 ]
  ! OR              [ shift and go to state 46 ]


state 76

    (45) expression -> expression LESSEQUAL expression .
    (36) expression -> expression . PLUS expression
    (37) expression -> expression . MINUS expression
    (38) expression -> expression . MULTIPLY expression
    (39) expression -> expression . DIVIDE expression
    (41) expression -> expression . MOD expression
    (42) expression -> expression . POWER expression
    (43) expression -> expression . LESSER expression
    (44) expression -> expression . GREATER expression
    (45) expression -> expression . LESSEQUAL expression
    (46) expression -> expression . GREATEQUAL expression
    (47) expression -> expression . NOTEQUAL expression
    (48) expression -> expression . DOUBLEQUAL expression
    (49) expression -> expression . AND expression
    (50) expression -> expression . OR expression
    (52) expression -> expression . DOUBLEPLUS
    (53) expression -> expression . DOUBLEMINUS

    SCOLON          reduce using rule 45 (expression -> expression LESSEQUAL expression .)
    LESSER          reduce using rule 45 (expression -> expression LESSEQUAL expression .)
    GREATER         reduce using rule 45 (expression -> expression LESSEQUAL expression .)
    LESSEQUAL       reduce using rule 45 (expression -> expression LESSEQUAL expression .)
    GREATEQUAL      reduce using rule 45 (expression -> expression LESSEQUAL expression .)
    NOTEQUAL        reduce using rule 45 (expression -> expression LESSEQUAL expression .)
    DOUBLEQUAL      reduce using rule 45 (expression -> expression LESSEQUAL expression .)
    AND             reduce using rule 45 (expression -> expression LESSEQUAL expression .)
    OR              reduce using rule 45 (expression -> expression LESSEQUAL expression .)
    RPAREN          reduce using rule 45 (expression -> expression LESSEQUAL expression .)
    COMMA           reduce using rule 45 (expression -> expression LESSEQUAL expression .)
    PLUS            shift and go to state 33
    MINUS           shift and go to state 34
    MULTIPLY        shift and go to state 35
    DIVIDE          shift and go to state 36
    MOD             shift and go to state 37
    POWER           shift and go to state 38
    DOUBLEPLUS      shift and go to state 47
    DOUBLEMINUS     shift and go to state 48

  ! PLUS            [ reduce using rule 45 (expression -> expression LESSEQUAL expression .) ]
  ! MINUS           [ reduce using rule 45 (expression -> expression LESSEQUAL expression .) ]
  ! MULTIPLY        [ reduce using rule 45 (expression -> expression LESSEQUAL expression .) ]
  ! DIVIDE          [ reduce using rule 45 (expression -> expression LESSEQUAL expression .) ]
  ! MOD             [ reduce using rule 45 (expression -> expression LESSEQUAL expression .) ]
  ! POWER           [ reduce using rule 45 (expression -> expression LESSEQUAL expression .) ]
  ! DOUBLEPLUS      [ reduce using rule 45 (expression -> expression LESSEQUAL expression .) ]
  ! DOUBLEMINUS     [ reduce using rule 45 (expression -> expression LESSEQUAL expression .) ]
  ! LESSER          [ shift and go to state 39 ]
  ! GREATER         [ shift and go to state 40 ]
  ! LESSEQUAL       [ shift and go to state 41 ]
  ! GREATEQUAL      [ shift and go to state 42 ]
  ! NOTEQUAL        [ shift and go to state 43 ]
  ! DOUBLEQUAL      [ shift and go to state 44 ]
  ! AND             [ shift and go to state 45 ]
  ! OR              [ shift and go to state 46 ]


state 77

    (46) expression -> expression GREATEQUAL expression .
    (36) expression -> expression . PLUS expression
    (37) expression -> expression . MINUS expression
    (38) expression -> expression . MULTIPLY expression
    (39) expression -> expression . DIVIDE expression
    (41) expression -> expression . MOD expression
    (42) expression -> expression . POWER expression
    (43) expression -> expression . LESSER expression
    (44) expression -> expression . GREATER expression
    (45) expression -> expression . LESSEQUAL expression
    (46) expression -> expression . GREATEQUAL expression
    (47) expression -> expression . NOTEQUAL expression
    (48) expression -> expression . DOUBLEQUAL expression
    (49) expression -> expression . AND expression
    (50) expression -> expression . OR expression
    (52) expression -> expression . DOUBLEPLUS
    (53) expression -> expression . DOUBLEMINUS

    SCOLON          reduce using rule 46 (expression -> expression GREATEQUAL expression .)
    LESSER          reduce using rule 46 (expression -> expression GREATEQUAL expression .)
    GREATER         reduce using rule 46 (expression -> expression GREATEQUAL expression .)
    LESSEQUAL       reduce using rule 46 (expression -> expression GREATEQUAL expression .)
    GREATEQUAL      reduce using rule 46 (expression -> expression GREATEQUAL expression .)
    NOTEQUAL        reduce using rule 46 (expression -> expression GREATEQUAL expression .)
    DOUBLEQUAL      reduce using rule 46 (expression -> expression GREATEQUAL expression .)
    AND             reduce using rule 46 (expression -> expression GREATEQUAL expression .)
    OR              reduce using rule 46 (expression -> expression GREATEQUAL expression .)
    RPAREN          reduce using rule 46 (expression -> expression GREATEQUAL expression .)
    COMMA           reduce using rule 46 (expression -> expression GREATEQUAL expression .)
    PLUS            shift and go to state 33
    MINUS           shift and go to state 34
    MULTIPLY        shift and go to state 35
    DIVIDE          shift and go to state 36
    MOD             shift and go to state 37
    POWER           shift and go to state 38
    DOUBLEPLUS      shift and go to state 47
    DOUBLEMINUS     shift and go to state 48

  ! PLUS            [ reduce using rule 46 (expression -> expression GREATEQUAL expression .) ]
  ! MINUS           [ reduce using rule 46 (expression -> expression GREATEQUAL expression .) ]
  ! MULTIPLY        [ reduce using rule 46 (expression -> expression GREATEQUAL expression .) ]
  ! DIVIDE          [ reduce using rule 46 (expression -> expression GREATEQUAL expression .) ]
  ! MOD             [ reduce using rule 46 (expression -> expression GREATEQUAL expression .) ]
  ! POWER           [ reduce using rule 46 (expression -> expression GREATEQUAL expression .) ]
  ! DOUBLEPLUS      [ reduce using rule 46 (expression -> expression GREATEQUAL expression .) ]
  ! DOUBLEMINUS     [ reduce using rule 46 (expression -> expression GREATEQUAL expression .) ]
  ! LESSER          [ shift and go to state 39 ]
  ! GREATER         [ shift and go to state 40 ]
  ! LESSEQUAL       [ shift and go to state 41 ]
  ! GREATEQUAL      [ shift and go to state 42 ]
  ! NOTEQUAL        [ shift and go to state 43 ]
  ! DOUBLEQUAL      [ shift and go to state 44 ]
  ! AND             [ shift and go to state 45 ]
  ! OR              [ shift and go to state 46 ]


state 78

    (47) expression -> expression NOTEQUAL expression .
    (36) expression -> expression . PLUS expression
    (37) expression -> expression . MINUS expression
    (38) expression -> expression . MULTIPLY expression
    (39) expression -> expression . DIVIDE expression
    (41) expression -> expression . MOD expression
    (42) expression -> expression . POWER expression
    (43) expression -> expression . LESSER expression
    (44) expression -> expression . GREATER expression
    (45) expression -> expression . LESSEQUAL expression
    (46) expression -> expression . GREATEQUAL expression
    (47) expression -> expression . NOTEQUAL expression
    (48) expression -> expression . DOUBLEQUAL expression
    (49) expression -> expression . AND expression
    (50) expression -> expression . OR expression
    (52) expression -> expression . DOUBLEPLUS
    (53) expression -> expression . DOUBLEMINUS

    SCOLON          reduce using rule 47 (expression -> expression NOTEQUAL expression .)
    NOTEQUAL        reduce using rule 47 (expression -> expression NOTEQUAL expression .)
    DOUBLEQUAL      reduce using rule 47 (expression -> expression NOTEQUAL expression .)
    AND             reduce using rule 47 (expression -> expression NOTEQUAL expression .)
    OR              reduce using rule 47 (expression -> expression NOTEQUAL expression .)
    RPAREN          reduce using rule 47 (expression -> expression NOTEQUAL expression .)
    COMMA           reduce using rule 47 (expression -> expression NOTEQUAL expression .)
    PLUS            shift and go to state 33
    MINUS           shift and go to state 34
    MULTIPLY        shift and go to state 35
    DIVIDE          shift and go to state 36
    MOD             shift and go to state 37
    POWER           shift and go to state 38
    LESSER          shift and go to state 39
    GREATER         shift and go to state 40
    LESSEQUAL       shift and go to state 41
    GREATEQUAL      shift and go to state 42
    DOUBLEPLUS      shift and go to state 47
    DOUBLEMINUS     shift and go to state 48

  ! PLUS            [ reduce using rule 47 (expression -> expression NOTEQUAL expression .) ]
  ! MINUS           [ reduce using rule 47 (expression -> expression NOTEQUAL expression .) ]
  ! MULTIPLY        [ reduce using rule 47 (expression -> expression NOTEQUAL expression .) ]
  ! DIVIDE          [ reduce using rule 47 (expression -> expression NOTEQUAL expression .) ]
  ! MOD             [ reduce using rule 47 (expression -> expression NOTEQUAL expression .) ]
  ! POWER           [ reduce using rule 47 (expression -> expression NOTEQUAL expression .) ]
  ! LESSER          [ reduce using rule 47 (expression -> expression NOTEQUAL expression .) ]
  ! GREATER         [ reduce using rule 47 (expression -> expression NOTEQUAL expression .) ]
  ! LESSEQUAL       [ reduce using rule 47 (expression -> expression NOTEQUAL expression .) ]
  ! GREATEQUAL      [ reduce using rule 47 (expression -> expression NOTEQUAL expression .) ]
  ! DOUBLEPLUS      [ reduce using rule 47 (expression -> expression NOTEQUAL expression .) ]
  ! DOUBLEMINUS     [ reduce using rule 47 (expression -> expression NOTEQUAL expression .) ]
  ! NOTEQUAL        [ shift and go to state 43 ]
  ! DOUBLEQUAL      [ shift and go to state 44 ]
  ! AND             [ shift and go to state 45 ]
  ! OR              [ shift and go to state 46 ]


state 79

    (48) expression -> expression DOUBLEQUAL expression .
    (36) expression -> expression . PLUS expression
    (37) expression -> expression . MINUS expression
    (38) expression -> expression . MULTIPLY expression
    (39) expression -> expression . DIVIDE expression
    (41) expression -> expression . MOD expression
    (42) expression -> expression . POWER expression
    (43) expression -> expression . LESSER expression
    (44) expression -> expression . GREATER expression
    (45) expression -> expression . LESSEQUAL expression
    (46) expression -> expression . GREATEQUAL expression
    (47) expression -> expression . NOTEQUAL expression
    (48) expression -> expression . DOUBLEQUAL expression
    (49) expression -> expression . AND expression
    (50) expression -> expression . OR expression
    (52) expression -> expression . DOUBLEPLUS
    (53) expression -> expression . DOUBLEMINUS

    SCOLON          reduce using rule 48 (expression -> expression DOUBLEQUAL expression .)
    NOTEQUAL        reduce using rule 48 (expression -> expression DOUBLEQUAL expression .)
    DOUBLEQUAL      reduce using rule 48 (expression -> expression DOUBLEQUAL expression .)
    AND             reduce using rule 48 (expression -> expression DOUBLEQUAL expression .)
    OR              reduce using rule 48 (expression -> expression DOUBLEQUAL expression .)
    RPAREN          reduce using rule 48 (expression -> expression DOUBLEQUAL expression .)
    COMMA           reduce using rule 48 (expression -> expression DOUBLEQUAL expression .)
    PLUS            shift and go to state 33
    MINUS           shift and go to state 34
    MULTIPLY        shift and go to state 35
    DIVIDE          shift and go to state 36
    MOD             shift and go to state 37
    POWER           shift and go to state 38
    LESSER          shift and go to state 39
    GREATER         shift and go to state 40
    LESSEQUAL       shift and go to state 41
    GREATEQUAL      shift and go to state 42
    DOUBLEPLUS      shift and go to state 47
    DOUBLEMINUS     shift and go to state 48

  ! PLUS            [ reduce using rule 48 (expression -> expression DOUBLEQUAL expression .) ]
  ! MINUS           [ reduce using rule 48 (expression -> expression DOUBLEQUAL expression .) ]
  ! MULTIPLY        [ reduce using rule 48 (expression -> expression DOUBLEQUAL expression .) ]
  ! DIVIDE          [ reduce using rule 48 (expression -> expression DOUBLEQUAL expression .) ]
  ! MOD             [ reduce using rule 48 (expression -> expression DOUBLEQUAL expression .) ]
  ! POWER           [ reduce using rule 48 (expression -> expression DOUBLEQUAL expression .) ]
  ! LESSER          [ reduce using rule 48 (expression -> expression DOUBLEQUAL expression .) ]
  ! GREATER         [ reduce using rule 48 (expression -> expression DOUBLEQUAL expression .) ]
  ! LESSEQUAL       [ reduce using rule 48 (expression -> expression DOUBLEQUAL expression .) ]
  ! GREATEQUAL      [ reduce using rule 48 (expression -> expression DOUBLEQUAL expression .) ]
  ! DOUBLEPLUS      [ reduce using rule 48 (expression -> expression DOUBLEQUAL expression .) ]
  ! DOUBLEMINUS     [ reduce using rule 48 (expression -> expression DOUBLEQUAL expression .) ]
  ! NOTEQUAL        [ shift and go to state 43 ]
  ! DOUBLEQUAL      [ shift and go to state 44 ]
  ! AND             [ shift and go to state 45 ]
  ! OR              [ shift and go to state 46 ]


state 80

    (49) expression -> expression AND expression .
    (36) expression -> expression . PLUS expression
    (37) expression -> expression . MINUS expression
    (38) expression -> expression . MULTIPLY expression
    (39) expression -> expression . DIVIDE expression
    (41) expression -> expression . MOD expression
    (42) expression -> expression . POWER expression
    (43) expression -> expression . LESSER expression
    (44) expression -> expression . GREATER expression
    (45) expression -> expression . LESSEQUAL expression
    (46) expression -> expression . GREATEQUAL expression
    (47) expression -> expression . NOTEQUAL expression
    (48) expression -> expression . DOUBLEQUAL expression
    (49) expression -> expression . AND expression
    (50) expression -> expression . OR expression
    (52) expression -> expression . DOUBLEPLUS
    (53) expression -> expression . DOUBLEMINUS

    SCOLON          reduce using rule 49 (expression -> expression AND expression .)
    AND             reduce using rule 49 (expression -> expression AND expression .)
    OR              reduce using rule 49 (expression -> expression AND expression .)
    RPAREN          reduce using rule 49 (expression -> expression AND expression .)
    COMMA           reduce using rule 49 (expression -> expression AND expression .)
    PLUS            shift and go to state 33
    MINUS           shift and go to state 34
    MULTIPLY        shift and go to state 35
    DIVIDE          shift and go to state 36
    MOD             shift and go to state 37
    POWER           shift and go to state 38
    LESSER          shift and go to state 39
    GREATER         shift and go to state 40
    LESSEQUAL       shift and go to state 41
    GREATEQUAL      shift and go to state 42
    NOTEQUAL        shift and go to state 43
    DOUBLEQUAL      shift and go to state 44
    DOUBLEPLUS      shift and go to state 47
    DOUBLEMINUS     shift and go to state 48

  ! PLUS            [ reduce using rule 49 (expression -> expression AND expression .) ]
  ! MINUS           [ reduce using rule 49 (expression -> expression AND expression .) ]
  ! MULTIPLY        [ reduce using rule 49 (expression -> expression AND expression .) ]
  ! DIVIDE          [ reduce using rule 49 (expression -> expression AND expression .) ]
  ! MOD             [ reduce using rule 49 (expression -> expression AND expression .) ]
  ! POWER           [ reduce using rule 49 (expression -> expression AND expression .) ]
  ! LESSER          [ reduce using rule 49 (expression -> expression AND expression .) ]
  ! GREATER         [ reduce using rule 49 (expression -> expression AND expression .) ]
  ! LESSEQUAL       [ reduce using rule 49 (expression -> expression AND expression .) ]
  ! GREATEQUAL      [ reduce using rule 49 (expression -> expression AND expression .) ]
  ! NOTEQUAL        [ reduce using rule 49 (expression -> expression AND expression .) ]
  ! DOUBLEQUAL      [ reduce using rule 49 (expression -> expression AND expression .) ]
  ! DOUBLEPLUS      [ reduce using rule 49 (expression -> expression AND expression .) ]
  ! DOUBLEMINUS     [ reduce using rule 49 (expression -> expression AND expression .) ]
  ! AND             [ shift and go to state 45 ]
  ! OR              [ shift and go to state 46 ]


state 81

    (50) expression -> expression OR expression .
    (36) expression -> expression . PLUS expression
    (37) expression -> expression . MINUS expression
    (38) expression -> expression . MULTIPLY expression
    (39) expression -> expression . DIVIDE expression
    (41) expression -> expression . MOD expression
    (42) expression -> expression . POWER expression
    (43) expression -> expression . LESSER expression
    (44) expression -> expression . GREATER expression
    (45) expression -> expression . LESSEQUAL expression
    (46) expression -> expression . GREATEQUAL expression
    (47) expression -> expression . NOTEQUAL expression
    (48) expression -> expression . DOUBLEQUAL expression
    (49) expression -> expression . AND expression
    (50) expression -> expression . OR expression
    (52) expression -> expression . DOUBLEPLUS
    (53) expression -> expression . DOUBLEMINUS

    SCOLON          reduce using rule 50 (expression -> expression OR expression .)
    OR              reduce using rule 50 (expression -> expression OR expression .)
    RPAREN          reduce using rule 50 (expression -> expression OR expression .)
    COMMA           reduce using rule 50 (expression -> expression OR expression .)
    PLUS            shift and go to state 33
    MINUS           shift and go to state 34
    MULTIPLY        shift and go to state 35
    DIVIDE          shift and go to state 36
    MOD             shift and go to state 37
    POWER           shift and go to state 38
    LESSER          shift and go to state 39
    GREATER         shift and go to state 40
    LESSEQUAL       shift and go to state 41
    GREATEQUAL      shift and go to state 42
    NOTEQUAL        shift and go to state 43
    DOUBLEQUAL      shift and go to state 44
    AND             shift and go to state 45
    DOUBLEPLUS      shift and go to state 47
    DOUBLEMINUS     shift and go to state 48

  ! PLUS            [ reduce using rule 50 (expression -> expression OR expression .) ]
  ! MINUS           [ reduce using rule 50 (expression -> expression OR expression .) ]
  ! MULTIPLY        [ reduce using rule 50 (expression -> expression OR expression .) ]
  ! DIVIDE          [ reduce using rule 50 (expression -> expression OR expression .) ]
  ! MOD             [ reduce using rule 50 (expression -> expression OR expression .) ]
  ! POWER           [ reduce using rule 50 (expression -> expression OR expression .) ]
  ! LESSER          [ reduce using rule 50 (expression -> expression OR expression .) ]
  ! GREATER         [ reduce using rule 50 (expression -> expression OR expression .) ]
  ! LESSEQUAL       [ reduce using rule 50 (expression -> expression OR expression .) ]
  ! GREATEQUAL      [ reduce using rule 50 (expression -> expression OR expression .) ]
  ! NOTEQUAL        [ reduce using rule 50 (expression -> expression OR expression .) ]
  ! DOUBLEQUAL      [ reduce using rule 50 (expression -> expression OR expression .) ]
  ! AND             [ reduce using rule 50 (expression -> expression OR expression .) ]
  ! DOUBLEPLUS      [ reduce using rule 50 (expression -> expression OR expression .) ]
  ! DOUBLEMINUS     [ reduce using rule 50 (expression -> expression OR expression .) ]
  ! OR              [ shift and go to state 46 ]


state 82

    (51) expression -> LPAREN expression RPAREN .

    SCOLON          reduce using rule 51 (expression -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 51 (expression -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 51 (expression -> LPAREN expression RPAREN .)
    MULTIPLY        reduce using rule 51 (expression -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 51 (expression -> LPAREN expression RPAREN .)
    MOD             reduce using rule 51 (expression -> LPAREN expression RPAREN .)
    POWER           reduce using rule 51 (expression -> LPAREN expression RPAREN .)
    LESSER          reduce using rule 51 (expression -> LPAREN expression RPAREN .)
    GREATER         reduce using rule 51 (expression -> LPAREN expression RPAREN .)
    LESSEQUAL       reduce using rule 51 (expression -> LPAREN expression RPAREN .)
    GREATEQUAL      reduce using rule 51 (expression -> LPAREN expression RPAREN .)
    NOTEQUAL        reduce using rule 51 (expression -> LPAREN expression RPAREN .)
    DOUBLEQUAL      reduce using rule 51 (expression -> LPAREN expression RPAREN .)
    AND             reduce using rule 51 (expression -> LPAREN expression RPAREN .)
    OR              reduce using rule 51 (expression -> LPAREN expression RPAREN .)
    DOUBLEPLUS      reduce using rule 51 (expression -> LPAREN expression RPAREN .)
    DOUBLEMINUS     reduce using rule 51 (expression -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 51 (expression -> LPAREN expression RPAREN .)
    COMMA           reduce using rule 51 (expression -> LPAREN expression RPAREN .)


state 83

    (25) struct_fetch -> VARID POINT VARID .
    (34) variableassign -> VARID . EQUAL expression

    SCOLON          reduce using rule 25 (struct_fetch -> VARID POINT VARID .)
    EQUAL           shift and go to state 62


state 84

    (24) struct_assign -> VARID POINT variableassign .

    SCOLON          reduce using rule 24 (struct_assign -> VARID POINT variableassign .)


state 85

    (34) variableassign -> VARID EQUAL expression .
    (36) expression -> expression . PLUS expression
    (37) expression -> expression . MINUS expression
    (38) expression -> expression . MULTIPLY expression
    (39) expression -> expression . DIVIDE expression
    (41) expression -> expression . MOD expression
    (42) expression -> expression . POWER expression
    (43) expression -> expression . LESSER expression
    (44) expression -> expression . GREATER expression
    (45) expression -> expression . LESSEQUAL expression
    (46) expression -> expression . GREATEQUAL expression
    (47) expression -> expression . NOTEQUAL expression
    (48) expression -> expression . DOUBLEQUAL expression
    (49) expression -> expression . AND expression
    (50) expression -> expression . OR expression
    (52) expression -> expression . DOUBLEPLUS
    (53) expression -> expression . DOUBLEMINUS

    SCOLON          reduce using rule 34 (variableassign -> VARID EQUAL expression .)
    RPAREN          reduce using rule 34 (variableassign -> VARID EQUAL expression .)
    PLUS            shift and go to state 33
    MINUS           shift and go to state 34
    MULTIPLY        shift and go to state 35
    DIVIDE          shift and go to state 36
    MOD             shift and go to state 37
    POWER           shift and go to state 38
    LESSER          shift and go to state 39
    GREATER         shift and go to state 40
    LESSEQUAL       shift and go to state 41
    GREATEQUAL      shift and go to state 42
    NOTEQUAL        shift and go to state 43
    DOUBLEQUAL      shift and go to state 44
    AND             shift and go to state 45
    OR              shift and go to state 46
    DOUBLEPLUS      shift and go to state 47
    DOUBLEMINUS     shift and go to state 48


state 86

    (26) block -> LCURL parent RCURL .

    MINUS           reduce using rule 26 (block -> LCURL parent RCURL .)
    LPAREN          reduce using rule 26 (block -> LCURL parent RCURL .)
    NOT             reduce using rule 26 (block -> LCURL parent RCURL .)
    VARID           reduce using rule 26 (block -> LCURL parent RCURL .)
    INT             reduce using rule 26 (block -> LCURL parent RCURL .)
    FLOAT           reduce using rule 26 (block -> LCURL parent RCURL .)
    BOOL            reduce using rule 26 (block -> LCURL parent RCURL .)
    CHAR            reduce using rule 26 (block -> LCURL parent RCURL .)
    STRING          reduce using rule 26 (block -> LCURL parent RCURL .)
    LCURL           reduce using rule 26 (block -> LCURL parent RCURL .)
    FOR             reduce using rule 26 (block -> LCURL parent RCURL .)
    STRUCT          reduce using rule 26 (block -> LCURL parent RCURL .)
    TYPE            reduce using rule 26 (block -> LCURL parent RCURL .)
    PRINT           reduce using rule 26 (block -> LCURL parent RCURL .)
    SCOLON          reduce using rule 26 (block -> LCURL parent RCURL .)
    PLUS            reduce using rule 26 (block -> LCURL parent RCURL .)
    MULTIPLY        reduce using rule 26 (block -> LCURL parent RCURL .)
    DIVIDE          reduce using rule 26 (block -> LCURL parent RCURL .)
    MOD             reduce using rule 26 (block -> LCURL parent RCURL .)
    POWER           reduce using rule 26 (block -> LCURL parent RCURL .)
    LESSER          reduce using rule 26 (block -> LCURL parent RCURL .)
    GREATER         reduce using rule 26 (block -> LCURL parent RCURL .)
    LESSEQUAL       reduce using rule 26 (block -> LCURL parent RCURL .)
    GREATEQUAL      reduce using rule 26 (block -> LCURL parent RCURL .)
    NOTEQUAL        reduce using rule 26 (block -> LCURL parent RCURL .)
    DOUBLEQUAL      reduce using rule 26 (block -> LCURL parent RCURL .)
    AND             reduce using rule 26 (block -> LCURL parent RCURL .)
    OR              reduce using rule 26 (block -> LCURL parent RCURL .)
    DOUBLEPLUS      reduce using rule 26 (block -> LCURL parent RCURL .)
    DOUBLEMINUS     reduce using rule 26 (block -> LCURL parent RCURL .)
    $end            reduce using rule 26 (block -> LCURL parent RCURL .)
    RCURL           reduce using rule 26 (block -> LCURL parent RCURL .)


state 87

    (27) for_loop -> FOR LPAREN TYPE . VARID EQUAL expression SCOLON expression SCOLON forupdate RPAREN block

    VARID           shift and go to state 94


state 88

    (35) type_assign -> TYPE VARID EQUAL . expression
    (36) expression -> . expression PLUS expression
    (37) expression -> . expression MINUS expression
    (38) expression -> . expression MULTIPLY expression
    (39) expression -> . expression DIVIDE expression
    (40) expression -> . MINUS expression
    (41) expression -> . expression MOD expression
    (42) expression -> . expression POWER expression
    (43) expression -> . expression LESSER expression
    (44) expression -> . expression GREATER expression
    (45) expression -> . expression LESSEQUAL expression
    (46) expression -> . expression GREATEQUAL expression
    (47) expression -> . expression NOTEQUAL expression
    (48) expression -> . expression DOUBLEQUAL expression
    (49) expression -> . expression AND expression
    (50) expression -> . expression OR expression
    (51) expression -> . LPAREN expression RPAREN
    (52) expression -> . expression DOUBLEPLUS
    (53) expression -> . expression DOUBLEMINUS
    (54) expression -> . NOT expression
    (55) expression -> . VARID
    (56) expression -> . INT
    (57) expression -> . FLOAT
    (58) expression -> . BOOL
    (59) expression -> . CHAR
    (60) expression -> . STRING
    (61) expression -> . empty
    (13) empty -> .

  ! shift/reduce conflict for MINUS resolved as shift
    MINUS           shift and go to state 13
    LPAREN          shift and go to state 14
    NOT             shift and go to state 15
    VARID           shift and go to state 56
    INT             shift and go to state 17
    FLOAT           shift and go to state 18
    BOOL            shift and go to state 19
    CHAR            shift and go to state 20
    STRING          shift and go to state 21
    PLUS            reduce using rule 13 (empty -> .)
    MULTIPLY        reduce using rule 13 (empty -> .)
    DIVIDE          reduce using rule 13 (empty -> .)
    MOD             reduce using rule 13 (empty -> .)
    POWER           reduce using rule 13 (empty -> .)
    LESSER          reduce using rule 13 (empty -> .)
    GREATER         reduce using rule 13 (empty -> .)
    LESSEQUAL       reduce using rule 13 (empty -> .)
    GREATEQUAL      reduce using rule 13 (empty -> .)
    NOTEQUAL        reduce using rule 13 (empty -> .)
    DOUBLEQUAL      reduce using rule 13 (empty -> .)
    AND             reduce using rule 13 (empty -> .)
    OR              reduce using rule 13 (empty -> .)
    DOUBLEPLUS      reduce using rule 13 (empty -> .)
    DOUBLEMINUS     reduce using rule 13 (empty -> .)
    SCOLON          reduce using rule 13 (empty -> .)

  ! MINUS           [ reduce using rule 13 (empty -> .) ]

    expression                     shift and go to state 95
    empty                          shift and go to state 57

state 89

    (20) struct -> STRUCT VARID LCURL . struct_block RCURL
    (21) struct_block -> . variables SCOLON
    (22) struct_block -> . variables SCOLON struct_block
    (28) variables -> . variableassign
    (29) variables -> . type_declare
    (30) variables -> . type_assign
    (34) variableassign -> . VARID EQUAL expression
    (33) type_declare -> . TYPE VARID
    (35) type_assign -> . TYPE VARID EQUAL expression

    VARID           shift and go to state 96
    TYPE            shift and go to state 28

    struct_block                   shift and go to state 97
    variables                      shift and go to state 98
    variableassign                 shift and go to state 22
    type_declare                   shift and go to state 23
    type_assign                    shift and go to state 24

state 90

    (15) print_multiple_stmt -> PRINT LPAREN multiple . RPAREN

    RPAREN          shift and go to state 99


state 91

    (16) multiple -> expression .
    (17) multiple -> expression . COMMA multiple
    (36) expression -> expression . PLUS expression
    (37) expression -> expression . MINUS expression
    (38) expression -> expression . MULTIPLY expression
    (39) expression -> expression . DIVIDE expression
    (41) expression -> expression . MOD expression
    (42) expression -> expression . POWER expression
    (43) expression -> expression . LESSER expression
    (44) expression -> expression . GREATER expression
    (45) expression -> expression . LESSEQUAL expression
    (46) expression -> expression . GREATEQUAL expression
    (47) expression -> expression . NOTEQUAL expression
    (48) expression -> expression . DOUBLEQUAL expression
    (49) expression -> expression . AND expression
    (50) expression -> expression . OR expression
    (52) expression -> expression . DOUBLEPLUS
    (53) expression -> expression . DOUBLEMINUS

    RPAREN          reduce using rule 16 (multiple -> expression .)
    COMMA           shift and go to state 100
    PLUS            shift and go to state 33
    MINUS           shift and go to state 34
    MULTIPLY        shift and go to state 35
    DIVIDE          shift and go to state 36
    MOD             shift and go to state 37
    POWER           shift and go to state 38
    LESSER          shift and go to state 39
    GREATER         shift and go to state 40
    LESSEQUAL       shift and go to state 41
    GREATEQUAL      shift and go to state 42
    NOTEQUAL        shift and go to state 43
    DOUBLEQUAL      shift and go to state 44
    AND             shift and go to state 45
    OR              shift and go to state 46
    DOUBLEPLUS      shift and go to state 47
    DOUBLEMINUS     shift and go to state 48


state 92

    (18) multiple -> struct_fetch .
    (19) multiple -> struct_fetch . COMMA multiple

    RPAREN          reduce using rule 18 (multiple -> struct_fetch .)
    COMMA           shift and go to state 101


state 93

    (55) expression -> VARID .
    (25) struct_fetch -> VARID . POINT VARID

    COMMA           reduce using rule 55 (expression -> VARID .)
    PLUS            reduce using rule 55 (expression -> VARID .)
    MINUS           reduce using rule 55 (expression -> VARID .)
    MULTIPLY        reduce using rule 55 (expression -> VARID .)
    DIVIDE          reduce using rule 55 (expression -> VARID .)
    MOD             reduce using rule 55 (expression -> VARID .)
    POWER           reduce using rule 55 (expression -> VARID .)
    LESSER          reduce using rule 55 (expression -> VARID .)
    GREATER         reduce using rule 55 (expression -> VARID .)
    LESSEQUAL       reduce using rule 55 (expression -> VARID .)
    GREATEQUAL      reduce using rule 55 (expression -> VARID .)
    NOTEQUAL        reduce using rule 55 (expression -> VARID .)
    DOUBLEQUAL      reduce using rule 55 (expression -> VARID .)
    AND             reduce using rule 55 (expression -> VARID .)
    OR              reduce using rule 55 (expression -> VARID .)
    DOUBLEPLUS      reduce using rule 55 (expression -> VARID .)
    DOUBLEMINUS     reduce using rule 55 (expression -> VARID .)
    RPAREN          reduce using rule 55 (expression -> VARID .)
    POINT           shift and go to state 102


state 94

    (27) for_loop -> FOR LPAREN TYPE VARID . EQUAL expression SCOLON expression SCOLON forupdate RPAREN block

    EQUAL           shift and go to state 103


state 95

    (35) type_assign -> TYPE VARID EQUAL expression .
    (36) expression -> expression . PLUS expression
    (37) expression -> expression . MINUS expression
    (38) expression -> expression . MULTIPLY expression
    (39) expression -> expression . DIVIDE expression
    (41) expression -> expression . MOD expression
    (42) expression -> expression . POWER expression
    (43) expression -> expression . LESSER expression
    (44) expression -> expression . GREATER expression
    (45) expression -> expression . LESSEQUAL expression
    (46) expression -> expression . GREATEQUAL expression
    (47) expression -> expression . NOTEQUAL expression
    (48) expression -> expression . DOUBLEQUAL expression
    (49) expression -> expression . AND expression
    (50) expression -> expression . OR expression
    (52) expression -> expression . DOUBLEPLUS
    (53) expression -> expression . DOUBLEMINUS

    SCOLON          reduce using rule 35 (type_assign -> TYPE VARID EQUAL expression .)
    PLUS            shift and go to state 33
    MINUS           shift and go to state 34
    MULTIPLY        shift and go to state 35
    DIVIDE          shift and go to state 36
    MOD             shift and go to state 37
    POWER           shift and go to state 38
    LESSER          shift and go to state 39
    GREATER         shift and go to state 40
    LESSEQUAL       shift and go to state 41
    GREATEQUAL      shift and go to state 42
    NOTEQUAL        shift and go to state 43
    DOUBLEQUAL      shift and go to state 44
    AND             shift and go to state 45
    OR              shift and go to state 46
    DOUBLEPLUS      shift and go to state 47
    DOUBLEMINUS     shift and go to state 48


state 96

    (34) variableassign -> VARID . EQUAL expression

    EQUAL           shift and go to state 62


state 97

    (20) struct -> STRUCT VARID LCURL struct_block . RCURL

    RCURL           shift and go to state 104


state 98

    (21) struct_block -> variables . SCOLON
    (22) struct_block -> variables . SCOLON struct_block

    SCOLON          shift and go to state 105


state 99

    (15) print_multiple_stmt -> PRINT LPAREN multiple RPAREN .

    SCOLON          reduce using rule 15 (print_multiple_stmt -> PRINT LPAREN multiple RPAREN .)


state 100

    (17) multiple -> expression COMMA . multiple
    (16) multiple -> . expression
    (17) multiple -> . expression COMMA multiple
    (18) multiple -> . struct_fetch
    (19) multiple -> . struct_fetch COMMA multiple
    (36) expression -> . expression PLUS expression
    (37) expression -> . expression MINUS expression
    (38) expression -> . expression MULTIPLY expression
    (39) expression -> . expression DIVIDE expression
    (40) expression -> . MINUS expression
    (41) expression -> . expression MOD expression
    (42) expression -> . expression POWER expression
    (43) expression -> . expression LESSER expression
    (44) expression -> . expression GREATER expression
    (45) expression -> . expression LESSEQUAL expression
    (46) expression -> . expression GREATEQUAL expression
    (47) expression -> . expression NOTEQUAL expression
    (48) expression -> . expression DOUBLEQUAL expression
    (49) expression -> . expression AND expression
    (50) expression -> . expression OR expression
    (51) expression -> . LPAREN expression RPAREN
    (52) expression -> . expression DOUBLEPLUS
    (53) expression -> . expression DOUBLEMINUS
    (54) expression -> . NOT expression
    (55) expression -> . VARID
    (56) expression -> . INT
    (57) expression -> . FLOAT
    (58) expression -> . BOOL
    (59) expression -> . CHAR
    (60) expression -> . STRING
    (61) expression -> . empty
    (25) struct_fetch -> . VARID POINT VARID
    (13) empty -> .

  ! shift/reduce conflict for MINUS resolved as shift
    MINUS           shift and go to state 13
    LPAREN          shift and go to state 14
    NOT             shift and go to state 15
    VARID           shift and go to state 93
    INT             shift and go to state 17
    FLOAT           shift and go to state 18
    BOOL            shift and go to state 19
    CHAR            shift and go to state 20
    STRING          shift and go to state 21
    COMMA           reduce using rule 13 (empty -> .)
    PLUS            reduce using rule 13 (empty -> .)
    MULTIPLY        reduce using rule 13 (empty -> .)
    DIVIDE          reduce using rule 13 (empty -> .)
    MOD             reduce using rule 13 (empty -> .)
    POWER           reduce using rule 13 (empty -> .)
    LESSER          reduce using rule 13 (empty -> .)
    GREATER         reduce using rule 13 (empty -> .)
    LESSEQUAL       reduce using rule 13 (empty -> .)
    GREATEQUAL      reduce using rule 13 (empty -> .)
    NOTEQUAL        reduce using rule 13 (empty -> .)
    DOUBLEQUAL      reduce using rule 13 (empty -> .)
    AND             reduce using rule 13 (empty -> .)
    OR              reduce using rule 13 (empty -> .)
    DOUBLEPLUS      reduce using rule 13 (empty -> .)
    DOUBLEMINUS     reduce using rule 13 (empty -> .)
    RPAREN          reduce using rule 13 (empty -> .)

  ! MINUS           [ reduce using rule 13 (empty -> .) ]

    expression                     shift and go to state 91
    multiple                       shift and go to state 106
    struct_fetch                   shift and go to state 92
    empty                          shift and go to state 57

state 101

    (19) multiple -> struct_fetch COMMA . multiple
    (16) multiple -> . expression
    (17) multiple -> . expression COMMA multiple
    (18) multiple -> . struct_fetch
    (19) multiple -> . struct_fetch COMMA multiple
    (36) expression -> . expression PLUS expression
    (37) expression -> . expression MINUS expression
    (38) expression -> . expression MULTIPLY expression
    (39) expression -> . expression DIVIDE expression
    (40) expression -> . MINUS expression
    (41) expression -> . expression MOD expression
    (42) expression -> . expression POWER expression
    (43) expression -> . expression LESSER expression
    (44) expression -> . expression GREATER expression
    (45) expression -> . expression LESSEQUAL expression
    (46) expression -> . expression GREATEQUAL expression
    (47) expression -> . expression NOTEQUAL expression
    (48) expression -> . expression DOUBLEQUAL expression
    (49) expression -> . expression AND expression
    (50) expression -> . expression OR expression
    (51) expression -> . LPAREN expression RPAREN
    (52) expression -> . expression DOUBLEPLUS
    (53) expression -> . expression DOUBLEMINUS
    (54) expression -> . NOT expression
    (55) expression -> . VARID
    (56) expression -> . INT
    (57) expression -> . FLOAT
    (58) expression -> . BOOL
    (59) expression -> . CHAR
    (60) expression -> . STRING
    (61) expression -> . empty
    (25) struct_fetch -> . VARID POINT VARID
    (13) empty -> .

  ! shift/reduce conflict for MINUS resolved as shift
    MINUS           shift and go to state 13
    LPAREN          shift and go to state 14
    NOT             shift and go to state 15
    VARID           shift and go to state 93
    INT             shift and go to state 17
    FLOAT           shift and go to state 18
    BOOL            shift and go to state 19
    CHAR            shift and go to state 20
    STRING          shift and go to state 21
    COMMA           reduce using rule 13 (empty -> .)
    PLUS            reduce using rule 13 (empty -> .)
    MULTIPLY        reduce using rule 13 (empty -> .)
    DIVIDE          reduce using rule 13 (empty -> .)
    MOD             reduce using rule 13 (empty -> .)
    POWER           reduce using rule 13 (empty -> .)
    LESSER          reduce using rule 13 (empty -> .)
    GREATER         reduce using rule 13 (empty -> .)
    LESSEQUAL       reduce using rule 13 (empty -> .)
    GREATEQUAL      reduce using rule 13 (empty -> .)
    NOTEQUAL        reduce using rule 13 (empty -> .)
    DOUBLEQUAL      reduce using rule 13 (empty -> .)
    AND             reduce using rule 13 (empty -> .)
    OR              reduce using rule 13 (empty -> .)
    DOUBLEPLUS      reduce using rule 13 (empty -> .)
    DOUBLEMINUS     reduce using rule 13 (empty -> .)
    RPAREN          reduce using rule 13 (empty -> .)

  ! MINUS           [ reduce using rule 13 (empty -> .) ]

    struct_fetch                   shift and go to state 92
    multiple                       shift and go to state 107
    expression                     shift and go to state 91
    empty                          shift and go to state 57

state 102

    (25) struct_fetch -> VARID POINT . VARID

    VARID           shift and go to state 108


state 103

    (27) for_loop -> FOR LPAREN TYPE VARID EQUAL . expression SCOLON expression SCOLON forupdate RPAREN block
    (36) expression -> . expression PLUS expression
    (37) expression -> . expression MINUS expression
    (38) expression -> . expression MULTIPLY expression
    (39) expression -> . expression DIVIDE expression
    (40) expression -> . MINUS expression
    (41) expression -> . expression MOD expression
    (42) expression -> . expression POWER expression
    (43) expression -> . expression LESSER expression
    (44) expression -> . expression GREATER expression
    (45) expression -> . expression LESSEQUAL expression
    (46) expression -> . expression GREATEQUAL expression
    (47) expression -> . expression NOTEQUAL expression
    (48) expression -> . expression DOUBLEQUAL expression
    (49) expression -> . expression AND expression
    (50) expression -> . expression OR expression
    (51) expression -> . LPAREN expression RPAREN
    (52) expression -> . expression DOUBLEPLUS
    (53) expression -> . expression DOUBLEMINUS
    (54) expression -> . NOT expression
    (55) expression -> . VARID
    (56) expression -> . INT
    (57) expression -> . FLOAT
    (58) expression -> . BOOL
    (59) expression -> . CHAR
    (60) expression -> . STRING
    (61) expression -> . empty
    (13) empty -> .

  ! shift/reduce conflict for MINUS resolved as shift
    MINUS           shift and go to state 13
    LPAREN          shift and go to state 14
    NOT             shift and go to state 15
    VARID           shift and go to state 56
    INT             shift and go to state 17
    FLOAT           shift and go to state 18
    BOOL            shift and go to state 19
    CHAR            shift and go to state 20
    STRING          shift and go to state 21
    SCOLON          reduce using rule 13 (empty -> .)
    PLUS            reduce using rule 13 (empty -> .)
    MULTIPLY        reduce using rule 13 (empty -> .)
    DIVIDE          reduce using rule 13 (empty -> .)
    MOD             reduce using rule 13 (empty -> .)
    POWER           reduce using rule 13 (empty -> .)
    LESSER          reduce using rule 13 (empty -> .)
    GREATER         reduce using rule 13 (empty -> .)
    LESSEQUAL       reduce using rule 13 (empty -> .)
    GREATEQUAL      reduce using rule 13 (empty -> .)
    NOTEQUAL        reduce using rule 13 (empty -> .)
    DOUBLEQUAL      reduce using rule 13 (empty -> .)
    AND             reduce using rule 13 (empty -> .)
    OR              reduce using rule 13 (empty -> .)
    DOUBLEPLUS      reduce using rule 13 (empty -> .)
    DOUBLEMINUS     reduce using rule 13 (empty -> .)

  ! MINUS           [ reduce using rule 13 (empty -> .) ]

    expression                     shift and go to state 109
    empty                          shift and go to state 57

state 104

    (20) struct -> STRUCT VARID LCURL struct_block RCURL .

    SCOLON          reduce using rule 20 (struct -> STRUCT VARID LCURL struct_block RCURL .)


state 105

    (21) struct_block -> variables SCOLON .
    (22) struct_block -> variables SCOLON . struct_block
    (21) struct_block -> . variables SCOLON
    (22) struct_block -> . variables SCOLON struct_block
    (28) variables -> . variableassign
    (29) variables -> . type_declare
    (30) variables -> . type_assign
    (34) variableassign -> . VARID EQUAL expression
    (33) type_declare -> . TYPE VARID
    (35) type_assign -> . TYPE VARID EQUAL expression

    RCURL           reduce using rule 21 (struct_block -> variables SCOLON .)
    VARID           shift and go to state 96
    TYPE            shift and go to state 28

    variables                      shift and go to state 98
    struct_block                   shift and go to state 110
    variableassign                 shift and go to state 22
    type_declare                   shift and go to state 23
    type_assign                    shift and go to state 24

state 106

    (17) multiple -> expression COMMA multiple .

    RPAREN          reduce using rule 17 (multiple -> expression COMMA multiple .)


state 107

    (19) multiple -> struct_fetch COMMA multiple .

    RPAREN          reduce using rule 19 (multiple -> struct_fetch COMMA multiple .)


state 108

    (25) struct_fetch -> VARID POINT VARID .

    COMMA           reduce using rule 25 (struct_fetch -> VARID POINT VARID .)
    RPAREN          reduce using rule 25 (struct_fetch -> VARID POINT VARID .)


state 109

    (27) for_loop -> FOR LPAREN TYPE VARID EQUAL expression . SCOLON expression SCOLON forupdate RPAREN block
    (36) expression -> expression . PLUS expression
    (37) expression -> expression . MINUS expression
    (38) expression -> expression . MULTIPLY expression
    (39) expression -> expression . DIVIDE expression
    (41) expression -> expression . MOD expression
    (42) expression -> expression . POWER expression
    (43) expression -> expression . LESSER expression
    (44) expression -> expression . GREATER expression
    (45) expression -> expression . LESSEQUAL expression
    (46) expression -> expression . GREATEQUAL expression
    (47) expression -> expression . NOTEQUAL expression
    (48) expression -> expression . DOUBLEQUAL expression
    (49) expression -> expression . AND expression
    (50) expression -> expression . OR expression
    (52) expression -> expression . DOUBLEPLUS
    (53) expression -> expression . DOUBLEMINUS

    SCOLON          shift and go to state 111
    PLUS            shift and go to state 33
    MINUS           shift and go to state 34
    MULTIPLY        shift and go to state 35
    DIVIDE          shift and go to state 36
    MOD             shift and go to state 37
    POWER           shift and go to state 38
    LESSER          shift and go to state 39
    GREATER         shift and go to state 40
    LESSEQUAL       shift and go to state 41
    GREATEQUAL      shift and go to state 42
    NOTEQUAL        shift and go to state 43
    DOUBLEQUAL      shift and go to state 44
    AND             shift and go to state 45
    OR              shift and go to state 46
    DOUBLEPLUS      shift and go to state 47
    DOUBLEMINUS     shift and go to state 48


state 110

    (22) struct_block -> variables SCOLON struct_block .

    RCURL           reduce using rule 22 (struct_block -> variables SCOLON struct_block .)


state 111

    (27) for_loop -> FOR LPAREN TYPE VARID EQUAL expression SCOLON . expression SCOLON forupdate RPAREN block
    (36) expression -> . expression PLUS expression
    (37) expression -> . expression MINUS expression
    (38) expression -> . expression MULTIPLY expression
    (39) expression -> . expression DIVIDE expression
    (40) expression -> . MINUS expression
    (41) expression -> . expression MOD expression
    (42) expression -> . expression POWER expression
    (43) expression -> . expression LESSER expression
    (44) expression -> . expression GREATER expression
    (45) expression -> . expression LESSEQUAL expression
    (46) expression -> . expression GREATEQUAL expression
    (47) expression -> . expression NOTEQUAL expression
    (48) expression -> . expression DOUBLEQUAL expression
    (49) expression -> . expression AND expression
    (50) expression -> . expression OR expression
    (51) expression -> . LPAREN expression RPAREN
    (52) expression -> . expression DOUBLEPLUS
    (53) expression -> . expression DOUBLEMINUS
    (54) expression -> . NOT expression
    (55) expression -> . VARID
    (56) expression -> . INT
    (57) expression -> . FLOAT
    (58) expression -> . BOOL
    (59) expression -> . CHAR
    (60) expression -> . STRING
    (61) expression -> . empty
    (13) empty -> .

  ! shift/reduce conflict for MINUS resolved as shift
    MINUS           shift and go to state 13
    LPAREN          shift and go to state 14
    NOT             shift and go to state 15
    VARID           shift and go to state 56
    INT             shift and go to state 17
    FLOAT           shift and go to state 18
    BOOL            shift and go to state 19
    CHAR            shift and go to state 20
    STRING          shift and go to state 21
    SCOLON          reduce using rule 13 (empty -> .)
    PLUS            reduce using rule 13 (empty -> .)
    MULTIPLY        reduce using rule 13 (empty -> .)
    DIVIDE          reduce using rule 13 (empty -> .)
    MOD             reduce using rule 13 (empty -> .)
    POWER           reduce using rule 13 (empty -> .)
    LESSER          reduce using rule 13 (empty -> .)
    GREATER         reduce using rule 13 (empty -> .)
    LESSEQUAL       reduce using rule 13 (empty -> .)
    GREATEQUAL      reduce using rule 13 (empty -> .)
    NOTEQUAL        reduce using rule 13 (empty -> .)
    DOUBLEQUAL      reduce using rule 13 (empty -> .)
    AND             reduce using rule 13 (empty -> .)
    OR              reduce using rule 13 (empty -> .)
    DOUBLEPLUS      reduce using rule 13 (empty -> .)
    DOUBLEMINUS     reduce using rule 13 (empty -> .)

  ! MINUS           [ reduce using rule 13 (empty -> .) ]

    expression                     shift and go to state 112
    empty                          shift and go to state 57

state 112

    (27) for_loop -> FOR LPAREN TYPE VARID EQUAL expression SCOLON expression . SCOLON forupdate RPAREN block
    (36) expression -> expression . PLUS expression
    (37) expression -> expression . MINUS expression
    (38) expression -> expression . MULTIPLY expression
    (39) expression -> expression . DIVIDE expression
    (41) expression -> expression . MOD expression
    (42) expression -> expression . POWER expression
    (43) expression -> expression . LESSER expression
    (44) expression -> expression . GREATER expression
    (45) expression -> expression . LESSEQUAL expression
    (46) expression -> expression . GREATEQUAL expression
    (47) expression -> expression . NOTEQUAL expression
    (48) expression -> expression . DOUBLEQUAL expression
    (49) expression -> expression . AND expression
    (50) expression -> expression . OR expression
    (52) expression -> expression . DOUBLEPLUS
    (53) expression -> expression . DOUBLEMINUS

    SCOLON          shift and go to state 113
    PLUS            shift and go to state 33
    MINUS           shift and go to state 34
    MULTIPLY        shift and go to state 35
    DIVIDE          shift and go to state 36
    MOD             shift and go to state 37
    POWER           shift and go to state 38
    LESSER          shift and go to state 39
    GREATER         shift and go to state 40
    LESSEQUAL       shift and go to state 41
    GREATEQUAL      shift and go to state 42
    NOTEQUAL        shift and go to state 43
    DOUBLEQUAL      shift and go to state 44
    AND             shift and go to state 45
    OR              shift and go to state 46
    DOUBLEPLUS      shift and go to state 47
    DOUBLEMINUS     shift and go to state 48


state 113

    (27) for_loop -> FOR LPAREN TYPE VARID EQUAL expression SCOLON expression SCOLON . forupdate RPAREN block
    (31) forupdate -> . expression
    (32) forupdate -> . variableassign
    (36) expression -> . expression PLUS expression
    (37) expression -> . expression MINUS expression
    (38) expression -> . expression MULTIPLY expression
    (39) expression -> . expression DIVIDE expression
    (40) expression -> . MINUS expression
    (41) expression -> . expression MOD expression
    (42) expression -> . expression POWER expression
    (43) expression -> . expression LESSER expression
    (44) expression -> . expression GREATER expression
    (45) expression -> . expression LESSEQUAL expression
    (46) expression -> . expression GREATEQUAL expression
    (47) expression -> . expression NOTEQUAL expression
    (48) expression -> . expression DOUBLEQUAL expression
    (49) expression -> . expression AND expression
    (50) expression -> . expression OR expression
    (51) expression -> . LPAREN expression RPAREN
    (52) expression -> . expression DOUBLEPLUS
    (53) expression -> . expression DOUBLEMINUS
    (54) expression -> . NOT expression
    (55) expression -> . VARID
    (56) expression -> . INT
    (57) expression -> . FLOAT
    (58) expression -> . BOOL
    (59) expression -> . CHAR
    (60) expression -> . STRING
    (61) expression -> . empty
    (34) variableassign -> . VARID EQUAL expression
    (13) empty -> .

  ! shift/reduce conflict for MINUS resolved as shift
    MINUS           shift and go to state 13
    LPAREN          shift and go to state 14
    NOT             shift and go to state 15
    VARID           shift and go to state 114
    INT             shift and go to state 17
    FLOAT           shift and go to state 18
    BOOL            shift and go to state 19
    CHAR            shift and go to state 20
    STRING          shift and go to state 21
    PLUS            reduce using rule 13 (empty -> .)
    MULTIPLY        reduce using rule 13 (empty -> .)
    DIVIDE          reduce using rule 13 (empty -> .)
    MOD             reduce using rule 13 (empty -> .)
    POWER           reduce using rule 13 (empty -> .)
    LESSER          reduce using rule 13 (empty -> .)
    GREATER         reduce using rule 13 (empty -> .)
    LESSEQUAL       reduce using rule 13 (empty -> .)
    GREATEQUAL      reduce using rule 13 (empty -> .)
    NOTEQUAL        reduce using rule 13 (empty -> .)
    DOUBLEQUAL      reduce using rule 13 (empty -> .)
    AND             reduce using rule 13 (empty -> .)
    OR              reduce using rule 13 (empty -> .)
    DOUBLEPLUS      reduce using rule 13 (empty -> .)
    DOUBLEMINUS     reduce using rule 13 (empty -> .)
    RPAREN          reduce using rule 13 (empty -> .)

  ! MINUS           [ reduce using rule 13 (empty -> .) ]

    expression                     shift and go to state 115
    forupdate                      shift and go to state 116
    variableassign                 shift and go to state 117
    empty                          shift and go to state 57

state 114

    (55) expression -> VARID .
    (34) variableassign -> VARID . EQUAL expression

    PLUS            reduce using rule 55 (expression -> VARID .)
    MINUS           reduce using rule 55 (expression -> VARID .)
    MULTIPLY        reduce using rule 55 (expression -> VARID .)
    DIVIDE          reduce using rule 55 (expression -> VARID .)
    MOD             reduce using rule 55 (expression -> VARID .)
    POWER           reduce using rule 55 (expression -> VARID .)
    LESSER          reduce using rule 55 (expression -> VARID .)
    GREATER         reduce using rule 55 (expression -> VARID .)
    LESSEQUAL       reduce using rule 55 (expression -> VARID .)
    GREATEQUAL      reduce using rule 55 (expression -> VARID .)
    NOTEQUAL        reduce using rule 55 (expression -> VARID .)
    DOUBLEQUAL      reduce using rule 55 (expression -> VARID .)
    AND             reduce using rule 55 (expression -> VARID .)
    OR              reduce using rule 55 (expression -> VARID .)
    DOUBLEPLUS      reduce using rule 55 (expression -> VARID .)
    DOUBLEMINUS     reduce using rule 55 (expression -> VARID .)
    RPAREN          reduce using rule 55 (expression -> VARID .)
    EQUAL           shift and go to state 62


state 115

    (31) forupdate -> expression .
    (36) expression -> expression . PLUS expression
    (37) expression -> expression . MINUS expression
    (38) expression -> expression . MULTIPLY expression
    (39) expression -> expression . DIVIDE expression
    (41) expression -> expression . MOD expression
    (42) expression -> expression . POWER expression
    (43) expression -> expression . LESSER expression
    (44) expression -> expression . GREATER expression
    (45) expression -> expression . LESSEQUAL expression
    (46) expression -> expression . GREATEQUAL expression
    (47) expression -> expression . NOTEQUAL expression
    (48) expression -> expression . DOUBLEQUAL expression
    (49) expression -> expression . AND expression
    (50) expression -> expression . OR expression
    (52) expression -> expression . DOUBLEPLUS
    (53) expression -> expression . DOUBLEMINUS

    RPAREN          reduce using rule 31 (forupdate -> expression .)
    PLUS            shift and go to state 33
    MINUS           shift and go to state 34
    MULTIPLY        shift and go to state 35
    DIVIDE          shift and go to state 36
    MOD             shift and go to state 37
    POWER           shift and go to state 38
    LESSER          shift and go to state 39
    GREATER         shift and go to state 40
    LESSEQUAL       shift and go to state 41
    GREATEQUAL      shift and go to state 42
    NOTEQUAL        shift and go to state 43
    DOUBLEQUAL      shift and go to state 44
    AND             shift and go to state 45
    OR              shift and go to state 46
    DOUBLEPLUS      shift and go to state 47
    DOUBLEMINUS     shift and go to state 48


state 116

    (27) for_loop -> FOR LPAREN TYPE VARID EQUAL expression SCOLON expression SCOLON forupdate . RPAREN block

    RPAREN          shift and go to state 118


state 117

    (32) forupdate -> variableassign .

    RPAREN          reduce using rule 32 (forupdate -> variableassign .)


state 118

    (27) for_loop -> FOR LPAREN TYPE VARID EQUAL expression SCOLON expression SCOLON forupdate RPAREN . block
    (26) block -> . LCURL parent RCURL

    LCURL           shift and go to state 26

    block                          shift and go to state 119

state 119

    (27) for_loop -> FOR LPAREN TYPE VARID EQUAL expression SCOLON expression SCOLON forupdate RPAREN block .

    MINUS           reduce using rule 27 (for_loop -> FOR LPAREN TYPE VARID EQUAL expression SCOLON expression SCOLON forupdate RPAREN block .)
    LPAREN          reduce using rule 27 (for_loop -> FOR LPAREN TYPE VARID EQUAL expression SCOLON expression SCOLON forupdate RPAREN block .)
    NOT             reduce using rule 27 (for_loop -> FOR LPAREN TYPE VARID EQUAL expression SCOLON expression SCOLON forupdate RPAREN block .)
    VARID           reduce using rule 27 (for_loop -> FOR LPAREN TYPE VARID EQUAL expression SCOLON expression SCOLON forupdate RPAREN block .)
    INT             reduce using rule 27 (for_loop -> FOR LPAREN TYPE VARID EQUAL expression SCOLON expression SCOLON forupdate RPAREN block .)
    FLOAT           reduce using rule 27 (for_loop -> FOR LPAREN TYPE VARID EQUAL expression SCOLON expression SCOLON forupdate RPAREN block .)
    BOOL            reduce using rule 27 (for_loop -> FOR LPAREN TYPE VARID EQUAL expression SCOLON expression SCOLON forupdate RPAREN block .)
    CHAR            reduce using rule 27 (for_loop -> FOR LPAREN TYPE VARID EQUAL expression SCOLON expression SCOLON forupdate RPAREN block .)
    STRING          reduce using rule 27 (for_loop -> FOR LPAREN TYPE VARID EQUAL expression SCOLON expression SCOLON forupdate RPAREN block .)
    LCURL           reduce using rule 27 (for_loop -> FOR LPAREN TYPE VARID EQUAL expression SCOLON expression SCOLON forupdate RPAREN block .)
    FOR             reduce using rule 27 (for_loop -> FOR LPAREN TYPE VARID EQUAL expression SCOLON expression SCOLON forupdate RPAREN block .)
    STRUCT          reduce using rule 27 (for_loop -> FOR LPAREN TYPE VARID EQUAL expression SCOLON expression SCOLON forupdate RPAREN block .)
    TYPE            reduce using rule 27 (for_loop -> FOR LPAREN TYPE VARID EQUAL expression SCOLON expression SCOLON forupdate RPAREN block .)
    PRINT           reduce using rule 27 (for_loop -> FOR LPAREN TYPE VARID EQUAL expression SCOLON expression SCOLON forupdate RPAREN block .)
    SCOLON          reduce using rule 27 (for_loop -> FOR LPAREN TYPE VARID EQUAL expression SCOLON expression SCOLON forupdate RPAREN block .)
    PLUS            reduce using rule 27 (for_loop -> FOR LPAREN TYPE VARID EQUAL expression SCOLON expression SCOLON forupdate RPAREN block .)
    MULTIPLY        reduce using rule 27 (for_loop -> FOR LPAREN TYPE VARID EQUAL expression SCOLON expression SCOLON forupdate RPAREN block .)
    DIVIDE          reduce using rule 27 (for_loop -> FOR LPAREN TYPE VARID EQUAL expression SCOLON expression SCOLON forupdate RPAREN block .)
    MOD             reduce using rule 27 (for_loop -> FOR LPAREN TYPE VARID EQUAL expression SCOLON expression SCOLON forupdate RPAREN block .)
    POWER           reduce using rule 27 (for_loop -> FOR LPAREN TYPE VARID EQUAL expression SCOLON expression SCOLON forupdate RPAREN block .)
    LESSER          reduce using rule 27 (for_loop -> FOR LPAREN TYPE VARID EQUAL expression SCOLON expression SCOLON forupdate RPAREN block .)
    GREATER         reduce using rule 27 (for_loop -> FOR LPAREN TYPE VARID EQUAL expression SCOLON expression SCOLON forupdate RPAREN block .)
    LESSEQUAL       reduce using rule 27 (for_loop -> FOR LPAREN TYPE VARID EQUAL expression SCOLON expression SCOLON forupdate RPAREN block .)
    GREATEQUAL      reduce using rule 27 (for_loop -> FOR LPAREN TYPE VARID EQUAL expression SCOLON expression SCOLON forupdate RPAREN block .)
    NOTEQUAL        reduce using rule 27 (for_loop -> FOR LPAREN TYPE VARID EQUAL expression SCOLON expression SCOLON forupdate RPAREN block .)
    DOUBLEQUAL      reduce using rule 27 (for_loop -> FOR LPAREN TYPE VARID EQUAL expression SCOLON expression SCOLON forupdate RPAREN block .)
    AND             reduce using rule 27 (for_loop -> FOR LPAREN TYPE VARID EQUAL expression SCOLON expression SCOLON forupdate RPAREN block .)
    OR              reduce using rule 27 (for_loop -> FOR LPAREN TYPE VARID EQUAL expression SCOLON expression SCOLON forupdate RPAREN block .)
    DOUBLEPLUS      reduce using rule 27 (for_loop -> FOR LPAREN TYPE VARID EQUAL expression SCOLON expression SCOLON forupdate RPAREN block .)
    DOUBLEMINUS     reduce using rule 27 (for_loop -> FOR LPAREN TYPE VARID EQUAL expression SCOLON expression SCOLON forupdate RPAREN block .)
    $end            reduce using rule 27 (for_loop -> FOR LPAREN TYPE VARID EQUAL expression SCOLON expression SCOLON forupdate RPAREN block .)
    RCURL           reduce using rule 27 (for_loop -> FOR LPAREN TYPE VARID EQUAL expression SCOLON expression SCOLON forupdate RPAREN block .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for MINUS in state 0 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 0 resolved as shift
WARNING: shift/reduce conflict for NOT in state 0 resolved as shift
WARNING: shift/reduce conflict for VARID in state 0 resolved as shift
WARNING: shift/reduce conflict for INT in state 0 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 0 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 0 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 0 resolved as shift
WARNING: shift/reduce conflict for STRING in state 0 resolved as shift
WARNING: shift/reduce conflict for LCURL in state 0 resolved as shift
WARNING: shift/reduce conflict for FOR in state 0 resolved as shift
WARNING: shift/reduce conflict for STRUCT in state 0 resolved as shift
WARNING: shift/reduce conflict for TYPE in state 0 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 0 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 2 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 2 resolved as shift
WARNING: shift/reduce conflict for NOT in state 2 resolved as shift
WARNING: shift/reduce conflict for VARID in state 2 resolved as shift
WARNING: shift/reduce conflict for INT in state 2 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 2 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 2 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 2 resolved as shift
WARNING: shift/reduce conflict for STRING in state 2 resolved as shift
WARNING: shift/reduce conflict for LCURL in state 2 resolved as shift
WARNING: shift/reduce conflict for FOR in state 2 resolved as shift
WARNING: shift/reduce conflict for STRUCT in state 2 resolved as shift
WARNING: shift/reduce conflict for TYPE in state 2 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 2 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 13 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 14 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 15 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 26 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 26 resolved as shift
WARNING: shift/reduce conflict for NOT in state 26 resolved as shift
WARNING: shift/reduce conflict for VARID in state 26 resolved as shift
WARNING: shift/reduce conflict for INT in state 26 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 26 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 26 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 26 resolved as shift
WARNING: shift/reduce conflict for STRING in state 26 resolved as shift
WARNING: shift/reduce conflict for LCURL in state 26 resolved as shift
WARNING: shift/reduce conflict for FOR in state 26 resolved as shift
WARNING: shift/reduce conflict for STRUCT in state 26 resolved as shift
WARNING: shift/reduce conflict for TYPE in state 26 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 26 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 33 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 34 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 35 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 36 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 37 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 38 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 39 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 40 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 41 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 42 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 43 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 44 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 45 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 46 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 62 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 67 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 88 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 100 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 101 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 103 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 111 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 113 resolved as shift
WARNING: reduce/reduce conflict in state 2 resolved using rule (parent -> lang)
WARNING: rejected rule (empty -> <empty>) in state 2
WARNING: reduce/reduce conflict in state 12 resolved using rule (lang -> empty)
WARNING: rejected rule (expression -> empty) in state 12
